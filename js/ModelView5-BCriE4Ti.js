var e=Object.defineProperty,n=(n,a,t)=>((n,a,t)=>a in n?e(n,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[a]=t)(n,"symbol"!=typeof a?a+"":a,t);import{B as a}from"./base-Vw92jU6n.js";import{s as t,k as s,V as i,t as o,u as r,D as c,A as m,v as l,b as v,W as h,p as d,n as u,o as p,a1 as w,ac as g,G as f,C as b,a2 as x,ap as y,q as M,x as U,av as C,ao as j,aw as T,an as k}from"./three-CO0a1xEL.js";import{d as P,z as _,A as B,g as O,j as D,F,o as I}from"./@vue-B4sUqkWa.js";import{_ as N}from"./index-oMH87nD4.js";import"./pinia-C4SihLJg.js";import"./vue-router-CANWKAPm.js";const S=N(P({__name:"ModelView5",setup(e){const P=new class extends a{constructor(){super(),n(this,"cubeCamera"),n(this,"material"),n(this,"planeCubeCamera"),n(this,"composer"),n(this,"selects",[])}load(){var e;this.init("#webgl"),this.animate(),this.create(),this.light({x:100,y:100}),this.light({type:"DirectionalLight",x:100,y:100}),this.light({type:"AmbientLight",x:100,y:100}),this.createPlane();const n=new t;n.add(new s(new i(-1500,0,0),new i(1500,0,0)));const a=new o(n,128,250,8,!1);this.material=new r({side:c,uniforms:{uTime:{value:0}},vertexShader:"\n        varying vec2 vUv;\n\n        void main(){\n          vUv = uv;\n          vec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        uniform float uTime;\n\n        // https://www.shadertoy.com/view/Msf3WH\n        vec2 hash(vec2 p)// replace this by something better\n        {\n            p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\n            return-1.+2.*fract(sin(p)*43758.5453123);\n        }\n\n        float noise(in vec2 p)\n        {\n            const float K1=.366025404;// (sqrt(3)-1)/2;\n            const float K2=.211324865;// (3-sqrt(3))/6;\n\n            vec2 i=floor(p+(p.x+p.y)*K1);\n            vec2 a=p-i+(i.x+i.y)*K2;\n            float m=step(a.y,a.x);\n            vec2 o=vec2(m,1.-m);\n            vec2 b=a-o+K2;\n            vec2 c=a-1.+2.*K2;\n            vec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\n            vec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\n            return dot(n,vec3(70.));\n        }\n        vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n        {\n            return a + b*cos( 6.283185*(c*t+d) );\n        }\n\n        void main(){\n          vec2 noiseUv = vUv;\n          // noiseUv.x+=uTime*.5;\n          noiseUv.x = mod((vUv.x-uTime) * 1.0 , 1.0);\n\n          //  noiseUv.x = fract(mod((vUv.x+uTime), 1.0)*2.0);\n\n          float mask = noise(noiseUv * vec2(5.0,100.0));\n          mask = smoothstep(0.20,0.5,mask);\n          // mask = step(0.5,mask);\n          // mask = pow(mask, 2.0);\n          // mask = 1.0 - mask;\n\n          mask *= smoothstep(0.00,0.5,vUv.x)*smoothstep(0.00,0.5,1.0-vUv.x);\n          mask *= smoothstep(0.20,0.5,vUv.y)*smoothstep(0.20,0.5,1.0-vUv.y);\n\n          vec3 col= palette(mask,vec3(0.5),vec3(0.35),vec3(0.9),vec3(0.00, 0.33, 0.67));\n          col *= vec3(2.,1.,500.);\n          gl_FragColor = vec4(col,mask);\n        }\n      ",transparent:!0,blending:m}),new l(128,128,1280,256,32,!0);const h=new v(a,this.material);h.rotateX(Math.PI/2),null==(e=this.scene)||e.add(h)}create(){const e=new h(256);this.cubeCamera=new d(.1,1e3,e);const n=new u,a=new p;a.setDecoderPath("./draco/"),n.setDRACOLoader(a),n.load("./models/gltf/ferrari.glb",(n=>{var a;const t=n.scene;t.position.set(0,0,0),t.scale.set(50,50,50),t.rotateY(Math.PI/2),null==(a=this.scene)||a.add(t);const s=n.scene.children[0],i=new w({envMap:e.texture,color:16720384,metalness:1,roughness:.5,clearcoat:1,clearcoatRoughness:.03});this.gui.add(i,"metalness",0,1),this.gui.add(i,"roughness",0,1),this.gui.add(i,"clearcoat",0,1),this.gui.add(i,"clearcoatRoughness",0,1);const o=new g({roughness:.05,metalness:1}),r=new w({roughness:.05,metalness:1});s.getObjectByName("body").material=i;s.getObjectByName("rim_fr").material=o;s.getObjectByName("rim_fl").material=o;s.getObjectByName("rim_rr").material=o;s.getObjectByName("rim_rl").material=o;s.getObjectByName("trim").material=o;s.getObjectByName("glass").material=r}),void 0,(function(e){}))}createTubeList(){var e;const n=new f;null==(e=this.scene)||e.add(n);const a=this.createTube();for(let t=0;t<100;t++){const e=new i;e.x=0,e.y=200*Math.sin(t/100*Math.PI),e.z=200*Math.cos(t/100*Math.PI);const s={uColor:{value:new b(Math.random(),Math.random(),Math.random())},uSpeed:{value:1},uTime:{value:Math.random()},uFade:{value:new x(0,.36)},uDirection:{value:1}},o=new r({transparent:!0,uniforms:s,vertexShader:"\n          varying vec2 vUv;\n          uniform float uTime;\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n          }\n        ",fragmentShader:"\n          varying vec2 vUv;\n\n          uniform float uSpeed;\n          uniform float uTime;\n          uniform vec2 uFade;\n          uniform vec3 uColor;\n          uniform float uDirection;\n          void main() {\n            vec3 color = uColor;\n            //流动方向\n            float s = -uTime * uSpeed;\n            float v = 0.0;\n            if(uDirection == 1.0) {\n              v = vUv.x;\n            } else {\n              v = -vUv.x;\n            }\n\n            float d = mod((v+s) * 1.0 , 1.0);\n\n            if(d > uFade.y){\n              discard;\n            }else {\n              //平滑透明度渐变\n              float alpha = smoothstep(uFade.x, uFade.y, d);\n              //透明度太小时不显示\n              if(alpha < 0.001){\n                  discard;\n              }\n              gl_FragColor = vec4(color, alpha);\n            }\n          }\n        "}),c=.005*Math.random()+.005,m=new v(a,o);m.position.copy(e),n.add(m),m.onBeforeRender=()=>{o.uniforms.uTime.value+=c,o.uniforms.uTime.value>1&&(o.uniforms.uTime.value=0)}}}createTube(){const e=new t;e.add(new s(new i(-1500,0,0),new i(1500,0,0)));const n=new o(e,128,2,8,!1),a=new y({color:16711680*Math.random()});return new v(n,a),n}createPlane(){var e,n;const a=new h(256);this.planeCubeCamera=new d(.1,1e3,a);const t=new g({roughness:.5,metalness:.5,map:(new M).load("./texture/xingkong.jpg"),envMap:a.texture}),s=new U(3e3,400),i=new v(s,t);i.rotateX(-Math.PI/2),null==(e=this.scene)||e.add(i);const o=new C(s,{clipBias:.003,textureWidth:window.innerWidth,textureHeight:window.innerHeight,color:8947848,useDepthTexture:!0});o.material.depthWrite=!1,o.rotation.x=-Math.PI/2,o.visible=!1,null==(n=this.scene)||n.add(o),this.composer=new j(this.renderer);const r=new T({renderer:this.renderer,scene:this.scene,camera:this.camera,width:this.innerWidth,height:this.innerHeight,groundReflector:o,selects:this.selects});r.blur=!0,r.thickness=.05,o.opacity=1,o.maxDistance=50,this.composer.addPass(r),this.composer.addPass(new k)}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),this.cubeCamera&&(this.cubeCamera.update(this.renderer,this.scene),this.material.uniforms.uTime.value+=.01),this.planeCubeCamera&&this.planeCubeCamera.update(this.renderer,this.scene),this.composer,null==(n=this.stats)||n.end()}};return _((()=>{P.load()})),B((()=>{P.gui.close(),P.gui.destroy()})),(e,n)=>(I(),O(F,null,[n[0]||(n[0]=D("div",{id:"webgl"},null,-1)),n[1]||(n[1]=D("div",{class:"title-name"},"模型5",-1))],64))}}),[["__scopeId","data-v-c50bf68b"]]);export{S as default};
