import{B as n}from"./base-DD5aOT-d.js";import{c as e,d as a,S as o,D as t,l as i,a as r,C as l,A as s,G as u,N as m,aj as c,ad as d}from"./three-DHmVq3iW.js";import{d as f,z as v,A as h,g as p,j as w,F as g,o as x}from"./@vue-BDXyav1n.js";const y=f({__name:"FireWorksView2",setup(f){class y{constructor(n,l){const s=new e,u=450,m=new Float32Array(1350);s.setAttribute("position",new a(m,3));const c=new Float32Array(u);s.setAttribute("aIndex",new a(c,1));let f=0,v=50;for(let e=0;e<u;e++){c[e]=e%90,e%90==0&&f++,1===f?(m[3*e+1]=0,v=50):2===f?(m[3*e+1]=2,v=52):3===f?(m[3*e+1]=4,v=54):4===f?(m[3*e+1]=6,v=52):5===f&&(m[3*e+1]=8,v=50);const n=Math.sin(d.degToRad(e%90*4))*v,a=Math.cos(d.degToRad(e%90*4))*v;m[3*e+0]=n,m[3*e+2]=a}s.attributes.position.needsUpdate=!0,s.attributes.aIndex.needsUpdate=!0;const h=new o({uniforms:{uIndex:{value:3},uFlag:{value:0},uTime:{value:0}},vertexShader:"\n       attribute float aIndex;\n\n       varying float index;\n       varying float index2;\n\n       uniform float uTime;\n\n       float PI = 3.1415925;\n\n        void main(){\n          index = aIndex;         \n          \n          vec3 myPosition = position;\n\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(myPosition, 1.0);\n          gl_PointSize = 5.0;\n          gl_PointSize *= 100.0 / -(modelViewMatrix * vec4(position, 1.0)).z;\n        }\n      ",fragmentShader:"\n        varying float index;\n        uniform float uIndex;\n        uniform float uFlag;\n\n        //i 当前下表 n 一圈点的下表\n        vec4 mColor(in float i, in float n){\n\n          float max = i + 5.0;\n          float min = i - 5.0;\n\n          vec3 color = vec3(1.0, 0.0, 0.0);\n          float alpha = 1.0; \n\n            if(min < 0.0 && (n < max || n > min  + 89.0) ){\n              //如果min<0,则min+89.0, i=2【i-5+89, n, i+5】 【87, n, 8】\n              min += 89.0;\n              if(n > min && n < 89.0){\n                alpha =1.0- (i - n + 89.0) / 5.0;\n              }else if(n < max && n >= i){\n                alpha = 1.0 - (n - i) / 5.0;              \n              }else{\n                alpha =  (n + 89.0 - min ) / 5.0;\n              }\n              return vec4(color, alpha);\n            }else if(max > 89.0 && (n < max - 89.0 || n > min)){\n              //如果max>89,则max-89.0, n=89【n-5, n+5-89】【84, n, 4】\n              max -= 89.0;\n              if(n <= i && n>min){                \n                alpha = (n - min) / (i - min); \n              }else if(n > i ){                \n                alpha =  (89.0 - n + max) / (89.0 - i);              \n              } else{  \n                alpha = 1.0 - (89.0 - i) / 5.0;\n              }     \n             \n              return vec4(color, alpha);\n            }else if(n >= min && n <= max){\n              if(i >= n){\n                alpha = 1.0-(i - n) / 5.0;\n              }else{\n                alpha = 1.0-(n - i) / 5.0;\n              }         \n              return vec4(color, alpha);\n            }else{            \n              float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n              return vec4(0.1, 0.1, 0.1, alpha);\n            }\n\n            \n            \n        }\n\n        void main(){\n          float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n          if(uFlag == 1.0){            \n            gl_FragColor = vec4(1.0, 0.0, 0.0, alpha);\n          }else{\n            gl_FragColor = mColor(uIndex,index);            \n          }\n\n        }\n      ",transparent:!0,side:t}),p=new i(s,h);p.position.set(0,70,0);let w=0;let g=0,x=!1;const y={n:20};l.add(y,"n",1,50,1).name("烟花间隔(毫秒)"),p.onBeforeRender=()=>{if(h.uniforms.uTime.value+=.001,h.uniforms.uIndex.value>90&&(h.uniforms.uIndex.value=0,w++),w>=2){h.uniforms.uFlag.value=1,x||(x=!0,new b(n));const e=new r(75*Math.random()-35,72,75*Math.random()-35);g%y.n==0&&(new M(n,e),new S(n,e,150))}else h.uniforms.uIndex.value+=1;g+=1,p.rotateY(.001)},n.add(p)}}class S{constructor(n,t,u){const m=t,c=new r(t.x,0,t.z),d=new e,f=new l(Math.random(),Math.random(),Math.random()),v=new o({uniforms:{uTime:{value:0},uHeight:{value:u/2},uColor:{value:f},uScale:{value:0},uEndScale:{value:1}},vertexShader:"\n        attribute vec3 toPosition;\n        uniform float uTime;\n        uniform float uScale;\n        uniform float uHeight;\n        uniform float uEndScale;\n\n        void main(){\n            vec3 myPosition = position;\n            myPosition.y -= 1.0 * uTime;\n\n            vec4 mvPosition = modelViewMatrix * vec4(myPosition, 1.0);\n\n            gl_PointSize = 100.0 * 50.0 / -mvPosition.z;\n            gl_PointSize *= uScale * uEndScale;\n\n            gl_Position = projectionMatrix * mvPosition;\n\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main(){\n            float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n            gl_FragColor = vec4(uColor, alpha);\n        }\n      ",transparent:!0,blending:s,depthTest:!1}),h=new Float32Array(m);d.setAttribute("position",new a(h,3)),d.setAttribute("toPosition",new a(new Float32Array(c),3));const p=new i(d,v);let w=0;p.onBeforeRender=()=>{v.uniforms.uScale.value<=2&&(v.uniforms.uScale.value+=.1,0==w&&(w=1,new P(n,m,f,u))),v.uniforms.uTime.value<=u?v.uniforms.uTime.value+=1:(p.clear(),n.remove(p)),v.uniforms.uTime.value>=.8*u&&v.uniforms.uEndScale.value>=0&&(v.uniforms.uEndScale.value-=.05)},n.add(p)}}class P{constructor(n,t,r,l){const s=new e,u=new Float32Array(150);s.setAttribute("position",new a(u,3));const m=new Float32Array(50);s.setAttribute("aDelay",new a(m,1));for(let e=0;e<50;e++)u[3*e+0]=t.x,u[3*e+1]=t.y,u[3*e+2]=t.z,m[e]=100*e;const c=new o({uniforms:{uTime:{value:0},uColor:{value:r},uEndScale:{value:1}},vertexShader:"\n        attribute float aDelay;  \n\n        uniform float uTime;\n        uniform float uEndScale;\n\n        void main() {\n          vec3 pos = position;\n\n          float delayTime = aDelay + uTime;\n\n         if(uTime * 1000.0 > aDelay){\n          pos.y -= (uTime * 1000.0 - aDelay) * 0.01;\n         }\n         \n\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n          gl_PointSize = 6.0 - 4.0 * aDelay/2000.0;\n\n          gl_PointSize *= uEndScale;\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main() {\n          gl_FragColor = vec4(uColor, 1.0);\n        }\n      "}),d=new i(s,c);d.onBeforeRender=()=>{c.uniforms.uTime.value>l/10?(d.clear(),n.remove(d)):(c.uniforms.uTime.value+=.1,c.uniforms.uTime.value>=.08*l&&c.uniforms.uEndScale.value>=0&&(c.uniforms.uEndScale.value-=.5))},n.add(d)}run(){}}class M{constructor(n,t){const r=new e,u=new Float32Array(150);r.setAttribute("position",new a(u,3));const m=new Float32Array(150);r.setAttribute("toPosition",new a(m,3));const c=new Float32Array(50);r.setAttribute("aSpeed",new a(c,1));for(let e=0;e<50;e++)u[3*e+0]=t.x,u[3*e+1]=t.y,u[3*e+2]=t.z,m[3*e+0]=10*Math.random()*Math.sin(e),m[3*e+1]=10*Math.random()-5,m[3*e+2]=10*Math.random()*Math.cos(e),c[e]=Math.random();const d=new o({uniforms:{uTime:{value:0},uColor:{value:new l(Math.random(),Math.random(),Math.random())},uScale:{value:1},uSpeed:{value:.5}},vertexShader:"\n        attribute vec3 toPosition;\n        attribute float aSpeed;\n\n        uniform float uTime;\n        uniform float uScale;\n       \n        void main(){\n            vec3 myPosition = position;\n            myPosition += toPosition * uTime ;\n\n            vec4 mvPosition = modelViewMatrix * vec4(myPosition, 1.0);\n\n            gl_PointSize = 100.0 * 30.0 / -mvPosition.z;\n            gl_PointSize *= uScale;\n            gl_Position = projectionMatrix * mvPosition;\n            \n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main(){\n            float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n            gl_FragColor = vec4(uColor, alpha);\n        }\n      ",transparent:!0,blending:s,depthTest:!1}),f=new i(r,d);f.onBeforeRender=()=>{d.uniforms.uTime.value<1?d.uniforms.uTime.value+=.05:d.uniforms.uScale.value<0?(n.remove(f),f.clear()):d.uniforms.uScale.value-=.02},n.add(f)}}class T{constructor(n,o,t){const i=new e,r=new Float32Array([...o,...o]);i.setAttribute("position",new a(r,3));const l=new c(i,new m({color:16777215,opacity:.5})),s=t.x-o.x,u=t.y-o.y,d=t.z-o.z,f=s/50,v=u/50,h=d/50;l.onBeforeRender=()=>{o.x>=t.x?r[3]>t.x&&(r[3]+=f):r[3]<t.x&&(r[3]+=f),o.y>=t.y?r[4]>t.y&&(r[4]+=v):r[4]<t.y&&(r[4]+=v),o.z>=t.z?r[5]>t.z&&(r[5]+=h):r[5]<t.z&&(r[5]+=h),i.attributes.position.needsUpdate=!0},n.add(l)}}class b{constructor(n){const e=[];for(let o=0;o<5;o++){const n=d.degToRad(72*o),a=40*Math.cos(n),t=40*Math.sin(n);e.push(new r(a,t,0))}const a=new u;a.rotateX(Math.PI/2),a.position.set(0,74,0),n.add(a),new T(a,e[0],e[2]),new T(a,e[2],e[4]),new T(a,e[4],e[1]),new T(a,e[1],e[3]),new T(a,e[3],e[0]),new A(a,40),new A(a,45,!1)}}class A{constructor(n,o,t=!0){const i=[],l=new e,s=new Float32Array(225);l.setAttribute("position",new a(s,3));for(let e=0;e<=75;e++){const n=e/75*Math.PI*2,a=o*Math.cos(n),t=o*Math.sin(n);i.push(new r(a,t,0))}s[0]=i[0].x,s[1]=i[0].y,s[2]=i[0].z;const u=new m({color:16777215,opacity:.5}),d=new c(l,u);let f=t?0:i.length,v=0;d.onBeforeRender=()=>{t?f<i.length-1?v%1==0&&(s[3*f+0]=i[f+0].x,s[3*f+1]=i[f+0].y,s[3*f+2]=i[f+0].z,f++,l.attributes.position.needsUpdate=!0):i.length:f>0&&v%1==0&&(s[3*f+0]=i[f-1].x,s[3*f+1]=i[f-1].y,s[3*f+2]=i[f-1].z,f--,l.attributes.position.needsUpdate=!0),v+=1},n.add(d)}}const z=new class extends n{constructor(){super()}load(){var n;this.init("#webgl"),this.animate(),this.create(),null==(n=this.scene)||n.remove(this.axesHelper),new y(this.scene,this.gui)}create(){}animate(){var n,e;null==(n=this.stats)||n.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(e=this.stats)||e.end()}};return v((()=>{z.load()})),h((()=>{z.gui.close(),z.gui.destroy()})),(n,e)=>(x(),p(g,null,[e[0]||(e[0]=w("div",{id:"webgl"},null,-1)),e[1]||(e[1]=w("div",{class:"title-name"},"烟花2",-1))],64))}});export{y as default};
