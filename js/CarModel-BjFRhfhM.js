var e=Object.defineProperty,n=(n,t,o)=>((n,t,o)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[t]=o)(n,"symbol"!=typeof t?t+"":t,o);import{B as t}from"./base-DECjcTXN.js";import{V as o,G as i,L as a,B as s,a as r,C as l,M as u,b as d,c,d as m,S as v,e as h,P as f,f as w,g as p,h as g,A as y,D as x,Q as C,i as b,j as S,k as P,l as T,m as M,T as B,E as U,n as j}from"./three-CB9Se93t.js";import{C as z}from"./canvasTexture-CB5P4OHK.js";import{d as _,r as F,z as G,A as k,g as A,j as I,F as R,k as E,o as L,B as V,C as q,u as O}from"./@vue-B4sUqkWa.js";class W{constructor(){}init(e,n){const t=e.distanceTo(n),a=(new o).addVectors(e,n).multiplyScalar(.5),s=t/2-2,r=(new o).subVectors(e,n);r.normalize();const l=new C;l.setFromUnitVectors(new o(-1,0,0),r);const u=new i,d=new i,c=new i;return u.add(d),u.add(c),d.add(this.line(e,l)),d.add(this.arrow(e,l)),d.add(this.dotLine(e,l,s,parseInt(t+""))),c.add(this.line(n,l)),c.add(this.arrow(n,l,-1)),c.add(this.dotLine(n,l,s,parseInt(t+""),-1)),u.add(this.text(a,t)),u}line(e,n){const t=new a({color:16777215,linewidth:1}),i=[new o(0,0,-1),new o(0,0,1)],l=(new s).setFromPoints(i),u=new r(l,t);return u.quaternion.multiply(n),u.position.copy(e),u}arrow(e,n,t=1){const o=new l(.25,1,8);o.translate(0,-.5,0);const i=new u({color:16777215}),a=new d(o,i);return a.quaternion.multiply(n),a.position.copy(e),a.rotateZ(Math.PI/2*t),a}dotLine(e,n,t,i,a=1){const r=new o(0,0,0);r.x+=1*a;const l=r.clone();l.x+=t*a;const u=new c(r,l),d=new s,w=new Float32Array(3*i);d.setAttribute("position",new m(w,3));const p=new Float32Array(3*i);d.setAttribute("toPosition",new m(p,3));for(let o=0;o<i;o++){const e=u.getPoint(o/i);p[3*o+0]=e.x,p[3*o+1]=e.y,p[3*o+2]=e.z;const n=u.getPoint(0);w[3*o+0]=n.x,w[3*o+1]=n.y,w[3*o+2]=n.z}d.attributes.position.needsUpdate=!0,d.attributes.toPosition.needsUpdate=!0;const g=new v({uniforms:{uTime:{value:0},uColor:{value:new h(16777215)}},vertexShader:"\n        attribute vec3 toPosition;\n        uniform float uTime;\n       \n          void main(){\n            vec3 newPosition = position;\n            if(newPosition.x < toPosition.x){\n             // newPosition.x += uTime;\n            }\n            newPosition =  toPosition;\n            \n            gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n            gl_PointSize = 3.0;\n          }\n        ",fragmentShader:"\n       uniform vec3 uColor;\n          void main(){           \n            gl_FragColor = vec4(uColor,1.0);\n          }\n        "}),y=new f(d,g);return y.quaternion.multiply(n),y.position.copy(e),y.onBeforeRender=()=>{g.uniforms.uTime.value+=.1},y}text(e,n){const t=new z,o=new w(t.init({text:n.toFixed(2)+"m",width:600})),i=new p(new g({map:o,color:16777215,blending:y,transparent:!0,side:x}));return i.position.copy(e),i.scale.set(3,1,1),i}fade(){}hade(){}}const D={class:"color-list"},H=["onClick"],X=_({__name:"CarModel",setup(e){const a=["#ff0000","#00ff00","#0000ff","#ffff00","#00ffff","#ff00ff","#ffffff"],s=F(0);const r=new class extends t{constructor(){super(new o(0,20,30)),n(this,"meshGroup",new i),n(this,"annotation",new W),n(this,"annotationGroup",new i),n(this,"uniforms",{uTime:{value:0},uStartColor:{value:new h(16776960)},uEndColor:{value:new h(16711680)}}),n(this,"isChange",!1),n(this,"onSelectColor",(e=>{s.value=e,this.changeColor(e)}))}load(){var e,n;this.init("#webgl"),this.animate(),null==(e=this.scene)||e.add(this.annotationGroup),this.loadModel(),this.light({type:"SpotLight",x:0,y:50,z:0}),null==(n=this.scene)||n.remove(this.axesHelper),this.baseGeometry(),this.annotationGroup.visible=!1,this.gui.add(this.annotationGroup,"visible").name("车身尺寸")}loadModel(){const e=new b,n=new S;n.setDecoderPath("./draco/"),e.setDRACOLoader(n),e.load("./models/gltf/car.glb",(e=>{var n;const t=e.scene;t.scale.set(5,5,5),t.position.set(0,2,0),t.rotateY(Math.PI),null==(n=this.scene)||n.add(t),t.traverse((e=>{e instanceof d&&(e.castShadow=!0)}));const i=t.getObjectByName("chassis_primary_0");i.geometry.computeBoundingBox();const a=i.geometry.boundingBox&&i.geometry.boundingBox.max.multiplyScalar(5)||{x:0,y:0,z:0},s=i.geometry.boundingBox&&i.geometry.boundingBox.min.multiplyScalar(5)||{x:0,y:0,z:0};this.annotationGroup.add(this.annotation.init(new o(s.x,4,14),new o(a.x,4,14)),this.annotation.init(new o(6,s.z+Math.abs(s.z)+2,0),new o(6,a.z+Math.abs(s.z)+2,0)),this.annotation.init(new o(-6,4,s.y+2),new o(-6,4,a.y+4)));const r=i.material;r.color.setHex(16777215*Math.random()),r.onBeforeCompile=e=>{Object.assign(e.uniforms,this.uniforms),e.vertexShader=`\n          varying vec2 vUv;\n          ${e.vertexShader}\n          `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n          #include <fog_vertex>\n            vUv = uv;\n          "),e.fragmentShader=`\n          uniform float uTime;\n          varying vec2 vUv;\n          uniform vec3 uStartColor;\n          uniform vec3 uEndColor;\n          ${e.fragmentShader}\n        `,e.fragmentShader=e.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n            vec4 diffuseColor = vec4( diffuse, opacity );\n\n             //中心点\n            vec2 center = vUv - vec2(0.45);\n\n            float negationTime = -uTime;\n\n            vec3 color = uEndColor;\n\n            if(center.y > uTime){\n                color = uStartColor;\n            }\n            if(center.y < negationTime){\n                color = uStartColor;\n            }\n            diffuseColor = vec4(color,diffuseColor.a);\n            \n          ")}}))}baseGeometry(){var e,n,t,o;const i=new P(15,15,1,64),a=new T({color:3355443}),s=new d(i,a);s.position.set(0,1.5,0),s.receiveShadow=!0,null==(e=this.scene)||e.add(s);const r=new P(20,20,1,64),l=new T({color:4473924}),u=new d(r,l);u.position.set(0,.5,0),u.receiveShadow=!0,null==(n=this.scene)||n.add(u);const c=new M(200,200),m=new T({color:2236962}),h=new d(c,m);h.position.set(0,0,0),h.rotateX(-Math.PI/2),h.receiveShadow=!0,null==(t=this.scene)||t.add(h);const f=new M(200,200,50,50),w=new v({vertexShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n\n        void main() {\n            vUv = uv;\n            vec4 newPosition = modelMatrix * vec4(position, 1.0);\n\n            //中间凸起\n            float dist = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.15, 0.05, dist);\n            //float s = smoothstep(0.2, 0.05, abs(uv.x - 0.5 + 0.5 * sin(uTime)));\n              // newPosition.y -= 8.0 ;\n              // newPosition.y += 8.0 *s;\n            newPosition.y += 8.0 * strength;\n\n            gl_Position = projectionMatrix * viewMatrix * newPosition;\n\n\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n        uniform float uRepeat;\n        uniform float lightWidth;\n        uniform float uSpeed;\n\n        void main(){\n           // 先居中，再绘制圆形\n\n            float dist = fract((length(vUv - vec2(0.5)) /0.707 - uTime * uSpeed) * uRepeat);\n            float radius = lightWidth;\n            vec3 color = vec3(step(radius, dist));\n\n            float alpha = 1.0;\n            if(color.r == 1.0){\n              alpha = 0.0;\n            }\n            color+= vec3(1.0);\n\n            vec4 vColor = vec4(color, alpha);\n\n            float len = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.5, 0.35, len);\n            vColor.a *= strength;\n\n\n            gl_FragColor = vColor;\n\n        }\n      ",transparent:!0,uniforms:{uTime:{value:0},uRepeat:{value:10},lightWidth:{value:.01},uSpeed:{value:.01}},wireframe:!1,depthTest:!1}),p=new d(f,w);p.position.set(0,3,0),p.rotateX(-Math.PI/2),p.onBeforeRender=()=>{w.uniforms.uTime.value+=.05},p.visible=!1,null==(o=this.scene)||o.add(p);const g=this.gui.addFolder("扩散光纹");g.add(w.uniforms.lightWidth,"value",.01,.5,.01).name("宽度"),g.add(w.uniforms.uRepeat,"value",1,30,1).name("数量"),g.add(w.uniforms.uSpeed,"value",.01,.05,.01).name("速度"),g.add(p,"visible").name("是否可见")}changeColor(e){this.isChange=!1,this.uniforms.uTime.value=0,this.uniforms.uStartColor.value=this.uniforms.uEndColor.value,this.uniforms.uEndColor.value=new h(a[e])}updateColor(){this.isChange||(this.uniforms.uTime.value<=1?this.uniforms.uTime.value+=.01:this.isChange=!0)}environment(){const e=(new B).load("/texture/sky.jpg");e.mapping=U,this.scene.background=e}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),j.update(),this.updateColor(),this.renderer.render(this.scene,this.camera),null==(n=this.stats)||n.end()}};return G((()=>{r.load()})),k((()=>{r.gui.close(),r.gui.destroy()})),(e,n)=>(L(),A(R,null,[n[0]||(n[0]=I("div",{id:"webgl"},null,-1)),I("div",D,[(L(),A(R,null,E(a,((e,n)=>I("div",{class:V(["color-item",s.value==n?"active":""]),key:n,style:q({background:e}),onClick:e=>O(r).onSelectColor(n)},null,14,H))),64))])],64))}});export{X as default};
