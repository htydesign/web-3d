var e=Object.defineProperty,t=(t,s,n)=>((t,s,n)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[s]=n)(t,"symbol"!=typeof s?s+"":s,n);import{B as s}from"./base-c5vTjvxm.js";import{V as n,i as a,o as i,l as o,p as r,a as l,M as c,b as d,q as h,r as m,s as p,G as u,t as w,C as g,E as f,u as b,v as y,U as v,w as P,x,Q as C}from"./three-BPmmCIq3.js";import{d as A,A as j,B as F,g as W,j as M,F as q,o as D}from"./@vue-89U3BwR9.js";const E=A({__name:"ModelView1",setup(e){const A=new class extends s{constructor(){super(),t(this,"texture"),t(this,"mixer"),t(this,"composer"),t(this,"unifors",{u_center:{value:new n(.3,.3)}}),t(this,"raycaster"),t(this,"pointer",new n),t(this,"modelGrop",[])}load(){this.init("#webgl"),this.animate(),this.light(),this.gridHelper(),this.create()}create(){var e;null==(e=this.camera)||e.position.set(0,3,4);const t=new a,s=new i;s.setDecoderPath("./draco/"),t.setDRACOLoader(s),t.load("./models/model04.gltf",(e=>{var t,s,a;const i=e.scene;null==(t=this.scene)||t.add(i),this.mixer=new o(i);const A=this.mixer.clipAction(e.animations[0]),j=this.mixer.clipAction(e.animations[2]),F=this.mixer.clipAction(e.animations[4]);j.play(),A.play(),F.play(),j.timeScale=5;const W=new r(new l(0,0,1),0),M=new r(new l(0,0,-1),0),q=new c({color:16777215,wireframe:!0,transparent:!0,opacity:.75}),D=i.clone();D.traverse((e=>{e instanceof d&&(e.material=q,e.material.clippingPlanes=[W])})),i.traverse((e=>{e instanceof d&&(e.material.clippingPlanes=[M])})),null==(s=this.scene)||s.add(D);const E=i.clone(),H=new h,N=new m(75,innerWidth/innerHeight,.1,2e3);N.position.set(0,10,15),new p(N,null==(a=this.renderer)?void 0:a.domElement);const _=new u;_.position.set(10,0,0),H.add(_);const k=new w({color:new g(16777215),depthTest:!0,transparent:!0});E.traverse((e=>{if(e instanceof d){const t=new C,s=new l,n=new l;e.getWorldQuaternion(t),e.getWorldPosition(s),e.getWorldScale(n);const a=new f(e.geometry,20),i=new b(a);k.opacity=1,i.material=k,i.quaternion.copy(t),i.position.copy(s),i.scale.copy(n),_.add(i)}})),this.renderer.localClippingEnabled=!0;const B=this.gui.addFolder("Local Clipping"),G={get Plane(){return W.constant},set Plane(e){M.constant=-e,W.constant=e},get ModelPlane(){return M.constant},set ModelPlane(e){M.constant=e}};B.add(G,"Plane",-3.5,2);const L={threshold:.98,strength:1,radius:.5,exposure:1},O=new y(this.scene,this.camera),Q=new y(H,N);Q.clear=!1;const S=new v(new n(window.innerWidth,window.innerHeight),1.5,.4,.85);S.threshold=L.threshold,S.strength=L.strength,S.radius=L.radius;const V=new P;this.composer=new x(this.renderer),this.composer.addPass(O),this.composer.addPass(Q),this.composer.addPass(S),this.composer.addPass(V);const R=this.gui.addFolder("bloom");R.add(L,"threshold",0,1).onChange((function(e){S.threshold=Number(e)})),R.add(L,"strength",0,3).onChange((function(e){S.strength=Number(e)})),this.gui.add(L,"radius",0,1).step(.01).onChange((function(e){S.radius=Number(e)}))}))}animate(){var e,t,s,n,a;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.mixer&&(null==(t=this.mixer)||t.update(this.clock.getDelta())),null==(s=this.raycaster)||s.setFromCamera(this.pointer,this.camera),null==(n=this.composer)||n.render(),null==(a=this.stats)||a.end()}};return j((()=>{A.load()})),F((()=>{A.gui.close(),A.gui.destroy()})),(e,t)=>(D(),W(q,null,[t[0]||(t[0]=M("div",{id:"webgl"},null,-1)),t[1]||(t[1]=M("div",{class:"title-name"},"模型1",-1))],64))}});export{E as default};
