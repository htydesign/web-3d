var e=Object.defineProperty,a=(a,t,s)=>((a,t,s)=>t in a?e(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s)(a,"symbol"!=typeof t?t+"":t,s);import{B as t}from"./base-BaImv3YL.js";import{G as s,a as n,V as i,R as o,M as r,aa as d,o as l,K as h,f as c,h as u,b as m,a5 as v,a6 as p,k as f,a7 as g,g as w,t as b,L as M,u as y,C as x,S as T,Z as S,$ as B,a8 as j,a9 as C,a1 as P,a0 as _,B as N,r as O,D as E}from"./three-CyihR34C.js";import{d as R,z as L,A as U,B as D}from"./@vue-DISYwsDo.js";import{_ as F}from"./index-DCRUWgH2.js";import"./pinia-DkR6u-JQ.js";import"./vue-router-kKGLm7zb.js";const G=F(R({__name:"ModelView4",setup(e){const R=new class extends t{constructor(){super(),a(this,"meshMap",new Map),a(this,"carModel"),a(this,"isResolve",!1),a(this,"isResolveing",!0),a(this,"modelGroup",new s),a(this,"centerPoint",new n(0,0,0)),a(this,"pointer",new i),a(this,"raycaster",new o),a(this,"INTERSECTED"),a(this,"wheelGroup",[]),a(this,"materials",[]),a(this,"composer"),a(this,"finalComposer"),a(this,"darkMaterial",new r({color:0})),a(this,"tubeMaterials",{}),a(this,"bloomLayer",new d)}load(){var e,a;this.bloomLayer.set(1),null==(e=this.scene)||e.add(this.modelGroup),this.init("#webgl"),this.animate(),this.create(),this.createLight(),this.createTubeLight(),null==(a=this.camera)||a.position.set(0,150,250),document.addEventListener("mousemove",this.onPointerMove.bind(this))}onPointerMove(e){this.pointer.x=e.clientX/window.innerWidth*2-1,this.pointer.y=-e.clientY/window.innerHeight*2+1}create(){const e=new l,a=new h;a.setDecoderPath("./draco/"),e.setDRACOLoader(a),e.load("./models/gltf/ferrari.glb",(e=>{const a=e.scene;a.position.set(0,0,0),a.scale.set(50,50,50),a.rotateY(Math.PI/2),this.modelGroup.add(a),this.carModel=e.scene.children[0];const t=new c({color:16711680,metalness:1,roughness:.5,clearcoat:1,clearcoatRoughness:.03}),s=new u({color:16777215,metalness:1,roughness:.5}),i=new c({color:16777215,metalness:.25,roughness:0,transmission:1}),o=this.carModel.getObjectByName("body");o.material=t;const r={uTime:{value:0}};t.onBeforeCompile=e=>{Object.assign(e.uniforms,r),e.vertexShader=`\n          varying vec2 vUv;\n          ${e.vertexShader}\n          `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n            #include <fog_vertex>\n            vUv = uv;\n            "),e.fragmentShader=`\n              varying vec2 vUv;\n              uniform float uTime;\n              ${e.fragmentShader}\n              `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","\n              #include <dithering_fragment>\n\n              gl_FragColor = vec4(outgoingLight*uTime, 1.0);\n\n              ")},o.onBeforeRender=()=>{r.uTime.value<1&&(r.uTime.value+=.005)};document.getElementById("body-color").addEventListener("input",(function(){t.color.set(this.value)})),this.carModel.getObjectByName("rim_fl").material=s,this.carModel.getObjectByName("rim_fr").material=s,this.carModel.getObjectByName("rim_rr").material=s,this.carModel.getObjectByName("rim_rl").material=s,this.carModel.getObjectByName("trim").material=s,this.carModel.getObjectByName("glass").material=i;document.getElementById("details-color").addEventListener("input",(function(){s.color.set(this.value)}));document.getElementById("glass-color").addEventListener("input",(function(){i.color.set(this.value)}));const d=this.carModel.getObjectByName("wheel_fl"),l=this.carModel.getObjectByName("wheel_fr"),h=this.carModel.getObjectByName("wheel_rl"),p=this.carModel.getObjectByName("wheel_rr");this.wheelGroup=[d,l,h,p],this.carModel.traverse((e=>{e instanceof m&&(e.castShadow=!0,e.receiveShadow=!0,this.meshMap.set(e.name,{originalPosition:e.position.clone(),targetPosition:new n(5-10*Math.random(),5-10*Math.random(),5-10*Math.random())}))})),new v.Tween(this.camera.position).to({x:0,y:100,z:150},2e3).easing(v.Easing.Quadratic.Out).start().onComplete((()=>{this.isResolveing=!1})),new v.Tween(this.camera.position).to({x:0,y:100,z:150},2e3).easing(v.Easing.Quadratic.Out).start().onComplete((()=>{}));const f={resolve:()=>{this.isResolve=!this.isResolve,this.isResolveing=!0,this.meshMap.forEach(((e,a)=>{var t;const s=null==(t=this.carModel)?void 0:t.getObjectByName(a);new v.Tween(s.position).to(this.isResolve?e.targetPosition:e.originalPosition,2e3).easing(v.Easing.Quadratic.Out).start().onComplete((()=>{this.isResolveing=!1}))}))}};this.gui.addFolder("模型").add(f,"resolve").name("分解")}),void 0,(function(e){}))}createLight(){var e,a,t,s;const n=new p(4210752,100);null==(e=this.scene)||e.add(n);const i=new f(16777215,1e3);i.position.set(100,100,0),i.castShadow=!0,i.shadow.mapSize.width=1024,i.shadow.mapSize.height=1024,i.shadow.camera.near=.5,i.shadow.camera.far=1e3,null==(a=this.scene)||a.add(i);const o=new g(i,10);null==(t=this.scene)||t.add(o);const r=new w(16777215,5);r.position.set(0,50,0),r.castShadow=!0,r.shadow.mapSize.width=1024,r.shadow.mapSize.height=1024,r.shadow.camera.near=.5,r.shadow.camera.far=1e3,null==(s=this.scene)||s.add(r)}createTubeLight(){var e;const a=new b;a.add(new M(new n(-250,0,0),new n(250,0,0)));const t=new y(a,128,2,8,!1);for(let n=0;n<500;n++){const a={uColor:{value:new x(Math.random(),Math.random(),Math.random())},uSpeed:{value:1},uTime:{value:Math.random()},uFade:{value:new i(0,.36)},uDirection:{value:1}},s=new T({transparent:!0,uniforms:a,vertexShader:"\n          varying vec2 vUv;\n           uniform float uTime;\n          void main() {\n            vUv = uv;\n            // vec3 newPosition = position;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n          }\n        ",fragmentShader:"\n          varying vec2 vUv;\n          uniform float uSpeed;\n          uniform float uTime;\n          uniform vec2 uFade;\n          uniform vec3 uColor;\n          uniform float uDirection;\n          void main() {\n            vec3 color = uColor;\n            //流动方向\n            float s = -uTime * uSpeed;\n            float v = 0.0;\n            if(uDirection == 1.0) {\n              v = vUv.x;\n            } else {\n              v = -vUv.x;\n            }\n            \n            float d = mod((v+s) * 1.0 , 1.0);\n            \n            if(d > uFade.y){\n              discard;\n            }else {\n              //平滑透明度渐变\n              float alpha = smoothstep(uFade.x, uFade.y, d);\n              //透明度太小时不显示\n              if(alpha < 0.001){\n                  discard;\n              }\n              gl_FragColor = vec4(color, alpha);\n            }\n          }\n        "}),o=.005*Math.random()+.005;this.materials.push(s);const r=new m(t,s);r.position.z=1*n-30-250+30,r.position.x=0,null==(e=this.scene)||e.add(r),r.onBeforeRender=()=>{s.uniforms.uTime.value+=o,s.uniforms.uTime.value>1&&(s.uniforms.uTime.value=0)}}const s=new S(this.scene,this.camera),o={threshold:.68,strength:1.8,radius:.05,exposure:1},r=new B(new i(window.innerWidth,window.innerHeight),1.5,.4,.85);r.threshold=o.threshold,r.strength=o.strength,r.radius=o.radius;const d=new j(C);this.composer=new P(this.renderer),this.composer.addPass(s),this.composer.addPass(r),this.composer.addPass(d);const l=new j(new T({uniforms:{baseTexture:{value:null},bloomTexture:{value:this.composer.renderTarget2.texture}},vertexShader:"\n            varying vec2 vUv;\n\n            void main() {\n\n              vUv = uv;\n\n              gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n            }\n          ",fragmentShader:"\n            uniform sampler2D baseTexture;\n            uniform sampler2D bloomTexture;\n\n            varying vec2 vUv;\n\n            void main() {\n\n              gl_FragColor = ( texture2D( baseTexture, vUv )  + vec4( 1.0 ) * texture2D( bloomTexture, vUv ));\n\n            }\n          ",defines:{}}),"baseTexture");l.needsSwap=!0;const h=new _;this.finalComposer=new P(this.renderer),this.finalComposer.addPass(s),this.finalComposer.addPass(l),this.finalComposer.addPass(h);const c=this.gui.addFolder("bloom");c.add(o,"threshold",0,1).onChange((function(e){r.threshold=Number(e)})),c.add(o,"strength",0,3).onChange((function(e){r.strength=Number(e)})),this.gui.add(o,"radius",0,1).step(.01).onChange((function(e){r.radius=Number(e)}))}createBox(){var e;null==(e=this.scene)||e.add(new m(new N(500,300,500),new O({side:E,color:0})))}updateMaterials(){this.materials.forEach((e=>{e.uniforms.uTime.value+=.01,e.uniforms.uTime.value>=1&&(e.uniforms.uTime.value=0)}))}darkenNonBloomed(){this.modelGroup.traverse((e=>{e instanceof m&&(this.tubeMaterials[e.uuid]=e.material,e.material=this.darkMaterial)}))}restoreMaterial(){this.modelGroup.traverse((e=>{e instanceof m&&(e.material=this.tubeMaterials[e.uuid],delete this.tubeMaterials[e.uuid])}))}animate(){var e,a,t,s;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.isResolve||this.isResolveing||this.wheelGroup.forEach((e=>{e.rotation.x-=.1})),v.update(),this.darkenNonBloomed(),null==(a=this.composer)||a.render(),this.restoreMaterial(),null==(t=this.finalComposer)||t.render(),null==(s=this.stats)||s.end()}};return L((()=>{R.load()})),U((()=>{R.destroy()})),(e,a)=>a[0]||(a[0]=D('<div id="webgl" data-v-07337d10></div><div class="title-name" data-v-07337d10>模型3改进版</div><div class="color-picker" data-v-07337d10><span class="colorPicker" data-v-07337d10><input id="body-color" type="color" value="#ff0000" data-v-07337d10><br data-v-07337d10>Body</span><span class="colorPicker" data-v-07337d10><input id="details-color" type="color" value="#ffffff" data-v-07337d10><br data-v-07337d10>Details</span><span class="colorPicker" data-v-07337d10><input id="glass-color" type="color" value="#ffffff" data-v-07337d10><br data-v-07337d10>Glass</span></div>',3))}}),[["__scopeId","data-v-07337d10"]]);export{G as default};
