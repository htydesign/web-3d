var e=Object.defineProperty,t=(t,n,s)=>((t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s)(t,"symbol"!=typeof n?n+"":n,s);import{B as n}from"./base-T3lLSoS5.js";import{d as s,z as a,A as i,g as r,j as o,F as l,o as h}from"./@vue-DISYwsDo.js";import{v as c,O as p,w as d,n as w,b as m,M as u,a as g,t as v,L as b,x as f,c as y,d as P,S as M,l as x,y as A,z as S}from"./three-BLJ24qmy.js";const j=s({__name:"PipeFlowViewTwo",setup(e){const s=new class extends n{constructor(){super(),t(this,"splineCamera",new c(60,window.innerWidth/window.innerHeight,.01,500)),t(this,"parent",new p),t(this,"cameraHelper"),t(this,"cameraSphereMesh")}load(){var e,t,n,s;this.init("#webgl"),this.animate(),null==(e=this.parent)||e.add(this.splineCamera),this.cameraHelper=new d(this.splineCamera),null==(t=this.scene)||t.add(this.cameraHelper);const a=new w(2,32,32);this.cameraSphereMesh=new m(a,new u({color:16720384})),null==(n=this.parent)||n.add(this.cameraSphereMesh),null==(s=this.scene)||s.add(this.parent),this.createMesh()}createPath(e){const t=e.map((e=>new g(e[0],e[1],e[2]))),n=new v;for(let s=0;s<t.length-1;s++)n.curves.push(new b(t[s],t[s+1]));return n}getTrajectoryPoint(e){const t=2*e,n=Math.sin(e);return new g(t,n,0)}createMesh(){var e,t;const n=new f([new g(-100,0,100),new g(-50,50,50),new g(0,0,0),new g(50,-50,50),new g(100,0,100)]),s=n.getPoints(50),a=(new y).setFromPoints(s),i=new y,{count:r,array:o}=a.attributes.position,l=new Float32Array(3*r);i.setAttribute("position",new P(l,3));for(let w=0;w<r-1;w++){const e=(0+w/r)%1,t=n.getPointAt(e);l[3*w+0]=t.x,l[3*w+1]=t.y,l[3*w+2]=t.z}i.attributes.position.needsUpdate=!0;const h=new M({vertexShader:"\n        void main(){\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 5.0;\n        }\n      ",fragmentShader:"\n        void main(){\n          gl_FragColor = vec4(1.0);\n        }\n      "}),c=new x(i,h);let p=0;c.onBeforeRender=()=>{var e;for(let t=0;t<r;t++){const s=(p+t/r)%1,a=n.getPointAt(s),i=n.getPointAt((p+(t+1)/r)%1);l[3*t+0]=a.x,l[3*t+1]=a.y,l[3*t+2]=a.z,0===t&&(null==(e=this.cameraSphereMesh)||e.position.copy(a),this.splineCamera.lookAt(i),this.splineCamera.position.copy(a))}p+=.001,i.attributes.position.needsUpdate=!0},null==(e=this.scene)||e.add(c);const d=new A(a,new S);null==(t=this.scene)||t.add(d)}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.cameraHelper&&this.cameraHelper.update(),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return a((()=>{s.load()})),i((()=>{s.destroy()})),(e,t)=>(h(),r(l,null,[t[0]||(t[0]=o("div",{id:"webgl"},null,-1)),t[1]||(t[1]=o("div",{class:"title-name"},"粒子管道流动",-1))],64))}});export{j as default};
