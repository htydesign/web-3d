var e=Object.defineProperty,n=(n,t,i)=>((n,t,i)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):n[t]=i)(n,"symbol"!=typeof t?t+"":t,i);import{B as t}from"./base-Blzby6IQ.js";import{Q as i,b as r,T as s,a,m as o,Z as v,a8 as u,W as l,a1 as h,a0 as d,aJ as c,P as g,S as m,M as f,a5 as x}from"./three-CQ-nF5qD.js";import{g as p}from"./modelLoader-DURvXIUi.js";import"./virtual-scroll-Dtm-vLdV.js";import{d as w,z as _,A as y,g as U,j as b,F as D,o as M}from"./@vue-DISYwsDo.js";import"./@amap-Bx2D3lnM.js";const T=w({__name:"EffectView",setup(e){const w=new class extends t{constructor(){super(),n(this,"finalScene",new i),n(this,"finalCamera"),n(this,"finalMesh",new r),n(this,"rendererTarget"),n(this,"finalMeshMaterial"),n(this,"textureLoader",new s),n(this,"mouse",new a),n(this,"target",new a),n(this,"composer")}load(){var e,n;this.init("#webgl"),null==(e=this.scene)||e.remove(this.axesHelper),null==(n=this.renderer)||n.setClearColor(16777215),this.initFinalScene(),this.initPost(),this.animate(),this.addObject(),window.addEventListener("mousemove",(e=>{this.mouse.x=e.clientX/this.innerWidth*2-1,this.mouse.y=-e.clientY/this.innerHeight*2+1}))}initPost(){const e={uniforms:{resolution:{value:new o},pixelRatio:{value:1},tDiffuse:{value:null}},vertexShader:"\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n        }",fragmentShader:"\n        uniform sampler2D tDiffuse;\n        varying vec2 vUv;\n        void main() {\n          vec4 final = texture2D(tDiffuse, vUv);\n          float rgbShift = 0.01;\n          vec2 uv = vUv;\n\n          vec2 r_uv = vec2(\n            uv.x + sin(uv.x - 0.5) * rgbShift * 1.0,\n            uv.y + sin(uv.y - 0.5) * rgbShift * 3.0\n          );\n\n          vec2 g_uv = vec2(\n            uv.x + sin(uv.x - 0.5) * rgbShift * 2.0,\n            uv.y + sin(uv.y - 0.5) * rgbShift * 2.0\n          );\n\n          vec2 b_uv = vec2(\n            uv.x + sin(uv.x - 0.5) * rgbShift * 3.0,\n            uv.y + sin(uv.y - 0.5) * rgbShift * 1.0\n          );\n          float r = texture2D(tDiffuse, r_uv).r;\n          float g = texture2D(tDiffuse, g_uv).g;\n          float b = texture2D(tDiffuse, b_uv).b;\n\n          gl_FragColor = vec4(r, g, b, 1.0);\n        }"},n=new v(this.finalScene,this.finalCamera),t=new u(e),i=new l(window.innerWidth,window.innerHeight);this.composer=new h(this.renderer,i);const r=new d;this.composer.addPass(n),this.composer.addPass(r),this.composer.addPass(t)}initFinalScene(){const e=this.innerWidth/this.innerHeight;this.finalCamera=new c(-1*e,1*e,1,-1,-100,100),this.finalMesh.geometry=new g(1,1),this.finalMeshMaterial=new m({uniforms:{uTexture:{value:null},uTime:{value:0},uGrain:{value:this.textureLoader.load("./texture/2.jpg")}},vertexShader:"\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform sampler2D uGrain;\n        uniform float uTime;\n        varying vec2 vUv;\n        void main() {\n          vec4 t = texture2D(uTexture, vUv);\n          vec4 grain = texture2D(uGrain, vUv);\n\n          // 将中心点从左下角移到中心，在计算\n          float dist = length(vUv - vec2(0.5, 0.5));\n\n          if(dist > 0.5) discard;\n\n          float r = 0.49;\n\n          // out edge\n          float g_out = pow(dist / r, 110.0);\n          float mag_out = 0.5 - cos(g_out - 1.0);\n          vec2 uvOut = dist > r ? vUv + mag_out * (vUv - vec2(0.5, 0.5)) : vUv;\n\n          // in edge\n          float g_in = pow(dist / r, -7.0);\n          vec2 g_in_power = vec2(sin(vUv.x - 0.5), sin(vUv.y - 0.5));\n          float mag_in = 0.5 - cos(g_in - 1.0);\n          vec2 uvIn = dist > r ? vUv : g_in_power * mag_in * (vUv - vec2(0.5, 0.5));\n\n          vec2 uv_display = vUv + uvOut * 0.1 + uvIn * 0.1 + (grain.rg - vec2(0.5)) * 0.1;\n          vec4 cc = texture2D(uTexture, uv_display);\n\n          gl_FragColor = t;\n          gl_FragColor = vec4(uvOut, 0.0, 1.0);\n          gl_FragColor = vec4(vec3(mag_in), 1.0);\n          gl_FragColor = vec4(uv_display, 0.0, 1.0);\n          gl_FragColor = cc;\n        }\n      "}),this.finalMesh.material=this.finalMeshMaterial,this.finalScene.add(this.finalMesh);const n=new r(new g(10,10),new f({color:3355443}));n.position.z=-1,this.finalMesh.add(n)}addObject(){this.rendererTarget=new l(this.innerWidth/1,this.innerHeight/1);const e=this.textureLoader.load("./texture/1.jpg"),n=this.textureLoader.load("./texture/xingkong.jpg");p("./models/gltf/DamagedHelmet/glTF/DamagedHelmet.gltf").then((t=>{var i;const r=t.scene.children[0];r.scale.set(50,50,50),r.position.set(0,0,0);const s=new m({uniforms:{uTexture:{value:e},uUvTexture:{value:n}},vertexShader:"\n          varying vec2 vUv;\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n        ",fragmentShader:"\n          varying vec2 vUv;\n          uniform sampler2D uTexture;\n          uniform sampler2D uUvTexture;\n          void main() {\n\n            vec4 t = texture2D(uTexture, vUv);\n            vec4 uvColor = texture2D(uUvTexture, vUv);\n\n            vec4 finalColor = mix(t, uvColor, vUv.x);\n\n            gl_FragColor = t;\n          }\n        "});r.material=s;const a=r.geometry.attributes.uv.array;for(let e=0;e<a.length;e+=4)a[e+0]=0,a[e+1]=0,a[e+2]=1,a[e+3]=0;null==(i=this.scene)||i.add(r)}))}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),x.update(),this.rendererTarget&&(this.renderer.setRenderTarget(this.rendererTarget),this.renderer.render(this.scene,this.camera),this.finalMeshMaterial.uniforms.uTexture.value=this.rendererTarget.texture,this.renderer.setRenderTarget(null),this.composer.render(),this.target.lerp(this.mouse,.1),this.finalMesh.position.x=this.target.x/5,this.finalMesh.position.y=this.target.y/5,this.scene.position.x=100*-this.target.x,this.scene.position.y=100*-this.target.y),null==(n=this.stats)||n.end()}};return _((()=>{w.load()})),y((()=>{w.destroy()})),(e,n)=>(M(),U(D,null,[n[0]||(n[0]=b("div",{id:"webgl"},null,-1)),n[1]||(n[1]=b("div",{class:"title-name"},"effect",-1))],64))}});export{T as default};
