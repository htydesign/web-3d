var e=Object.defineProperty,t=(t,s,n)=>((t,s,n)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[s]=n)(t,"symbol"!=typeof s?s+"":s,n);import{B as s}from"./base-CIMz0IkC.js";import{R as n,am as a,aO as i,a3 as r,b as o,M as l,V as h,s as c,k as p,aN as d,B as m,l as w,u,P as g,f as v,c as b}from"./three-CQVjGaU1.js";import{d as f,z as P,A as y,g as M,j as A,F as j,o as x}from"./@vue-B4sUqkWa.js";const S=f({__name:"PipeFlowViewTwo",setup(e){const f=new class extends s{constructor(){super(),t(this,"splineCamera",new n(60,window.innerWidth/window.innerHeight,.01,500)),t(this,"parent",new a),t(this,"cameraHelper"),t(this,"cameraSphereMesh")}load(){var e,t,s,n;this.init("#webgl"),this.animate(),null==(e=this.parent)||e.add(this.splineCamera),this.cameraHelper=new i(this.splineCamera),null==(t=this.scene)||t.add(this.cameraHelper);const a=new r(2,32,32);this.cameraSphereMesh=new o(a,new l({color:16720384})),null==(s=this.parent)||s.add(this.cameraSphereMesh),null==(n=this.scene)||n.add(this.parent),this.createMesh()}createPath(e){const t=e.map((e=>new h(e[0],e[1],e[2]))),s=new c;for(let n=0;n<t.length-1;n++)s.curves.push(new p(t[n],t[n+1]));return s}getTrajectoryPoint(e){const t=2*e,s=Math.sin(e);return new h(t,s,0)}createMesh(){var e,t;const s=new d([new h(-100,0,100),new h(-50,50,50),new h(0,0,0),new h(50,-50,50),new h(100,0,100)]),n=s.getPoints(50),a=(new m).setFromPoints(n),i=new m,{count:r,array:o}=a.attributes.position,l=new Float32Array(3*r);i.setAttribute("position",new w(l,3));for(let h=0;h<r-1;h++){const e=(0+h/r)%1,t=s.getPointAt(e);l[3*h+0]=t.x,l[3*h+1]=t.y,l[3*h+2]=t.z}i.attributes.position.needsUpdate=!0;const c=new u({vertexShader:"\n        void main(){\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 5.0;\n        }\n      ",fragmentShader:"\n        void main(){\n          gl_FragColor = vec4(1.0);\n        }\n      "}),p=new g(i,c);let f=0;p.onBeforeRender=()=>{var e;for(let t=0;t<r;t++){const n=(f+t/r)%1,a=s.getPointAt(n),i=s.getPointAt((f+(t+1)/r)%1);l[3*t+0]=a.x,l[3*t+1]=a.y,l[3*t+2]=a.z,0===t&&(null==(e=this.cameraSphereMesh)||e.position.copy(a),this.splineCamera.lookAt(i),this.splineCamera.position.copy(a))}f+=.001,i.attributes.position.needsUpdate=!0},null==(e=this.scene)||e.add(p);const P=new v(a,new b);null==(t=this.scene)||t.add(P)}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.cameraHelper&&this.cameraHelper.update(),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return P((()=>{f.load()})),y((()=>{f.gui.close(),f.gui.destroy()})),(e,t)=>(x(),M(j,null,[t[0]||(t[0]=A("div",{id:"webgl"},null,-1)),t[1]||(t[1]=A("div",{class:"title-name"},"粒子管道流动",-1))],64))}});export{S as default};
