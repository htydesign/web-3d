var e=Object.defineProperty,n=(n,t,o)=>((n,t,o)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[t]=o)(n,"symbol"!=typeof t?t+"":t,o);import{B as t}from"./base-UfGuG_MJ.js";import{V as o,G as a,L as i,B as s,a as r,C as l,M as c,b as h,c as u,d as m,S as v,e as d,P as w,f as p,g as f,h as g,A as y,D as b,Q as x,i as C,j as _,k as T,l as P,W as S,m as j,n as B,T as U,o as M,p as N,q as G,r as O,E as k}from"./three-ObQ0v_XT.js";import{C as z}from"./canvasTexture-CB5P4OHK.js";import{d as E,r as L,z as F,A as I,g as A,j as W,F as D,k as q,o as R,B as K,C as V,u as H}from"./@vue-B4sUqkWa.js";class X{constructor(){}init(e,n,t){const i=e.distanceTo(n),s=(new o).addVectors(e,n).multiplyScalar(.5),r=i/2-2,l=(new o).subVectors(e,n);l.normalize();const c=new x;c.setFromUnitVectors(new o(-1,0,0),l);const h=new a;h.name=t;const u=new a,m=new a;return h.add(u),h.add(m),u.add(this.line(e,c)),u.add(this.arrow(e,c)),u.add(this.dotLine(e,c,r,parseInt(i+""))),m.add(this.line(n,c)),m.add(this.arrow(n,c,-1)),m.add(this.dotLine(n,c,r,parseInt(i+""),-1)),h.add(this.text(s,i)),h}line(e,n){const t=new i({color:16777215,linewidth:1}),a=[new o(0,0,-1),new o(0,0,1)],l=(new s).setFromPoints(a),c=new r(l,t);return c.quaternion.multiply(n),c.position.copy(e),c}arrow(e,n,t=1){const o=new l(.25,1,8);o.translate(0,-.5,0);const a=new c({color:16777215}),i=new h(o,a);return i.quaternion.multiply(n),i.position.copy(e),i.rotateZ(Math.PI/2*t),i}dotLine(e,n,t,a,i=1){const r=new o(0,0,0);r.x+=1*i;const l=r.clone();l.x+=t*i;const c=new u(r,l),h=new s,p=new Float32Array(3*a);h.setAttribute("position",new m(p,3));const f=new Float32Array(3*a);h.setAttribute("toPosition",new m(f,3));for(let o=0;o<a;o++){const e=c.getPoint(o/a);f[3*o+0]=e.x,f[3*o+1]=e.y,f[3*o+2]=e.z;const n=c.getPoint(0);p[3*o+0]=n.x,p[3*o+1]=n.y,p[3*o+2]=n.z}h.attributes.position.needsUpdate=!0,h.attributes.toPosition.needsUpdate=!0;const g=new v({uniforms:{uTime:{value:0},uColor:{value:new d(16777215)}},vertexShader:"\n        attribute vec3 toPosition;\n        uniform float uTime;\n       \n          void main(){\n            vec3 newPosition = position;\n            if(newPosition.x < toPosition.x){\n             // newPosition.x += uTime;\n            }\n            newPosition =  toPosition;\n            \n            gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n            gl_PointSize = 3.0;\n          }\n        ",fragmentShader:"\n       uniform vec3 uColor;\n          void main(){           \n            gl_FragColor = vec4(uColor,1.0);\n          }\n        "}),y=new w(h,g);return y.quaternion.multiply(n),y.position.copy(e),y.onBeforeRender=()=>{g.uniforms.uTime.value+=.1},y}text(e,n){const t=new z,o=new p(t.init({text:n.toFixed(2)+"m",width:600})),a=new f(new g({map:o,color:16777215,blending:y,transparent:!0,side:b}));return a.position.copy(e),a.scale.set(3,1,1),a}fade(){}hade(){}}const Z={class:"color-list"},$=["onClick"],J=E({__name:"CarModel",setup(e){const i=["#ff0000","#00ff00","#0000ff","#ffff00","#00ffff","#ff00ff","#ffffff"],s=L(0),r=new o(0,20,30);const l=new class extends t{constructor(){super(r),n(this,"baseGroup",new a),n(this,"torusGroup",new a),n(this,"annotation",new X),n(this,"annotationGroup",new a),n(this,"uniforms",{uTime:{value:0},uStartColor:{value:new d(16776960)},uEndColor:{value:new d(16711680)},uEnvMap:{value:null}}),n(this,"isChange",!1),n(this,"front"),n(this,"wheelGroup",[]),n(this,"isWheel",!1),n(this,"car",{run:!1}),n(this,"material"),n(this,"cubeCamera"),n(this,"onSelectColor",(e=>{s.value=e,this.changeColor(e)}))}load(){var e,n;this.init("#webgl"),this.animate(),null==(e=this.scene)||e.add(this.annotationGroup,this.baseGroup,this.torusGroup),this.controls.minPolarAngle=Math.PI/10,this.controls.maxPolarAngle=Math.PI/2.2,this.controls.maxDistance=70,this.controls.minDistance=20,this.loadModel(),this.light({type:"SpotLight",x:0,y:50,z:0}),null==(n=this.scene)||n.remove(this.axesHelper),this.baseGeometry(),this.annotationGroup.visible=!1,this.gui.add(this.annotationGroup,"visible").name("车身尺寸").onChange((e=>{})),this.createTubeGeo()}addEventControlsUpdate(){this.annotationGroup.children.forEach((e=>{"front"==e.name&&(this.front=e)}))}change(){const e=C.radToDeg(this.camera.rotation.y)||0;this.front&&(this.front.visible=!1,e>-1&&e<1&&(this.front.visible=!0))}loadModel(){const e=new _,n=new T;n.setDecoderPath("./draco/"),e.setDRACOLoader(n),e.load("./models/gltf/car.glb",(e=>{var n;const t=e.scene;t.scale.set(5,5,5),t.position.set(0,2,0),t.rotateY(Math.PI),null==(n=this.scene)||n.add(t),t.traverse((e=>{e instanceof h&&(e.castShadow=!0)})),this.wheelGroup=[t.getObjectByName("wheel001_wheel0_0"),t.getObjectByName("wheel001_wheel1_0"),t.getObjectByName("wheel001_wheel2_0"),t.getObjectByName("wheel001_wheel3_0"),t.getObjectByName("wheel001_wheel4_0"),t.getObjectByName("wheel002_wheel0_0"),t.getObjectByName("wheel002_wheel1_0"),t.getObjectByName("wheel002_wheel2_0"),t.getObjectByName("wheel002_wheel3_0"),t.getObjectByName("wheel002_wheel4_0"),t.getObjectByName("wheel003_wheel0_0"),t.getObjectByName("wheel003_wheel1_0"),t.getObjectByName("wheel003_wheel2_0"),t.getObjectByName("wheel003_wheel3_0"),t.getObjectByName("wheel003_wheel4_0"),t.getObjectByName("wheel_wheel0_0"),t.getObjectByName("wheel_wheel1_0"),t.getObjectByName("wheel_wheel2_0"),t.getObjectByName("wheel_wheel3_0"),t.getObjectByName("wheel_wheel4_0")],this.gui.add(this.car,"run").name("是否开启轮子").onChange((e=>{e?new P.Tween(this.camera.position).to({x:20,y:5,z:20},2e3).easing(P.Easing.Linear.None).onUpdate((()=>{var e,n;null==(e=this.controls)||e.target.set(0,0,0),null==(n=this.controls)||n.update()})).start().onComplete((()=>{new P.Tween(this.baseGroup.position).to({x:0,y:-4,z:0},2e3).easing(P.Easing.Linear.None).start().onComplete((()=>{})),new P.Tween(t.position).to({x:0,y:0,z:0},1e3).easing(P.Easing.Linear.None).start().onComplete((()=>{this.isWheel=!0,this.torusGroup.visible=!0}))})):(this.isWheel=!1,this.torusGroup.visible=!1,new P.Tween(t.position).to({x:0,y:2,z:0},1e3).easing(P.Easing.Linear.None).delay(1e3).start().onComplete((()=>{})),new P.Tween(this.baseGroup.position).to({x:0,y:0,z:0},2e3).easing(P.Easing.Linear.None).start().onComplete((()=>{new P.Tween(this.camera.position).to({x:r.x,y:r.y,z:r.z},2e3).easing(P.Easing.Linear.None).onUpdate((()=>{var e,n;null==(e=this.controls)||e.target.set(0,0,0),null==(n=this.controls)||n.update()})).start()})))}));const a=t.getObjectByName("chassis_primary_0");a.geometry.computeBoundingBox();const i=a.geometry.boundingBox&&a.geometry.boundingBox.max.multiplyScalar(5)||{x:0,y:0,z:0},s=a.geometry.boundingBox&&a.geometry.boundingBox.min.multiplyScalar(5)||{x:0,y:0,z:0};this.annotationGroup.add(this.annotation.init(new o(s.x,4,14),new o(i.x,4,14),"front"),this.annotation.init(new o(6,s.z+Math.abs(s.z)+2,0),new o(6,i.z+Math.abs(s.z)+2,0),"right"),this.annotation.init(new o(-6,4,s.y+2),new o(-6,4,i.y+4),"left"));const l=new S(256);this.cubeCamera=new j(.1,1e3,l);const c=a.material;c.color.setHex(16777215*Math.random());const u={...this.uniforms,uEnvMap:{value:l.texture}};c.envMap=l.texture,c.needsUpdate=!0,c.roughness=0,c.metalness=.8,c.transparent=!0,c.color=new d(16777215),this.gui.addColor(c,"color").name("color"),this.gui.add(c,"roughness",0,1,.1).name("roughness"),this.gui.add(c,"metalness",0,1,.1).name("metalness"),c.onBeforeCompile=e=>{Object.assign(e.uniforms,u),e.vertexShader=`\n          varying vec2 vUv;\n          ${e.vertexShader}\n          `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n          #include <fog_vertex>\n            vUv = uv;\n          "),e.fragmentShader=`\n          uniform float uTime;\n          varying vec2 vUv;\n          uniform vec3 uStartColor;\n          uniform vec3 uEndColor;\n          uniform sampler2D uEnvMap;\n          ${e.fragmentShader}\n        `,e.fragmentShader=e.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n            vec4 diffuseColor = vec4( diffuse, opacity );\n\n             //中心点\n            vec2 center = vUv - vec2(0.45);\n\n            float negationTime = -uTime;\n\n            vec3 color = uEndColor;\n\n            if(center.y > uTime){\n                color = uStartColor;\n            }\n            if(center.y < negationTime){\n                color = uStartColor;\n            }\n            vec3 envColor = texture2D(uEnvMap, vUv).rgb;\n\n            // color += envColor;\n            \n            diffuseColor = vec4(color,diffuseColor.a);\n\n          ")}}))}createTubeGeo(){const e=new B;e.add(new u(new o(-1e3,0,0),new o(1e3,0,0)));const n=new U(e,128,100,8,!1);this.material=new v({side:b,uniforms:{uTime:{value:0}},vertexShader:"\n        varying vec2 vUv;\n\n        void main(){\n          vUv = uv;\n          vec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        uniform float uTime;\n\n        // https://www.shadertoy.com/view/Msf3WH\n        vec2 hash(vec2 p)// replace this by something better\n        {\n            p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\n            return-1.+2.*fract(sin(p)*43758.5453123);\n        }\n\n        float noise(in vec2 p)\n        {\n            const float K1=.366025404;// (sqrt(3)-1)/2;\n            const float K2=.211324865;// (3-sqrt(3))/6;\n\n            vec2 i=floor(p+(p.x+p.y)*K1);\n            vec2 a=p-i+(i.x+i.y)*K2;\n            float m=step(a.y,a.x);\n            vec2 o=vec2(m,1.-m);\n            vec2 b=a-o+K2;\n            vec2 c=a-1.+2.*K2;\n            vec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\n            vec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\n            return dot(n,vec3(70.));\n        }\n        vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n        {\n            return a + b*cos( 6.283185*(c*t+d) );\n        }\n\n        void main(){\n          vec2 noiseUv = vUv;\n          // noiseUv.x+=uTime*.5;\n          noiseUv.x = mod((vUv.x+uTime) * 1.0 , 1.0);\n\n          //  noiseUv.x = fract(mod((vUv.x+uTime), 1.0)*2.0);\n\n          float mask = noise(noiseUv * vec2(5.0,100.0));\n          mask = smoothstep(0.20,0.5,mask);\n          // mask = step(0.5,mask);\n          // mask = pow(mask, 2.0);\n          // mask = 1.0 - mask;\n\n          mask *= smoothstep(0.00,0.5,vUv.x)*smoothstep(0.00,0.5,1.0-vUv.x);\n          mask *= smoothstep(0.20,0.5,vUv.y)*smoothstep(0.20,0.5,1.0-vUv.y);\n\n          vec3 col= palette(mask,vec3(0.5),vec3(0.35),vec3(0.9),vec3(0.00, 0.33, 0.67));\n          col *= vec3(2.,1.,500.);\n          gl_FragColor = vec4(col,mask);\n        }\n      ",transparent:!0,blending:y,opacity:0});const t=new h(n,this.material);t.rotateX(Math.PI/2),t.rotateZ(Math.PI/2),this.torusGroup.add(t)}baseGeometry(){var e;const n=new M(15,15,1,64),t=new N({color:3355443}),o=new h(n,t);o.position.set(0,1.5,0),o.receiveShadow=!0,o.name="cylinder1",this.baseGroup.add(o);const a=new M(20,20,1,64),i=new N({color:4473924}),s=new h(a,i);s.position.set(0,.5,0),s.receiveShadow=!0,s.name="cylinder2",this.baseGroup.add(s);const r=new G(200,200),l=new N({color:2236962}),c=new h(r,l);c.position.set(0,0,0),c.rotateX(-Math.PI/2),c.receiveShadow=!0,null==(e=this.scene)||e.add(c);const u=new G(200,200,50,50),m=new v({vertexShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n\n        void main() {\n            vUv = uv;\n            vec4 newPosition = modelMatrix * vec4(position, 1.0);\n\n            //中间凸起\n            float dist = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.15, 0.05, dist);\n            //float s = smoothstep(0.2, 0.05, abs(uv.x - 0.5 + 0.5 * sin(uTime)));\n              // newPosition.y -= 8.0 ;\n              // newPosition.y += 8.0 *s;\n            newPosition.y += 8.0 * strength;\n\n            gl_Position = projectionMatrix * viewMatrix * newPosition;\n\n\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n        uniform float uRepeat;\n        uniform float lightWidth;\n        uniform float uSpeed;\n\n        void main(){\n           // 先居中，再绘制圆形\n\n            float dist = fract((length(vUv - vec2(0.5)) /0.707 - uTime * uSpeed) * uRepeat);\n            float radius = lightWidth;\n            vec3 color = vec3(step(radius, dist));\n\n            float alpha = 1.0;\n            if(color.r == 1.0){\n              alpha = 0.0;\n            }\n            color+= vec3(1.0);\n\n            vec4 vColor = vec4(color, alpha);\n\n            float len = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.5, 0.35, len);\n            vColor.a *= strength;\n\n\n            gl_FragColor = vColor;\n\n        }\n      ",transparent:!0,uniforms:{uTime:{value:0},uRepeat:{value:10},lightWidth:{value:.01},uSpeed:{value:.01}},wireframe:!1,depthTest:!1}),d=new h(u,m);d.position.set(0,3,0),d.rotateX(-Math.PI/2),d.onBeforeRender=()=>{m.uniforms.uTime.value+=.05},d.visible=!1,this.baseGroup.add(d);const w=this.gui.addFolder("扩散光纹");w.add(m.uniforms.lightWidth,"value",.01,.5,.01).name("宽度"),w.add(m.uniforms.uRepeat,"value",1,30,1).name("数量"),w.add(m.uniforms.uSpeed,"value",.01,.05,.01).name("速度"),w.add(d,"visible").name("是否可见")}changeColor(e){this.isChange=!1,this.uniforms.uTime.value=0,this.uniforms.uStartColor.value=this.uniforms.uEndColor.value,this.uniforms.uEndColor.value=new d(i[e])}updateColor(){this.isChange||(this.uniforms.uTime.value<=1?this.uniforms.uTime.value+=.01:this.isChange=!0)}environment(){const e=(new O).load("/texture/sky.jpg");e.mapping=k,this.scene.background=e}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),P.update(),this.updateColor(),this.cubeCamera&&(this.cubeCamera.update(this.renderer,this.scene),this.material.uniforms.uTime.value+=.01),this.isWheel&&(this.wheelGroup.forEach((e=>{e.rotation.x-=.2})),this.material),this.renderer.render(this.scene,this.camera),null==(n=this.stats)||n.end()}};return F((()=>{l.load()})),I((()=>{l.gui.close(),l.gui.destroy()})),(e,n)=>(R(),A(D,null,[n[0]||(n[0]=W("div",{id:"webgl"},null,-1)),W("div",Z,[(R(),A(D,null,q(i,((e,n)=>W("div",{class:K(["color-item",s.value==n?"active":""]),key:n,style:V({background:e}),onClick:e=>H(l).onSelectColor(n)},null,14,$))),64))])],64))}});export{J as default};
