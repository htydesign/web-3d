var e=Object.defineProperty,t=(t,n,s)=>((t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s)(t,"symbol"!=typeof n?n+"":n,s);import{B as n}from"./base-EaBVrMG2.js";import{a9 as s,aA as a,aZ as i,b as r,M as o,a as l,h,N as c,x as p,r as d,B as m,y as w,S as u,z as g,i as v,f as b}from"./three-BSKMsEwc.js";import{d as f,A as y,B as P,g as M,j as A,F as x,o as S}from"./@vue-Di8-S161.js";const j=f({__name:"PipeFlowViewTwo",setup(e){const f=new class extends n{constructor(){super(),t(this,"splineCamera",new s(60,window.innerWidth/window.innerHeight,.01,500)),t(this,"parent",new a),t(this,"cameraHelper"),t(this,"cameraSphereMesh")}load(){var e,t,n,s;this.init("#webgl"),this.animate(),null==(e=this.parent)||e.add(this.splineCamera),this.cameraHelper=new i(this.splineCamera),null==(t=this.scene)||t.add(this.cameraHelper);const a=new r(2,32,32);this.cameraSphereMesh=new o(a,new l({color:16720384})),null==(n=this.parent)||n.add(this.cameraSphereMesh),null==(s=this.scene)||s.add(this.parent),this.createMesh()}createPath(e){const t=e.map((e=>new h(e[0],e[1],e[2]))),n=new c;for(let s=0;s<t.length-1;s++)n.curves.push(new p(t[s],t[s+1]));return n}getTrajectoryPoint(e){const t=2*e,n=Math.sin(e);return new h(t,n,0)}createMesh(){var e,t;const n=new d([new h(-100,0,100),new h(-50,50,50),new h(0,0,0),new h(50,-50,50),new h(100,0,100)]),s=n.getPoints(50),a=(new m).setFromPoints(s),i=new m,{count:r,array:o}=a.attributes.position,l=new Float32Array(3*r);i.setAttribute("position",new w(l,3));for(let h=0;h<r-1;h++){const e=(0+h/r)%1,t=n.getPointAt(e);l[3*h+0]=t.x,l[3*h+1]=t.y,l[3*h+2]=t.z}i.attributes.position.needsUpdate=!0;const c=new u({vertexShader:"\n        void main(){\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 5.0;\n        }\n      ",fragmentShader:"\n        void main(){\n          gl_FragColor = vec4(1.0);\n        }\n      "}),p=new g(i,c);let f=0;p.onBeforeRender=()=>{var e;for(let t=0;t<r;t++){const s=(f+t/r)%1,a=n.getPointAt(s),i=n.getPointAt((f+(t+1)/r)%1);l[3*t+0]=a.x,l[3*t+1]=a.y,l[3*t+2]=a.z,0===t&&(null==(e=this.cameraSphereMesh)||e.position.copy(a),this.splineCamera.lookAt(i),this.splineCamera.position.copy(a))}f+=.001,i.attributes.position.needsUpdate=!0},null==(e=this.scene)||e.add(p);const y=new v(a,new b);null==(t=this.scene)||t.add(y)}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.cameraHelper&&this.cameraHelper.update(),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return y((()=>{f.load()})),P((()=>{f.gui.close(),f.gui.destroy()})),(e,t)=>(S(),M(x,null,[t[0]||(t[0]=A("div",{id:"webgl"},null,-1)),t[1]||(t[1]=A("div",{class:"title-name"},"粒子管道流动",-1))],64))}});export{j as default};
