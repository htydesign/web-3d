var n=Object.defineProperty,e=(e,t,a)=>((e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a)(e,"symbol"!=typeof t?t+"":t,a);import{B as t}from"./base-DHNtifFD.js";import{G as a,a3 as o,c as i,d as s,S as r,D as l,l as u,a as m,C as c,A as d,o as f,z as v,F as h,b as p,N as w,aj as g,ad as x}from"./three-BrSCsmw0.js";import{d as y,z as P,A as S,g as b,j as T,F as M,o as z}from"./@vue-DBDSYTU2.js";const A=y({__name:"FireWorksView2",setup(n){class y{constructor(n,e){const t=new i,a=450,o=new Float32Array(1350);t.setAttribute("position",new s(o,3));const c=new Float32Array(a);t.setAttribute("aIndex",new s(c,1));let d=0,f=50;for(let i=0;i<a;i++){c[i]=i,i%90==0&&d++,1===d?(o[3*i+1]=0,f=50):2===d?(o[3*i+1]=2,f=52):3===d?(o[3*i+1]=4,f=54):4===d?(o[3*i+1]=6,f=52):5===d&&(o[3*i+1]=8,f=50);const n=Math.sin(x.degToRad(i%90*4))*f,e=Math.cos(x.degToRad(i%90*4))*f;o[3*i+0]=n,o[3*i+2]=e}t.attributes.position.needsUpdate=!0,t.attributes.aIndex.needsUpdate=!0;const v=new r({uniforms:{uIndex:{value:3},uFlag:{value:0},uTime:{value:0}},vertexShader:"\n       attribute float aIndex;\n\n       varying float index;\n       varying float index2;\n\n       uniform float uTime;\n\n       float PI = 3.1415925;\n\n        void main(){\n          index = mod(aIndex, 90.0);\n\n          vec3 myPosition = position;\n\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(myPosition, 1.0);\n          gl_PointSize = 5.0;\n          gl_PointSize *= 100.0 / -(modelViewMatrix * vec4(position, 1.0)).z;\n        }\n      ",fragmentShader:"\n        varying float index;\n        uniform float uIndex;\n        uniform float uFlag;\n\n        //i 当前下表 n 一圈点的下表\n        vec4 mColor(in float i, in float n){\n\n          float max = i + 5.0;\n          float min = i - 5.0;\n\n          vec3 color = vec3(1.0, 1.0, 1.0);\n          float alpha = 1.0;\n\n            if(min < 0.0 && (n < max || n > min  + 89.0) ){\n              //如果min<0,则min+89.0, i=2【i-5+89, n, i+5】 【87, n, 8】\n              min += 89.0;\n              if(n > min && n < 89.0){\n                alpha =1.0- (i - n + 89.0) / 5.0;\n              }else if(n < max && n >= i){\n                alpha = 1.0 - (n - i) / 5.0;\n              }else{\n                alpha =  (n + 89.0 - min ) / 5.0;\n              }\n              return vec4(color, alpha);\n            }else if(max > 89.0 && (n < max - 89.0 || n > min)){\n              //如果max>89,则max-89.0, n=89【n-5, n+5-89】【84, n, 4】\n              max -= 89.0;\n              if(n <= i && n>min){\n                alpha = (n - min) / (i - min);\n              }else if(n > i ){\n                alpha =  (89.0 - n + max) / (89.0 - i);\n              } else{\n                alpha = 1.0 - (89.0 - i) / 5.0;\n              }\n\n              return vec4(color, alpha);\n            }else if(n >= min && n <= max){\n              if(i >= n){\n                alpha = 1.0-(i - n) / 5.0;\n              }else{\n                alpha = 1.0-(n - i) / 5.0;\n              }\n              return vec4(color, alpha);\n            }else{\n              float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n              return vec4(0.1, 0.1, 0.1, alpha);\n            }\n\n\n\n        }\n\n        void main(){\n          float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n          if(uFlag == 1.0){\n            gl_FragColor = vec4(1.0, 1.0, 1.0, alpha);\n          }else{\n            gl_FragColor = mColor(uIndex,index);\n          }\n\n        }\n      ",transparent:!0,side:l}),h=new u(t,v);h.position.set(0,70,0);let p=0;let w=0,g=!1;const y={n:10};e.add(y,"n",1,50,1).name("烟花间隔(毫秒)"),h.onBeforeRender=()=>{if(v.uniforms.uTime.value+=.001,v.uniforms.uIndex.value>90&&(v.uniforms.uIndex.value=0,p++),p>=2){v.uniforms.uFlag.value=1,g||(g=!0,new I(n));const e=new m(75*Math.random()-35,72,75*Math.random()-35);w%y.n==0&&(new C(n,e),new A(n,e,150));let i=0,s=1;for(let n=0;n<a;n++){c[n]=n,n%90==0&&i++,s=1,1===i?(o[3*n+1]=0,f=50):2===i?(o[3*n+1]=2,s=-1,f=52):3===i?(o[3*n+1]=4,f=54):4===i?(o[3*n+1]=6,s=-1,f=52):5===i&&(o[3*n+1]=8,f=50);const e=Math.sin(x.degToRad((n+w/100*s)%90*4))*f,t=Math.cos(x.degToRad((n+w/100*s)%90*4))*f;o[3*n+0]=e,o[3*n+2]=t}t.attributes.position.needsUpdate=!0}else v.uniforms.uIndex.value+=1;w+=1},n.add(h)}}class A{constructor(n,e,t){const a=e,o=new m(e.x,0,e.z),l=new i,f=new c(Math.random(),Math.random(),Math.random()),v=new r({uniforms:{uTime:{value:0},uHeight:{value:t/2},uColor:{value:f},uScale:{value:0},uEndScale:{value:1}},vertexShader:"\n        attribute vec3 toPosition;\n        uniform float uTime;\n        uniform float uScale;\n        uniform float uHeight;\n        uniform float uEndScale;\n\n        void main(){\n            vec3 myPosition = position;\n            myPosition.y -= 1.0 * uTime;\n\n            vec4 mvPosition = modelViewMatrix * vec4(myPosition, 1.0);\n\n            gl_PointSize = 100.0 * 50.0 / -mvPosition.z;\n            gl_PointSize *= uScale * uEndScale;\n\n            gl_Position = projectionMatrix * mvPosition;\n\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main(){\n            float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n            gl_FragColor = vec4(uColor, alpha);\n        }\n      ",transparent:!0,blending:d,depthTest:!1}),h=new Float32Array(a);l.setAttribute("position",new s(h,3)),l.setAttribute("toPosition",new s(new Float32Array(o),3));const p=new u(l,v);let w=0;p.onBeforeRender=()=>{v.uniforms.uScale.value<=2&&(v.uniforms.uScale.value+=.1,0==w&&(w=1,new F(n,a,f,t))),v.uniforms.uTime.value<=t?v.uniforms.uTime.value+=1:(p.clear(),n.remove(p)),v.uniforms.uTime.value>=.8*t&&v.uniforms.uEndScale.value>=0&&(v.uniforms.uEndScale.value-=.05)},n.add(p)}}class F{constructor(n,e,t,a){const o=new i,l=new Float32Array(150);o.setAttribute("position",new s(l,3));const m=new Float32Array(50);o.setAttribute("aDelay",new s(m,1));for(let i=0;i<50;i++)l[3*i+0]=e.x,l[3*i+1]=e.y,l[3*i+2]=e.z,m[i]=100*i;const c=new r({uniforms:{uTime:{value:0},uColor:{value:t},uEndScale:{value:1}},vertexShader:"\n        attribute float aDelay;\n\n        uniform float uTime;\n        uniform float uEndScale;\n\n        void main() {\n          vec3 pos = position;\n\n          float delayTime = aDelay + uTime;\n\n         if(uTime * 1000.0 > aDelay){\n          pos.y -= (uTime * 1000.0 - aDelay) * 0.01;\n         }\n\n\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n          gl_PointSize = 6.0 - 4.0 * aDelay/2000.0;\n\n          gl_PointSize *= uEndScale;\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main() {\n          gl_FragColor = vec4(uColor, 1.0);\n        }\n      "}),d=new u(o,c);d.onBeforeRender=()=>{c.uniforms.uTime.value>a/10?(d.clear(),n.remove(d)):(c.uniforms.uTime.value+=.1,c.uniforms.uTime.value>=.08*a&&c.uniforms.uEndScale.value>=0&&(c.uniforms.uEndScale.value-=.5))},n.add(d)}run(){}}class C{constructor(n,e){const t=new i,a=new Float32Array(150);t.setAttribute("position",new s(a,3));const o=new Float32Array(150);t.setAttribute("toPosition",new s(o,3));const l=new Float32Array(50);t.setAttribute("aSpeed",new s(l,1));for(let i=0;i<50;i++)a[3*i+0]=e.x,a[3*i+1]=e.y,a[3*i+2]=e.z,o[3*i+0]=10*Math.random()*Math.sin(i),o[3*i+1]=10*Math.random()-5,o[3*i+2]=10*Math.random()*Math.cos(i),l[i]=Math.random();const m=new r({uniforms:{uTime:{value:0},uColor:{value:new c(Math.random(),Math.random(),Math.random())},uScale:{value:1},uSpeed:{value:.5}},vertexShader:"\n        attribute vec3 toPosition;\n        attribute float aSpeed;\n\n        uniform float uTime;\n        uniform float uScale;\n\n        void main(){\n            vec3 myPosition = position;\n            myPosition += toPosition * uTime ;\n\n            vec4 mvPosition = modelViewMatrix * vec4(myPosition, 1.0);\n\n            gl_PointSize = 100.0 * 30.0 / -mvPosition.z;\n            gl_PointSize *= uScale;\n            gl_Position = projectionMatrix * mvPosition;\n\n        }\n      ",fragmentShader:"\n        uniform vec3 uColor;\n        void main(){\n            float alpha = 1.0 - distance(gl_PointCoord,vec2(0.5)) * 2.0;\n            gl_FragColor = vec4(uColor, alpha);\n        }\n      ",transparent:!0,blending:d,depthTest:!1}),f=new u(t,m);f.onBeforeRender=()=>{m.uniforms.uTime.value<1?m.uniforms.uTime.value+=.05:m.uniforms.uScale.value<0?(n.remove(f),f.clear()):m.uniforms.uScale.value-=.02},n.add(f)}}class _{constructor(n,e,t){const a=new i,o=new Float32Array([...e,...e]);a.setAttribute("position",new s(o,3));const r=new g(a,new w({color:16777215,opacity:.5})),l=t.x-e.x,u=t.y-e.y,m=t.z-e.z,c=l/50,d=u/50,f=m/50;r.onBeforeRender=()=>{o[3]==t.x&&o[4]==t.y&&o[5]==t.z||(e.x>=t.x?o[3]>t.x&&(o[3]+=c):o[3]<t.x&&(o[3]+=c),e.y>=t.y?o[4]>t.y&&(o[4]+=d):o[4]<t.y&&(o[4]+=d),e.z>=t.z?o[5]>t.z&&(o[5]+=f):o[5]<=t.z&&(o[5]+=f),a.attributes.position.needsUpdate=!0)},n.add(r)}}class I{constructor(n){const e=[];for(let a=0;a<5;a++){const n=x.degToRad(72*a),t=40*Math.cos(n),o=40*Math.sin(n);e.push(new m(t,o,0))}const t=new a;t.rotateX(Math.PI/2),t.position.set(0,74,0),n.add(t),new _(t,e[0],e[2]),new _(t,e[2],e[4]),new _(t,e[4],e[1]),new _(t,e[1],e[3]),new _(t,e[3],e[0]),new R(t,40),new R(t,45,!1)}}class D{constructor(n,e){const t=new f,a=new v;a.setDecoderPath("./draco/"),t.setDRACOLoader(a),t.load("./models/gltf/DamagedHelmet/glTF/DamagedHelmet.gltf",(t=>{const a=t.scene;a.scale.set(25,25,25),a.position.set(0,110,0);const i=new h(new m(0,-1,0),74);a.traverse((n=>{n instanceof p&&(n.material.clippingPlanes=[i])})),n.add(a),e.add(a.position,"y",0,110,1),setTimeout((()=>{new o.Tween(n.rotation).to({x:0},2e3).start().onComplete((()=>{new o.Tween(a.position).to({x:0,y:0,z:0},5e3).start()}))}),5e3)}))}}class R{constructor(n,e,t=!0){const a=[],o=new i,r=new Float32Array(225);o.setAttribute("position",new s(r,3));for(let i=0;i<=75;i++){const n=i/75*Math.PI*2,t=e*Math.cos(n),o=e*Math.sin(n);a.push(new m(t,o,0))}r[0]=a[0].x,r[1]=a[0].y,r[2]=a[0].z;const l=new w({color:16777215,opacity:.5}),u=new g(o,l);let c=t?0:a.length,d=0;u.onBeforeRender=()=>{t?c<a.length-1?d%1==0&&(r[3*c+0]=a[c+0].x,r[3*c+1]=a[c+0].y,r[3*c+2]=a[c+0].z,c++,o.attributes.position.needsUpdate=!0):a.length:c>0&&d%1==0&&(r[3*c+0]=a[c-1].x,r[3*c+1]=a[c-1].y,r[3*c+2]=a[c-1].z,c--,o.attributes.position.needsUpdate=!0),d+=1},n.add(u)}}const E=new class extends t{constructor(){super(),e(this,"group",new a)}load(){var n;this.init("#webgl"),this.animate(),this.light({type:"AmbientLight",x:0,y:70,z:100}),this.light({type:"DirectionalLight",x:0,y:70,z:-200}),this.light({x:0,y:100,z:0}),this.create(),null==(n=this.scene)||n.remove(this.axesHelper),new y(this.scene,this.gui),new D(this.scene,this.gui),this.renderer.localClippingEnabled=!0}create(){}animate(){var n,e;null==(n=this.stats)||n.begin(),requestAnimationFrame((()=>{this.animate()})),o.update(),this.renderer.render(this.scene,this.camera),null==(e=this.stats)||e.end()}};return P((()=>{E.load()})),S((()=>{E.gui.close(),E.gui.destroy()})),(n,e)=>(z(),b(M,null,[e[0]||(e[0]=T("div",{id:"webgl"},null,-1)),e[1]||(e[1]=T("div",{class:"title-name"},"烟花2",-1))],64))}});export{A as default};
