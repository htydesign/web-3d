var e=Object.defineProperty,i=(i,t,n)=>((i,t,n)=>t in i?e(i,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[t]=n)(i,"symbol"!=typeof t?t+"":t,n);import{k as t,a5 as n,g as s,an as a,ao as h,ap as r,i as o,a4 as d,aq as c,H as w,J as l,a1 as p,a2 as g,K as m,ar as y,as as H,at as u,au as W,P as x,M as b,D as z,b as P}from"./three-BrSCsmw0.js";class f{init(e,i,c){const w={type:"PointLight",x:0,y:0,z:0,color:16777215,intensity:1e4,distance:0,decay:2,shadowWidth:1024,shadowHeight:1024,shadowNear:.5,shadowFar:1e3,lightHelper:!1,...c};let l;switch(w.type){case"PointLight":l=new t(w.color,w.intensity,w.distance,w.decay),w.lightHelper&&e.add(new n(l,10));case"AmbientLight":l=new d(w.color,w.intensity);case"SpotLight":l=new o(w.color,w.intensity);case"RectAreaLight":l=new r(w.color,w.intensity);case"HemisphereLight":l=new h(w.color,w.color,w.intensity);case"DirectionalLight":l=new s(w.color,w.intensity),w.lightHelper&&e.add(new a(l,5));default:if(l=new t(w.color,w.intensity,w.distance,w.decay),w.lightHelper){const i=new n(l,10);e.add(i)}}l.position.set(w.x,w.y,w.z),l.castShadow=!0,e.add(l),l.shadow.mapSize.width=w.shadowWidth,l.shadow.mapSize.height=w.shadowHeight,l.shadow.camera.near=w.shadowNear,l.shadow.camera.far=w.shadowFar,i.add(l,"intensity",0,1e4,1).name(w.type)}}class L{constructor(){i(this,"scene"),i(this,"camera"),i(this,"innerWidth"),i(this,"innerHeight"),i(this,"renderer"),i(this,"controls"),i(this,"clock"),i(this,"stats"),i(this,"gui"),i(this,"axesHelper",new c(150)),this.innerWidth=window.innerWidth,this.innerHeight=window.innerHeight,this.scene=new w,this.camera=new l(75,innerWidth/innerHeight,.1,2e3),this.camera.position.set(0,100,150),this.renderer=new p({antialias:!0}),this.renderer.setSize(this.innerWidth,this.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=g,this.scene.add(this.axesHelper),this.controls=new m(this.camera,this.renderer.domElement),this.clock=new y,this.gui=new H,window.onresize=()=>{this.innerWidth=window.innerWidth,this.innerHeight=window.innerHeight,this.camera.aspect=this.innerWidth/this.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.innerWidth,this.innerHeight)}}gridHelper(){var e;const i=new u(1e3,10);null==(e=this.scene)||e.add(i)}onResize(){this.camera.aspect=window.innerWidth/window.innerHeight}light(e={}){(new f).init(this.scene,this.gui,e)}init(e){const i=document.querySelector(e);null==i||i.appendChild(this.renderer.domElement),this.stats=new W,null==i||i.appendChild(this.stats.dom)}plane(){var e;const i=new x(100,100),t=new b({color:65280,side:z}),n=new P(i,t);n.rotation.x=Math.PI/2,null==(e=this.scene)||e.add(n)}}export{L as B};
