var e=Object.defineProperty,n=(n,t,a)=>((n,t,a)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a)(n,"symbol"!=typeof t?t+"":t,a);import{B as t}from"./base-D8exnqXt.js";import{C as a,N as s,a as o,aM as i,P as r,b as l,M as h,aN as c,c as u,d as m,am as d,S as v,l as f}from"./three-aFiGC2Cx.js";import{g,o as p}from"./modelLoader-DgJA63u5.js";import{d as w,z as y,A as P,g as b,j as M,F as S,o as x}from"./@vue-DISYwsDo.js";const C=w({__name:"SpaceTravelView",setup(e){const w=new class extends t{constructor(){super(),n(this,"positions",[]),n(this,"particles"),n(this,"particlesMesh")}load(){this.init("#webgl"),this.animate(),this.scene.background=new a(3355443),this.renderer.localClippingEnabled=!0,this.light({type:"AmbientLight",x:0,y:200,z:100}),this.loadModel()}loadModel(){var e;const n=new s(new o(1,0,0),0),t=new s(new o(0,1,0),0),c=new s(new o(0,-1,0),0);null==(e=this.scene)||e.add(new i(n,100,16777215));const u=new r(100,50),m=new l(u,new h({color:16777215}));m.rotateX(-Math.PI/2),g("./models/gltf/Michelle.glb").then((e=>{var s;const o=e.scene;o.scale.set(50,50,50),null==(s=this.scene)||s.add(o);const i={uPosY:{value:0},uColor:{value:new a(16776960)}};o.traverse((e=>{if(e instanceof l){e.material.clippingPlanes=[n];const{max:a,min:s}=e.geometry.boundingBox,r=a.y-s.y;o.scale.y;this.gui.add(i.uPosY,"value",0,r,.01).name("剪切高度").onChange((a=>{i.uPosY.value=a,n.constant=-a*o.scale.y,c.constant=a*o.scale.y,m.position.y=a*o.scale.y,t.constant=-a,this.createParticles(e.geometry.attributes.position.array,a,e.geometry.index.array,t,o.scale.y,i.uColor.value)})),this.gui.addColor(i.uColor,"value").name("剪切颜色").onChange((e=>{i.uColor.value=e})),e.material.onBeforeCompile=e=>{Object.assign(e.uniforms,i),e.vertexShader=`\n            varying vec2 vUv;\n            varying float vPostionY;\n            ${e.vertexShader}\n            `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n            #include <fog_vertex>\n                vUv = uv;\n                vPostionY = position.y;\n            "),e.fragmentShader=`\n            uniform float uPosY;\n            uniform vec3 uColor;\n            varying vec2 vUv;\n            varying float vPostionY;\n\n\n            ${e.fragmentShader}\n            `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n                \n\n                if(vPostionY > uPosY && vPostionY <= uPosY + 0.1){\n                    gl_FragColor.rgb = mix(uColor, gl_FragColor.rgb, smoothstep(0.0,0.5,(vPostionY- uPosY) / 0.1));\n                }\n                \n              ")}}}))})),p("./models/obj/male02/male02.obj").then((e=>{var n;const t=e;t.scale.set(.45,.45,.45),null==(n=this.scene)||n.add(t),this.gui.add(t,"visible").name("模型2显示"),t.traverse((e=>{e instanceof l&&(e.material.clippingPlanes=[c])}))}))}createParticles(e,n,t,s,i,r=new a(16776960)){var l,h;this.particlesMesh&&(null==(l=this.scene)||l.remove(this.particlesMesh));const g=e,p=[];for(let a=0;a<t.length;a+=3){const e=(new o).fromArray(g,3*t[a]),n=(new o).fromArray(g,3*t[a+1]),i=(new o).fromArray(g,3*t[a+2]),r=new c(e,n),l=new c(n,i),h=new c(i,e),u=s.intersectLine(r,new o),m=s.intersectLine(l,new o),d=s.intersectLine(h,new o);u&&p.push(u),m&&p.push(m),d&&p.push(d)}const w=new u,y=new Float32Array(20*p.length*3);w.setAttribute("position",new m(y,3));const P=[];for(let a=0;a<p.length;a++)for(let e=0;e<20;e++){y[3*a*e+0]=p[a].x+.05*Math.random()-.025,y[3*a*e+1]=p[a].y-.05,y[3*a*e+2]=p[a].z+.05*Math.random()-.025;const n=Math.random()*Math.PI*2,t=Math.acos(.2*Math.random()-.1),s=(.9*Math.random()+.1)*Math.PI*1,o=.9*Math.random()+.1;P.push(n,t,s,15*o)}w.setAttribute("aShift",new d(P,4)),w.attributes.aShift.needsUpdate=!0;const b=new v({uniforms:{uTime:{value:0},uColor:{value:r},uHeight:{value:n}},transparent:!0,vertexShader:"\n            uniform float uTime;\n            uniform float uHeight;\n            attribute vec4 aShift;\n\n            const float PI = 3.1415925;\n            \n            void main(){\n                vec3 transformed = position;\n                \n                float theta = mod(aShift.x + aShift.y * uTime, PI * 1.0);\n                float phi = mod(aShift.z + aShift.y * uTime, PI * 1.0);\n                // transformed += vec3(sin(theta) * cos(phi)*0.1, cos(phi)*0.1, sin(theta) * cos(phi)*0.1) * aShift.w;\n\n                float a = cos(theta) * 0.025;\n                transformed.y =  uHeight + a - 0.025;\n\n                vec4 mvPosition = modelViewMatrix * vec4(transformed,1.0);\n\n                gl_PointSize = 2.0;\n\n                gl_Position = projectionMatrix * mvPosition;\n            }\n        ",fragmentShader:"\n            uniform vec3 uColor;\n            void main(){\n                gl_FragColor = vec4(uColor,1.0);\n            }\n        "});this.particlesMesh=new f(w,b),this.particlesMesh.scale.set(i,i,i),this.particlesMesh.onBeforeRender=()=>{b.uniforms.uTime.value+=.1},null==(h=this.scene)||h.add(this.particlesMesh)}updateParticles(){}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer&&this.renderer.render(this.scene,this.camera),this.particles&&(this.particles.rotation.y+=.001),null==(n=this.stats)||n.end()}};return y((()=>{w.load()})),P((()=>{w.destroy()})),(e,n)=>(x(),b(S,null,[n[0]||(n[0]=M("div",{id:"webgl"},null,-1)),n[1]||(n[1]=M("div",{class:"title-name"},"模型切换",-1))],64))}});export{C as default};
