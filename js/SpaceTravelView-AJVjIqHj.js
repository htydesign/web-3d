var e=Object.defineProperty,n=(n,t,a)=>((n,t,a)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a)(n,"symbol"!=typeof t?t+"":t,a);import{B as t}from"./base-DRfanOAB.js";import{n as a,o as s,ai as o,C as i,K as r,V as l,x as h,b as c,M as u,aL as m,B as d,l as v,r as f,u as g,P as p}from"./three-nzgV1uvU.js";import{d as w,z as P,A as y,g as b,j as M,F as S,o as x}from"./@vue-B4sUqkWa.js";const C=w({__name:"SpaceTravelView",setup(e){const w=new class extends t{constructor(){super(),n(this,"positions",[]),n(this,"particles"),n(this,"particlesMesh")}load(){this.init("#webgl"),this.animate(),this.scene.background=new i(3355443),this.renderer.localClippingEnabled=!0,this.light({type:"AmbientLight",x:0,y:200,z:100}),this.loadModel()}loadModel(){const e=new r(new l(0,1,0),0),n=new r(new l(0,1,0),0),t=new r(new l(0,-1,0),0),m=new h(100,50),d=new c(m,new u({color:16777215}));var v;d.rotateX(-Math.PI/2),(v="./models/gltf/Michelle.glb",new Promise((e=>{const n=new a,t=new s;t.setDecoderPath("./draco/"),n.setDRACOLoader(t),n.load(v,(n=>{e(n)}))}))).then((a=>{var s;const o=a.scene;o.scale.set(50,50,50),null==(s=this.scene)||s.add(o);const r={uPosY:{value:0},uColor:{value:new i(16776960)}};o.traverse((a=>{if(a instanceof c){a.material.clippingPlanes=[e];const{max:s,min:i}=a.geometry.boundingBox,l=s.y-i.y;o.scale.y;this.gui.add(r.uPosY,"value",0,l,.01).name("剪切高度").onChange((s=>{r.uPosY.value=s,e.constant=-s*o.scale.y,t.constant=s*o.scale.y,d.position.y=s*o.scale.y,n.constant=-s,this.createParticles(a.geometry.attributes.position.array,s,a.geometry.index.array,n,o.scale.y,r.uColor.value)})),this.gui.addColor(r.uColor,"value").name("剪切颜色").onChange((e=>{r.uColor.value=e})),a.material.onBeforeCompile=e=>{Object.assign(e.uniforms,r),e.vertexShader=`\n            varying vec2 vUv;\n            varying float vPostionY;\n            ${e.vertexShader}\n            `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n            #include <fog_vertex>\n                vUv = uv;\n                vPostionY = position.y;\n            "),e.fragmentShader=`\n            uniform float uPosY;\n            uniform vec3 uColor;\n            varying vec2 vUv;\n            varying float vPostionY;\n\n\n            ${e.fragmentShader}\n            `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n                \n\n                if(vPostionY > uPosY && vPostionY <= uPosY + 0.1){\n                    gl_FragColor.rgb = mix(uColor, gl_FragColor.rgb, smoothstep(0.0,0.5,(vPostionY- uPosY) / 0.1));\n                }\n                \n              ")}}}))})),function(e){return new Promise((n=>{(new o).load(e,(e=>{n(e)}))}))}("./models/obj/male02/male02.obj").then((e=>{var n;const a=e;a.scale.set(.45,.45,.45),null==(n=this.scene)||n.add(a),this.gui.add(a,"visible").name("模型2显示"),a.traverse((e=>{e instanceof c&&(e.material.clippingPlanes=[t])}))}))}createParticles(e,n,t,a,s,o=new i(16776960)){var r,h;this.particlesMesh&&(null==(r=this.scene)||r.remove(this.particlesMesh));const c=e,u=[];for(let i=0;i<t.length;i+=3){const e=(new l).fromArray(c,3*t[i]),n=(new l).fromArray(c,3*t[i+1]),s=(new l).fromArray(c,3*t[i+2]),o=new m(e,n),r=new m(n,s),h=new m(s,e),d=a.intersectLine(o,new l),v=a.intersectLine(r,new l),f=a.intersectLine(h,new l);d&&u.push(d),v&&u.push(v),f&&u.push(f)}const w=new d,P=new Float32Array(20*u.length*3);w.setAttribute("position",new v(P,3));const y=[];for(let i=0;i<u.length;i++)for(let e=0;e<20;e++){P[3*i*e+0]=u[i].x+.05*Math.random()-.025,P[3*i*e+1]=u[i].y-.05,P[3*i*e+2]=u[i].z+.05*Math.random()-.025;const n=Math.random()*Math.PI*2,t=Math.acos(.2*Math.random()-.1),a=(.9*Math.random()+.1)*Math.PI*1,s=.9*Math.random()+.1;y.push(n,t,a,15*s)}w.setAttribute("aShift",new f(y,4)),w.attributes.aShift.needsUpdate=!0;const b=new g({uniforms:{uTime:{value:0},uColor:{value:o},uHeight:{value:n}},transparent:!0,vertexShader:"\n            uniform float uTime;\n            uniform float uHeight;\n            attribute vec4 aShift;\n\n            const float PI = 3.1415925;\n            \n            void main(){\n                vec3 transformed = position;\n                \n                float theta = mod(aShift.x + aShift.y * uTime, PI * 1.0);\n                float phi = mod(aShift.z + aShift.y * uTime, PI * 1.0);\n                // transformed += vec3(sin(theta) * cos(phi)*0.1, cos(phi)*0.1, sin(theta) * cos(phi)*0.1) * aShift.w;\n\n                float a = cos(theta) * 0.025;\n                transformed.y =  uHeight + a - 0.025;\n\n                vec4 mvPosition = modelViewMatrix * vec4(transformed,1.0);\n\n                gl_PointSize = 2.0;\n\n                gl_Position = projectionMatrix * mvPosition;\n            }\n        ",fragmentShader:"\n            uniform vec3 uColor;\n            void main(){\n                gl_FragColor = vec4(uColor,1.0);\n            }\n        "});this.particlesMesh=new p(w,b),this.particlesMesh.scale.set(s,s,s),this.particlesMesh.onBeforeRender=()=>{b.uniforms.uTime.value+=.1},null==(h=this.scene)||h.add(this.particlesMesh)}updateParticles(){}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer&&this.renderer.render(this.scene,this.camera),this.particles&&(this.particles.rotation.y+=.001),null==(n=this.stats)||n.end()}};return P((()=>{w.load()})),y((()=>{w.gui.close(),w.gui.destroy()})),(e,n)=>(x(),b(S,null,[n[0]||(n[0]=M("div",{id:"webgl"},null,-1)),n[1]||(n[1]=M("div",{class:"title-name"},"模型切换",-1))],64))}});export{C as default};
