import{B as e}from"./base-CgClm5XE.js";import{c as n,T as a,f as i,B as r,g as s,b as t}from"./three-BQT4yrvs.js";import{d as o,A as l,B as c,g as d,j as m,F as g,o as u}from"./@vue-89U3BwR9.js";const v=o({__name:"LightThreeView",setup(o){const v=new class extends e{constructor(){super()}load(){var e;this.init("#webgl"),this.light(),this.animate(),this.create();const a=new n(1e3,20);null==(e=this.scene)||e.add(a)}async create(){var e;const n=(new a).load("./texture/noise.jpg");n.wrapS=i,n.wrapT=i;const o=new r(50,50,50);for(let a=0;a<10;a++)for(let i=0;i<10;i++){const r=new s({color:"#e43a3a",roughness:a/10,metalness:i/10,transmission:1,clearcoat:1});r.iridescence=3*a/10*50,r.iridescenceIOR=1.5;const l=new t(o,r);l.position.set(50*a-250,0,50*i-250),null==(e=this.scene)||e.add(l);const c={iTime:{value:0},iDir:{value:50*Math.random()},scanMap:{value:n}};r.onBeforeCompile=e=>{Object.assign(e.uniforms,c),e.vertexShader=`\n              uniform float iTime;\n              uniform float iDir;\n              varying vec2 vUv;\n              ${e.vertexShader}\n              `,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>","              \n              #include <begin_vertex>\n                transformed.y+=sin(iTime/50.0) * iDir;\n                vUv = uv;\n              "),e.fragmentShader=`\n              uniform float iTime;\n              uniform sampler2D scanMap;\n              varying vec2 vUv;\n              ${e.fragmentShader}\n              `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","              \n              #include <dithering_fragment>\n                float dis = distance(vWorldPosition.xz,vec2(0.0,0.0));\n\n                dis = fract((dis-iTime)/100.0) ;\n\n                if(dis<1.0 && dis>0.5){\n                  vec3 mapColor = texture2D(scanMap,vUv).rgb;\n                  float p =( dis-0.5)/0.5;\n                  gl_FragColor.rgb = mix(gl_FragColor.rgb,mapColor,p);\n                }\n               \n              ")},l.onBeforeRender=()=>{c.iTime.value=50*this.clock.getElapsedTime()}}}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(n=this.stats)||n.end()}};return l((()=>{v.load()})),c((()=>{v.gui.close(),v.gui.destroy()})),(e,n)=>(u(),d(g,null,[n[0]||(n[0]=m("div",{id:"webgl"},null,-1)),n[1]||(n[1]=m("div",{class:"title-name"},"扫光",-1))],64))}});export{v as default};
