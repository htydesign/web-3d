var e=Object.defineProperty,t=(t,n,o)=>((t,n,o)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[n]=o)(t,"symbol"!=typeof n?n+"":n,o);import{B as n,L as o}from"./base-PyZMGYUQ.js";import{q as i,r as s,s as a,A as r,D as h,e as l,G as c,h as d,f as u,B as m,i as v,t as p,a as g,M as w,u as f,v as y,w as b,x,Q as _,C as M,y as C,z as j,W as S,H as P,I as O,T,m as U,J as N,K as L,S as A,N as B,O as z,P as G,X as E,Y as k,Z as I}from"./three-Dh-ZbfMj.js";import{C as W}from"./canvasTexture-CB5P4OHK.js";import{d as F,r as D,z as q,A as K,g as X,j as R,F as Z,k as V,o as Y,B as H,C as Q,u as $}from"./@vue-B4sUqkWa.js";const J=new W;class ee extends i{constructor(e,t,n){const o=new s(J.init({text:t.toFixed(2)+"m",width:600}));super(new a({map:o,color:16777215,blending:r,transparent:!0,side:h})),this.position.copy(e),this.scale.set(3,1,1),this.name=n}update(e){new l.Tween({value:0}).to({value:e},500).easing(l.Easing.Linear.None).start().onUpdate((e=>{const t=new s(J.init({text:e.value.toFixed(2)+"m",width:600}));this.material.map=t}))}}class te{constructor(){t(this,"group",new c)}init(e,t,n){const o=e.distanceTo(t),i=(new d).addVectors(e,t).multiplyScalar(.5),s=o/2-2,a=(new d).subVectors(e,t);a.normalize();const r=new _;r.setFromUnitVectors(new d(-1,0,0),a),this.group.name=n,this.group.visible=!1;const h=new c,l=new c;this.group.add(h),this.group.add(l),h.add(this.line(e,r,"leftLine")),h.add(this.arrow(e,r,"leftArrow")),h.add(this.dotLine(e,r,s,parseInt(o+""),"leftDotLine")),l.add(this.line(t,r,"rightLine")),l.add(this.arrow(t,r,"rightArrow",-1)),l.add(this.dotLine(t,r,s,parseInt(o+""),"rightDotLine",-1));const u=new ee(i,o,"text");return this.group.add(u),this.group}line(e,t,n){const o=new u({color:16777215,linewidth:1}),i=[new d(0,0,-1),new d(0,0,1)],s=(new m).setFromPoints(i),a=new v(s,o);return a.quaternion.multiply(t),a.position.copy(e),a.name=n,a.scale.set(0,0,0),a}arrow(e,t,n,o=1){const i=new p(.25,1,8);i.translate(0,-.5,0);const s=new g({color:16777215}),a=new w(i,s);return a.quaternion.multiply(t),a.position.copy(e),a.rotateZ(Math.PI/2*o),a.name=n,a.scale.set(0,0,0),a}dotLine(e,t,n,o,i,s=1){const a=new d(0,0,0);a.x+=1*s;const r=a.clone();r.x+=n*s;const h=new f(a,r),l=new m,c=new Float32Array(3*o);l.setAttribute("position",new y(c,3));const u=new Float32Array(3*o);l.setAttribute("toPosition",new y(u,3));for(let d=0;d<o;d++){const e=h.getPoint(d/o);u[3*d+0]=e.x,u[3*d+1]=e.y,u[3*d+2]=e.z,c[3*d+0]=e.x,c[3*d+1]=e.y,c[3*d+2]=e.z}l.attributes.position.needsUpdate=!0,l.attributes.toPosition.needsUpdate=!0;const v=new b(l,new x({color:16777215,size:.2}));return v.quaternion.multiply(t),v.position.copy(e),v.onBeforeRender=()=>{},v.name=i,v.scale.set(0,0,0),v}}class ne{constructor(){t(this,"instance"),t(this,"group",new c),this.instance=new te}init(e,t,n){return this.group=this.instance&&this.instance.init(e,t,n),this.group}update(e){if(!this.group.visible){this.group.visible=!0;this.group.getObjectByName("text").update(e);const t=this.group.getObjectByName("leftLine");this.setScale(t);const n=this.group.getObjectByName("rightLine");this.setScale(n);const o=this.group.getObjectByName("leftArrow");this.setScale(o);const i=this.group.getObjectByName("rightArrow");this.setScale(i);const s=this.group.getObjectByName("leftDotLine");this.setScale(s);const a=this.group.getObjectByName("rightDotLine");this.setScale(a)}}hade(){if(this.group.visible){const e=this.group.getObjectByName("leftLine");this.setScale(e,new d(0,0,0));const t=this.group.getObjectByName("rightLine");this.setScale(t,new d(0,0,0));const n=this.group.getObjectByName("leftArrow");this.setScale(n,new d(0,0,0));const o=this.group.getObjectByName("rightArrow");this.setScale(o,new d(0,0,0));const i=this.group.getObjectByName("leftDotLine");this.setScale(i,new d(0,0,0));const s=this.group.getObjectByName("rightDotLine");this.setScale(s,new d(0,0,0)).then((()=>{this.group.visible=!1}))}}setScale(e,t=new d(1,1,1)){return new Promise((n=>{new l.Tween(e.scale).to({...t},500).easing(l.Easing.Linear.None).start().onComplete((()=>{n(!0)}))}))}}const oe={class:"color-list"},ie=["onClick"],se=F({__name:"CarModel",setup(e){const i=["#ff0000","#00ff00","#0000ff","#ffff00","#00ffff","#ff00ff","#ffffff"],s=D(0),a=new d(0,20,30);const u=new class extends n{constructor(){super(a),t(this,"baseGroup",new c),t(this,"torusGroup",new c),t(this,"annotationGroup",new c),t(this,"uniforms",{uTime:{value:0},uStartColor:{value:new M(16776960)},uEndColor:{value:new M(16711680)},uEnvMap:{value:null}}),t(this,"isChange",!1),t(this,"frontAnnotation",new ne),t(this,"leftAnnotation",new ne),t(this,"rightAnnotation",new ne),t(this,"wheelGroup",[]),t(this,"isWheel",!1),t(this,"car",{run:!1}),t(this,"material"),t(this,"cubeCamera"),t(this,"door_rr_dummy"),t(this,"door_rf_dummy"),t(this,"door_lr_dummy"),t(this,"door_lf_dummy"),t(this,"bonnet_dummy"),t(this,"boot_dummy"),t(this,"airflowPlaneMesh"),t(this,"lightWaveMesh"),t(this,"modelObject"),t(this,"cubeCameraPlane"),t(this,"planeMesh"),t(this,"onSelectColor",(e=>{s.value=e,this.changeColor(e)}))}load(){var e,t;this.init("#webgl"),this.animate(),null==(e=this.scene)||e.add(this.annotationGroup,this.baseGroup,this.torusGroup),this.torusGroup.visible=!1,this.loadModel(),this.light({type:"AmbientLight",x:50,y:50,z:50}),this.light({type:"AmbientLight",x:-50,y:50,z:50}),this.light({type:"SpotLight",x:0,y:50,z:0}),this.baseGeometry(),this.planeLight(),this.flow(),null==(t=this.controls)||t.addEventListener("change",this.change.bind(this)),this.annotationGroup.visible=!1,this.gui.add(this.annotationGroup,"visible").name("车身尺寸").onChange((()=>{})),this.createTubeGeo()}change(){if(this.annotationGroup.visible){const e=new k;e.setFromQuaternion(this.controls.object.quaternion,"XYZ",!0);const t=e.x,n=e.y,o=I.radToDeg(t),i=I.radToDeg(n);i<30&&i>-30&&o<-12&&o>-30?(this.frontAnnotation.update(4),this.rightAnnotation.hade(),this.leftAnnotation.hade()):i<-30&&o<-12?(this.leftAnnotation.update(2),this.frontAnnotation.hade(),this.rightAnnotation.hade()):i>30&&o<-12&&(this.rightAnnotation.update(3),this.frontAnnotation.hade(),this.leftAnnotation.hade())}}openAllDoor(e){new l.Tween(this.door_rr_dummy.rotation).to({x:0,y:0,z:e?Math.PI/2:0},1e3).easing(l.Easing.Linear.None).start(),new l.Tween(this.door_rf_dummy.rotation).to({x:0,y:0,z:e?Math.PI/2:0},1e3).easing(l.Easing.Linear.None).start(),new l.Tween(this.door_lr_dummy.rotation).to({x:0,y:0,z:e?-Math.PI/2:0},1e3).easing(l.Easing.Linear.None).start(),new l.Tween(this.door_lf_dummy.rotation).to({x:0,y:0,z:e?-Math.PI/2:0},1e3).easing(l.Easing.Linear.None).start(),new l.Tween(this.bonnet_dummy.rotation).to({x:e?Math.PI/4:0,y:0,z:0},1e3).easing(l.Easing.Linear.None).start(),new l.Tween(this.boot_dummy.rotation).to({x:e?-Math.PI/2:0,y:0,z:0},1e3).easing(l.Easing.Linear.None).start()}loadModel(){const e=new C,t=new j;t.setDecoderPath("./draco/"),e.setDRACOLoader(t),e.load("./models/gltf/car.glb",(e=>{var t;this.modelObject=e.scene,this.modelObject.scale.set(5,5,5),this.modelObject.position.set(0,2,0),this.modelObject.rotateY(Math.PI),null==(t=this.scene)||t.add(this.modelObject),this.modelObject.traverse((e=>{e instanceof w&&(e.castShadow=!0)})),this.door_rr_dummy=this.modelObject.getObjectByName("door_rr_dummy");const n=this.createSprite();n.position.set(.1,-.8,.25),this.door_rr_dummy.add(n),this.door_rf_dummy=this.modelObject.getObjectByName("door_rf_dummy");const o=this.createSprite();o.position.set(.1,-.95,.15),this.door_rf_dummy.add(o),this.door_lr_dummy=this.modelObject.getObjectByName("door_lr_dummy");const i=this.createSprite();i.position.set(-.1,-.8,.25),this.door_lr_dummy.add(i),this.door_lf_dummy=this.modelObject.getObjectByName("door_lf_dummy");const s=this.createSprite();s.position.set(-.1,-.95,.15),this.door_lf_dummy.add(s),this.bonnet_dummy=this.modelObject.getObjectByName("bonnet_dummy");const r=this.createSprite();r.position.set(0,1,-.1),this.bonnet_dummy.add(r),this.boot_dummy=this.modelObject.getObjectByName("boot_dummy");const h=this.createSprite();h.position.set(0,-.55,-.1),this.boot_dummy.add(h);const c={open:!1};this.gui.add(c,"open").name("开启全部车门").onChange((e=>{this.openAllDoor(e)})),this.wheelGroup=[this.modelObject.getObjectByName("wheel"),this.modelObject.getObjectByName("wheel001"),this.modelObject.getObjectByName("wheel002"),this.modelObject.getObjectByName("wheel003")];const u=this.modelObject.getObjectByName("chassis_primary_0");u.geometry.computeBoundingBox();const m=u.geometry.boundingBox&&u.geometry.boundingBox.max.multiplyScalar(5)||{x:0,y:0,z:0},v=u.geometry.boundingBox&&u.geometry.boundingBox.min.multiplyScalar(5)||{x:0,y:0,z:0};this.annotationGroup.add(this.frontAnnotation.init(new d(v.x,4,12),new d(m.x,4,12),"front"),this.rightAnnotation.init(new d(6,v.z+Math.abs(v.z)+2,0),new d(6,m.z+Math.abs(v.z)+2,0),"right"),this.leftAnnotation.init(new d(-6,4,v.y+2),new d(-6,4,m.y+4),"left"));const p=new S(128);p.texture.type=P,this.cubeCamera=new O(.1,1e3,p);const g={...this.uniforms,uEnvMap:{value:p.texture}},f=u.material;f.roughness=.05,f.metalness=1,f.envMap=p.texture,f.color=new M(16777215),f.emissive=new M(0),f.envMapIntensity=1,this.gui.addColor(f,"color"),this.gui.addColor(f,"emissive"),this.gui.add(f,"roughness",0,1,.1),this.gui.add(f,"metalness",0,1,.1),this.gui.add(f,"envMapIntensity",0,1,.1),f.onBeforeCompile=e=>{Object.assign(e.uniforms,g),e.vertexShader=`\n          varying vec2 vUv;\n          ${e.vertexShader}\n          `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n          #include <fog_vertex>\n            vUv = uv;\n          "),e.fragmentShader=`\n          uniform float uTime;\n          varying vec2 vUv;\n          uniform vec3 uStartColor;\n          uniform vec3 uEndColor;\n\n          ${e.fragmentShader}\n        `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","\n            #include <dithering_fragment>\n\n             //中心点\n            vec2 center = vUv - vec2(0.45);\n\n            float negationTime = -uTime;\n\n            vec3 color = uEndColor;\n\n            if(center.y > uTime){\n                color = uStartColor;\n            }\n            if(center.y < negationTime){\n                color = uStartColor;\n            }\n\n            // diffuseColor = vec4(color,diffuseColor.a);\n\n            // vec3  vColor = mix(color, diffuseColor.rgb, diffuseColor.a)\n            gl_FragColor = vec4(gl_FragColor.rgb + color, 1.0);\n\n          ")},this.gui.add(this.car,"run").name("是否开启轮子").onChange((e=>{c.open=!1,this.openAllDoor(!1),e?new l.Tween(this.camera.position).to({x:20,y:5,z:20},2e3).easing(l.Easing.Linear.None).onUpdate((()=>{var e,t;null==(e=this.controls)||e.target.set(0,0,0),null==(t=this.controls)||t.update()})).start().onComplete((()=>{new l.Tween(this.baseGroup.position).to({x:0,y:-4,z:0},2e3).easing(l.Easing.Linear.None).start().onComplete((()=>{})),new l.Tween(this.modelObject.position).to({x:0,y:0,z:0},1e3).easing(l.Easing.Linear.None).start().onComplete((()=>{this.isWheel=!0,this.torusGroup.visible=!0}))})):(this.isWheel=!1,this.torusGroup.visible=!1,new l.Tween(this.modelObject.position).to({x:0,y:2,z:0},1e3).easing(l.Easing.Linear.None).delay(1e3).start().onComplete((()=>{})),new l.Tween(this.baseGroup.position).to({x:0,y:0,z:0},2e3).easing(l.Easing.Linear.None).start().onComplete((()=>{new l.Tween(this.camera.position).to({x:a.x,y:a.y,z:a.z},2e3).easing(l.Easing.Linear.None).onUpdate((()=>{var e,t;null==(e=this.controls)||e.target.set(0,0,0),null==(t=this.controls)||t.update()})).start()})))}))}))}createSprite(){const e=(new T).load("./texture/sprite.png"),t=new m;t.setAttribute("position",new U([0,0,0],3));return new b(t,new x({map:e,color:16777215,blending:r,transparent:!0,depthTest:!1,side:h,size:1}))}createTubeGeo(){const e=new N;e.add(new f(new d(-1e3,0,0),new d(1e3,0,0)));const t=new L(e,128,50,8,!1);this.material=new A({side:h,uniforms:{uTime:{value:0}},vertexShader:"\n        varying vec2 vUv;\n\n        void main(){\n          vUv = uv;\n          vec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        uniform float uTime;\n\n        // https://www.shadertoy.com/view/Msf3WH\n        vec2 hash(vec2 p)// replace this by something better\n        {\n            p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\n            return-1.+2.*fract(sin(p)*43758.5453123);\n        }\n\n        float noise(in vec2 p)\n        {\n            const float K1=.366025404;// (sqrt(3)-1)/2;\n            const float K2=.211324865;// (3-sqrt(3))/6;\n\n            vec2 i=floor(p+(p.x+p.y)*K1);\n            vec2 a=p-i+(i.x+i.y)*K2;\n            float m=step(a.y,a.x);\n            vec2 o=vec2(m,1.-m);\n            vec2 b=a-o+K2;\n            vec2 c=a-1.+2.*K2;\n            vec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\n            vec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\n            return dot(n,vec3(70.));\n        }\n        vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n        {\n            return a + b*cos( 6.283185*(c*t+d) );\n        }\n\n        void main(){\n          vec2 noiseUv = vUv;\n          // noiseUv.x+=uTime*.5;\n          noiseUv.x = mod((vUv.x+uTime) * 1.0 , 1.0);\n\n          //  noiseUv.x = fract(mod((vUv.x+uTime), 1.0)*2.0);\n\n          float mask = noise(noiseUv * vec2(5.0,100.0));\n          mask = smoothstep(0.20,0.5,mask);\n          // mask = step(0.5,mask);\n          // mask = pow(mask, 2.0);\n          // mask = 1.0 - mask;\n\n          mask *= smoothstep(0.00,0.5,vUv.x)*smoothstep(0.00,0.5,1.0-vUv.x);\n          mask *= smoothstep(0.20,0.5,vUv.y)*smoothstep(0.20,0.5,1.0-vUv.y);\n\n          vec3 col= palette(mask,vec3(0.5),vec3(0.35),vec3(0.9),vec3(0.00, 0.33, 0.67));\n          col *= vec3(2.,1.,500.);\n          gl_FragColor = vec4(col,mask);\n        }\n      ",transparent:!0,blending:r,opacity:0});const n=new w(t,this.material);n.rotateX(Math.PI/2),n.rotateZ(Math.PI/2),this.torusGroup.add(n)}baseGeometry(){var e;const t=new B(15,15,1,64),n=new z({color:3355443}),o=new w(t,n);o.position.set(0,1.5,0),o.receiveShadow=!0,o.name="cylinder1",this.baseGroup.add(o);const i=new B(20,20,1,64),s=new z({color:4473924}),a=new w(i,s);a.position.set(0,.5,0),a.receiveShadow=!0,a.name="cylinder2",this.baseGroup.add(a);const r=new S(128);r.texture.type=P,this.cubeCameraPlane=new O(.1,1e3,r);const l=new G(200,200),c=new z({color:2236962});this.planeMesh=new w(l,c),this.planeMesh.position.set(0,0,0),this.planeMesh.rotateX(-Math.PI/2),this.planeMesh.receiveShadow=!0,null==(e=this.scene)||e.add(this.planeMesh);const d=new G(200,200,80,80),u=new A({vertexShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n\n        void main() {\n            vUv = uv;\n            vec4 newPosition = modelMatrix * vec4(position, 1.0);\n\n            //中间凸起\n            float dist = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.15, 0.05, dist);\n            //float s = smoothstep(0.2, 0.05, abs(uv.x - 0.5 + 0.5 * sin(uTime)));\n              // newPosition.y -= 8.0 ;\n              // newPosition.y += 8.0 *s;\n            newPosition.y += 8.0 * strength;\n\n            gl_Position = projectionMatrix * viewMatrix * newPosition;\n\n\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n\n        uniform float uTime;\n        uniform float uRepeat;\n        uniform float lightWidth;\n        uniform float uSpeed;\n\n        void main(){\n           // 先居中，再绘制圆形\n\n            float dis = distance(vUv, vec2(0.5));\n\n            float dist = fract((length(vUv - vec2(0.5)) /0.707 - uTime * uSpeed) * uRepeat);\n            float radius = lightWidth + dis / 4.0;\n            vec3 color = vec3(step(radius, dist));\n\n            float alpha = 1.0;\n            if(color.r == 1.0){\n              alpha = 0.0;\n            }\n            color+= vec3(1.0);\n\n            vec4 vColor = vec4(color, alpha);\n\n            float len = distance(vUv, vec2(0.5));\n            float strength = smoothstep(0.5, 0.35, len);\n            vColor.a *= strength;\n\n\n            gl_FragColor = vColor;\n\n        }\n      ",transparent:!0,uniforms:{uTime:{value:0},uRepeat:{value:10},lightWidth:{value:.01},uSpeed:{value:.01}},wireframe:!1,side:h,depthTest:!1});this.lightWaveMesh=new w(d,u),this.lightWaveMesh.position.set(0,3,0),this.lightWaveMesh.rotateX(-Math.PI/2),this.lightWaveMesh.visible=!1,this.baseGroup.add(this.lightWaveMesh);const m=this.gui.addFolder("扩散光纹");m.add(u.uniforms.lightWidth,"value",.01,.5,.01).name("宽度"),m.add(u.uniforms.uRepeat,"value",1,30,1).name("数量"),m.add(u.uniforms.uSpeed,"value",.01,.05,.01).name("速度"),m.add(this.lightWaveMesh,"visible").name("是否可见")}changeColor(e){this.isChange=!1,this.uniforms.uTime.value=0,this.uniforms.uStartColor.value=this.uniforms.uEndColor.value,this.uniforms.uEndColor.value=new M(i[e])}updateColor(){this.isChange||(this.uniforms.uTime.value<=1?this.uniforms.uTime.value+=.01:this.isChange=!0)}environment(){const e=(new T).load("/texture/sky.jpg");e.mapping=E,this.scene.background=e}planeLight(){const e=new G(5,20),t=new g({color:16777215,transparent:!0,opacity:1,side:h}),n=new w(e,t);n.position.set(0,15,0),n.rotateX(-Math.PI/2),(new o).init(n,this.gui,{type:"SpotLight",intensity:5e3})}flow(){var e;const t=new G(80,14,100,40),n=new A({transparent:!0,side:h,vertexShader:"\n        varying vec2 vUv;\n        uniform float uTime;\n        void main() {\n          vUv = uv;\n          vec4 newPosition = modelMatrix * vec4(position, 1.0);\n\n          float dist = distance(vUv, vec2(0.50));\n          float strength = smoothstep(0.0, 0.5, dist);\n\n          newPosition.y -= 2.0 * strength;\n\n          float strength2 = smoothstep(0.3, 0.0, abs(uv.x - 0.5));\n          newPosition.y += 3.0 * strength2;\n\n          float strength3 = smoothstep(0.4, 0.0, uv.x);\n          newPosition.y -= 5.0 * strength3;\n\n          gl_Position = projectionMatrix * viewMatrix * newPosition;\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        uniform float uTime;\n        void main(){\n          float vColor = step(0.85, fract(vUv.y * 10.0));\n          vec3 color = vec3(vColor);\n          if(color.g==0.0){\n            discard;\n          }\n          float f = abs(vUv.y + 2.0);\n          float d = mod((vUv.x + 1.0 / f - uTime) * 1.0 , 1.0);\n          float alpha = smoothstep(1.0, 0.5, d);\n\n          float d2 = mod((vUv.x + 1.0 / f- uTime) * 1.0 , 1.0);\n          float alpha2 = 1.0 - smoothstep(0.5, 0.0, d2);\n\n\n          gl_FragColor = vec4(color,alpha * alpha2+0.35);\n        }\n      ",uniforms:{uTime:{value:0}},wireframe:!1});this.airflowPlaneMesh=new w(t,n),this.airflowPlaneMesh.position.set(0,7,-2),this.airflowPlaneMesh.rotateX(-Math.PI/2),this.airflowPlaneMesh.rotateZ(Math.PI/2),this.airflowPlaneMesh.visible=!1,null==(e=this.scene)||e.add(this.airflowPlaneMesh),this.gui.add(this.airflowPlaneMesh,"visible").name("气流可见")}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),l.update(),this.updateColor(),this.airflowPlaneMesh&&this.airflowPlaneMesh.visible&&(this.airflowPlaneMesh.material.uniforms.uTime.value+=.02),this.lightWaveMesh&&this.lightWaveMesh.visible&&(this.lightWaveMesh.material.uniforms.uTime.value+=.02),this.isWheel&&(this.wheelGroup.forEach((e=>{e.rotation.x-=.2})),this.cubeCamera&&(this.modelObject.visible=!1,this.cubeCamera.update(this.renderer,this.scene),this.modelObject.visible=!0),this.material.uniforms.uTime.value+=.01),this.cubeCameraPlane,this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return q((()=>{u.load()})),K((()=>{u.gui.close(),u.gui.destroy()})),(e,t)=>(Y(),X(Z,null,[t[0]||(t[0]=R("div",{id:"webgl"},null,-1)),R("div",oe,[(Y(),X(Z,null,V(i,((e,t)=>R("div",{class:H(["color-item",s.value==t?"active":""]),key:t,style:Q({background:e}),onClick:e=>$(u).onSelectColor(t)},null,14,ie))),64))])],64))}});export{se as default};
