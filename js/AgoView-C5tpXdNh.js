var e=Object.defineProperty,i=(i,t,s)=>((i,t,s)=>t in i?e(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s)(i,"symbol"!=typeof t?t+"":t,s);import{B as t}from"./base-CU2FGtE4.js";import{R as s,V as n,G as o,b as a,T as r,S as u,P as l,M as h,n as m,a5 as c}from"./three-BbqIY5yL.js";import{c as p}from"./simplex-noise-5eX6VW3g.js";import{d as v,z as d,A as g,g as f,j as w,F as x,o as y}from"./@vue-DISYwsDo.js";const b=v({name:"AgoViewAgoViewAgoView",setup(e){class v{constructor(e,t,s,o){i(this,"position"),i(this,"originalPosition"),i(this,"mesh"),i(this,"originalMesh"),i(this,"originalMeshX",0),i(this,"index"),this.position=new n(e,t),this.originalPosition=new n(e,t),this.mesh=new a(new m(2),new h({color:16777215,wireframe:!1})),this.originalMesh=s,this.originalMeshX=s.position.x,this.index=o}update(e){const i=this.originalPosition.clone().sub(e),t=i.length(),s=1/Math.max(t,.3),n=this.originalPosition.clone().sub(i.normalize().multiplyScalar(.2*-t*s*70));this.position.lerp(n,.1),this.mesh.position.x=this.position.x,this.mesh.position.y=this.position.y;const{array:o}=this.originalMesh.geometry.attributes.position;o[3*this.index+0]=this.position.x-this.originalMeshX,o[3*this.index+1]=this.position.y,this.originalMesh.geometry.attributes.position.needsUpdate=!0}}const b=new class extends t{constructor(){super(),i(this,"planeMesh",[]),i(this,"screenSpaceWidth",0),i(this,"raycaster",new s),i(this,"pointer",new n),i(this,"points",[]),i(this,"uniforms",{uTime:{value:0}}),i(this,"meshGroup",new o),i(this,"time",0)}load(){var e;this.init("#webgl"),null==(e=this.scene)||e.add(this.meshGroup),this.screenSpaceWidth=2*Math.tan(this.camera.fov*Math.PI/180/2)*this.camera.position.z*this.camera.aspect,this.animate(),this.addObject(),this.setupPoints(),this.mouseEvent()}setupPoints(){const e=p();this.planeMesh.forEach((i=>{var t;const{array:s}=i.geometry.attributes.position;for(let n=0;n<s.length;n+=3){const o=s[n]+i.position.x,a=s[n+1],r=e(o,a),u=e(o,a),l=new v(o+r,a+u,i,n/3);l.mesh.name="point",this.points.push(l),null==(t=this.scene)||t.add(l.mesh)}}));this.gui.add({visible:!0},"visible").onChange((e=>{var i;null==(i=this.scene)||i.traverse((i=>{i instanceof a&&"point"===i.name&&(i.visible=e)}))}))}addObject(){var e;const i=new r,t=i.load("./texture/uv_grid_opengl.jpg"),s=i.load("./texture/xingkong.jpg"),o=[t,s,i.load("./texture/sky.jpg"),t,s],h=new u({wireframe:!1,uniforms:{uTime:{value:0},uTexture:{value:null},uResolution:{value:new n(window.innerWidth,window.innerHeight)},uProgress:{value:0},uActive:{value:0}},vertexShader:"\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform sampler2D uTexture;\n        uniform float uTime;\n        uniform vec2 uResolution;\n        uniform float uProgress;\n        uniform float uActive;\n        varying vec2 vUv;\n        void main() {\n          vec2 normalizeUV = gl_FragCoord.xy / uResolution.xy;\n\n          float aspect = uResolution.x / uResolution.y;\n\n          vec2 scale;\n          if(aspect < 1.0){\n            scale = vec2(1.0, 1.0 / aspect);\n          }else{\n            scale = vec2(aspect, 1.0);\n          }\n\n          float s = 0.0;\n          if(uActive == 1.0){\n            s = uTime / 2.0;\n          }else {\n            s = 0.0;\n          }\n\n          normalizeUV = (normalizeUV - vec2(0.5)) * scale * (1.5 - s) + vec2(0.5) ;\n\n          normalizeUV.x -= uProgress;\n          // normalizeUV.y -= 1.0 / uProgress;\n\n\n\n          vec4 texture = texture2D(uTexture, normalizeUV);\n\n\n\n          gl_FragColor = texture;\n        }\n      "});for(let n=-1;n<2;n++){const i=new l(70,70,2,2),t=h.clone();t.uniforms.uTexture.value=o[n+1],t.uniforms.uProgress.value=n/2,t.uniforms.uTime=this.uniforms.uTime;const s=new a(i,t);s.position.x=70*n,s.name="drawPlane",null==(e=this.meshGroup)||e.add(s),this.planeMesh.push(s)}}mouseEvent(){var e;const i=new a(new l(1e3,1e3),new h),t=new a(new m(5),new h);null==(e=this.scene)||e.add(t);let s=!1;window.addEventListener("mousemove",(e=>{this.pointer.x=e.clientX/window.innerWidth*2-1,this.pointer.y=-e.clientY/window.innerHeight*2+1,this.raycaster.setFromCamera(this.pointer,this.camera);const n=this.raycaster.intersectObjects([i]);n.length>0&&(this.pointer.x=n[0].point.x,this.pointer.y=n[0].point.y,t.position.copy(n[0].point));const o=this.raycaster.intersectObjects(this.meshGroup.children);if(o.length){s=!0;const e=o[0].object;0===e.material.uniforms.uActive.value&&(e.material.uniforms.uActive.value=1,this.meshGroup.children.forEach((i=>{const t=i;t.uuid!==e.uuid&&(t.material.uniforms.uTime.value=0,t.material.uniforms.uActive.value=0)})))}else s&&(s=!1,this.meshGroup.children.forEach((e=>{const i=e;this.uniforms.uTime.value=0,i.material.uniforms.uTime.value=0,i.material.uniforms.uActive.value=0})))}),!1)}computedPoint(e,i,t){return e.x<i.x&&e.x>t.x&&e.y<i.y&&e.y>t.y}update(){}animate(){var e,i;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),c.update(),this.renderer.render(this.scene,this.camera),this.time+=.01,this.uniforms.uTime.value<=1&&(this.uniforms.uTime.value+=.1),this.points.forEach((e=>{e.update(this.pointer)})),null==(i=this.stats)||i.end()}};return d((()=>{b.load()})),g((()=>{b.destroy()})),(e,i)=>(y(),f(x,null,[i[0]||(i[0]=w("div",{id:"webgl"},null,-1)),i[1]||(i[1]=w("div",{class:"title-name"},"unknown",-1))],64))}});export{b as default};
