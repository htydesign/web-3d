import{B as e}from"./base-BaImv3YL.js";import{d as n,z as a,A as r,g as i,j as s,F as t,o}from"./@vue-DISYwsDo.js";import{T as l,e as d,B as c,f as m,b as v}from"./three-CyihR34C.js";const g=n({__name:"LightThreeView",setup(n){const g=new class extends e{constructor(){super()}load(){this.init("#webgl"),this.light(),this.animate(),this.create(),this.gridHelper()}async create(){var e;const n=(new l).load("./texture/noise.jpg");n.wrapS=d,n.wrapT=d;const a=new c(50,50,50);for(let r=0;r<10;r++)for(let i=0;i<10;i++){const s=new m({color:"#e43a3a",roughness:r/10,metalness:i/10,transmission:1,clearcoat:1});s.iridescence=3*r/10*50,s.iridescenceIOR=1.5;const t=new v(a,s);t.position.set(50*r-250,0,50*i-250),null==(e=this.scene)||e.add(t);const o={iTime:{value:0},iDir:{value:50*Math.random()},scanMap:{value:n}};s.onBeforeCompile=e=>{Object.assign(e.uniforms,o),e.vertexShader=`\n              uniform float iTime;\n              uniform float iDir;\n              varying vec2 vUv;\n              ${e.vertexShader}\n              `,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>","              \n              #include <begin_vertex>\n                transformed.y+=sin(iTime/50.0) * iDir;\n                vUv = uv;\n              "),e.fragmentShader=`\n              uniform float iTime;\n              uniform sampler2D scanMap;\n              varying vec2 vUv;\n              ${e.fragmentShader}\n              `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","              \n              #include <dithering_fragment>\n                float dis = distance(vWorldPosition.xz,vec2(0.0,0.0));\n\n                dis = fract((dis-iTime) / 50.0) ;\n\n                if(dis<1.0 && dis>0.5){\n                  vec3 mapColor = texture2D(scanMap,vUv).rgb;\n                  float p = ( dis-0.5)/0.5;\n                  gl_FragColor.rgb = mix(gl_FragColor.rgb, mapColor, p);\n                }\n               \n              ")},t.onBeforeRender=()=>{o.iTime.value=50*this.clock.getElapsedTime()}}}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(n=this.stats)||n.end()}};return a((()=>{g.load()})),r((()=>{g.destroy()})),(e,n)=>(o(),i(t,null,[n[0]||(n[0]=s("div",{id:"webgl"},null,-1)),n[1]||(n[1]=s("div",{class:"title-name"},"扫光",-1))],64))}});export{g as default};
