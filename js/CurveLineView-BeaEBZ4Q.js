var e=Object.defineProperty,a=(a,n,o)=>((a,n,o)=>n in a?e(a,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[n]=o)(a,"symbol"!=typeof n?n+"":n,o);import{B as n}from"./base-DAtrNvXQ.js";import{C as o,h as r,ac as t,J as i,u as s,K as u,V as l,S as m,M as d}from"./three-Bt21RtHy.js";import{d as v,z as c,A as h,g as f,o as w}from"./@vue-B4sUqkWa.js";const p={id:"webgl"},g=v({__name:"CurveLineView",setup(e){const v=new class extends n{constructor(){super(),a(this,"uniforms",{uStartColor:{value:new o(16777215)}})}load(){this.init("#webgl"),this.animate(),this.create()}create(){for(let e=0;e<100;e++){const a=new r(Math.sin(Math.PI*e*2/100)*Math.random()*200,50*Math.random()-50,Math.cos(Math.PI*e*2/100)*Math.random()*200),n=new r;n.addVectors(new r(0,0,0),a).multiplyScalar(.5),n.y=50*Math.random()+50,this.createCurveLineMesh(n,a)}this.gui.addColor(this.uniforms.uStartColor,"value").onChange((e=>{this.uniforms.uStartColor.value=e}))}createCurveLineMesh(e,a){var n;const v=new r(0,0,0),c=new t(v,e,a).getPoints(50),h=new i;for(let o=0;o<c.length-1;o++)h.curves.push(new s(c[o],c[o+1]));const f=new u(h,20,.5,8,!1),w={uTime:{value:1},uSpeed:{value:0},uFade:{value:new l(0,1)},uStartColor:{value:new o(16777215)},uColor:{value:new o(Math.random(),Math.random(),Math.random())}},p=new m({uniforms:w,transparent:!0,vertexShader:"\n        varying vec2 vUv;\n        void main(){\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform float uTime;\n        uniform vec2 uFade;\n        uniform vec3 uStartColor;\n        uniform vec3 uColor;\n        uniform float uSpeed;\n        varying vec2 vUv;\n        void main(){\n            vec3 color = vec3(1.0,1.0,1.0);\n            vec3 color3 = mix(color, uColor, vUv.x);\n\n            float d = mod((vUv.x-uTime) * 1.0 ,1.0);\n\n             if(d >= 0.95){\n                color3 = vec3(uStartColor);\n            }\n\n            if(d > uFade.y){\n              discard;\n            }else {\n              //平滑透明度渐变\n              float alpha = smoothstep(uFade.x, uFade.y, d);\n              //透明度太小时不显示\n              if(alpha < 0.001){\n                discard;\n              }\n              gl_FragColor = vec4(color3,alpha);\n            }\n        }\n      "}),g=new d(f,p),M=.005*Math.random()+.005;g.onBeforeRender=()=>{p.uniforms.uTime.value+=M,p.uniforms.uTime.value>1&&(p.uniforms.uTime.value=0)},null==(n=this.scene)||n.add(g)}animate(){var e,a;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(a=this.stats)||a.end()}};return c((()=>{v.load()})),h((()=>{v.gui.close(),v.gui.destroy()})),(e,a)=>(w(),f("div",p))}});export{g as default};
