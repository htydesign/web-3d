var e=Object.defineProperty,n=(n,t,a)=>((n,t,a)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a)(n,"symbol"!=typeof t?t+"":t,a);import{B as t}from"./base-CU2FGtE4.js";import{c as a,N as i,a as s,S as o,A as r,D as l,l as v,d as c}from"./three-BbqIY5yL.js";import{d as m,z as d,A as u,g as h,j as g,F as p,o as f}from"./@vue-DISYwsDo.js";const C=m({__name:"HotMap",setup(e){const m=new class extends t{constructor(){super(),n(this,"pixels",[]),n(this,"num",100)}load(){this.init("#webgl"),this.createCanvas(),this.animate()}createCanvas(){const e=document.createElement("img");e.src="./texture/hot-map.jpg";const n=this.num;e.onload=()=>{const t=document.createElement("canvas"),a=t.getContext("2d");t.width=n,t.height=n,a.drawImage(e,0,0,n,n);const i=a.getImageData(0,0,n,n);i.data,this.pixels=[...i.data],this.addObject()}}addObject(){var e;const n=this.num,t=this.num,m={h:100,uTime:.9},d=new a,u=new i(new s(0,0,1),-10),h=this.pixels;function g(e){const a=n*t*m.h,i=new Float32Array(3*a),s=new Float32Array(3*a);for(let o=0;o<n;o++)for(let e=0;e<t;e++){const a=o*t+e;for(let r=0;r<m.h;r++){const l=o*t*m.h+e*m.h+r;i[3*l+0]=o-n/2,i[3*l+1]=e-t/2,i[3*l+2]=r-m.h/2,s[3*l+0]=h[4*a+0]/255,s[3*l+1]=h[4*a+1]/255,s[3*l+2]=h[4*a+2]/255}}d.setAttribute("position",new c(i,3)),d.setAttribute("aColors",new c(s,3)),d.attributes.position.needsUpdate=!0,d.attributes.aColors.needsUpdate=!0}g();const p=new o({blending:r,transparent:!0,depthTest:!1,side:l,uniforms:{uTime:{value:.9}},vertexShader:"      \n        uniform float uTime;\n        attribute vec3 aColors;\n        varying vec3 vColors;\n        varying vec2 vUv;\n        varying float vTime;\n\n        void main() {\n          vColors = aColors;\n          vUv = uv;\n          vTime = uTime;\n          vec4 mvPosition = modelViewMatrix * vec4(position , 1.0);\n          // gl_PointSize = 50.0 * (2.0 / -mvPosition.z);\n          gl_PointSize = aColors.g < (vTime - 0.5) ? 5.0 : 0.0;\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        varying vec3 vColors;\n        varying vec2 vUv;\n        varying float vTime;       \n        void main() {\n          vec4 color1 = vec4(0.3, 0.3, 0.0, 0.1);\n          vec4 color2 = vec4(0.0, 1.0, 0.0, 1.0);\n          vec4 finalColor = color1;\n\n          float distance = distance(vUv, vec2(0.5));\n\n          if(vColors.g < vTime){\n            finalColor = vec4(vColors.rgb / 5.0, 0.5);\n          }\n          \n          gl_FragColor = finalColor;\n        }\n      ",depthWrite:!1,clippingPlanes:[u]}),f=new v(d,p);null==(e=this.scene)||e.add(f),this.gui.open(),this.gui.add(m,"h",1,this.num,1).onChange((e=>{g()})),this.gui.add(m,"uTime",0,1).onChange((e=>{p.uniforms.uTime.value=e}))}animate(){var e,n;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(n=this.stats)||n.end()}};return d((()=>{m.load()})),u((()=>{m.destroy()})),(e,n)=>(f(),h(p,null,[n[0]||(n[0]=g("div",{id:"webgl"},null,-1)),n[1]||(n[1]=g("div",{class:"title-name"},"hot-map",-1))],64))}});export{C as default};
