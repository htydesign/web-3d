var e=Object.defineProperty,t=(t,s,n)=>((t,s,n)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[s]=n)(t,"symbol"!=typeof s?s+"":s,n);import{B as s}from"./base-DV9bBaHp.js";import{V as n,o as a,z as i,s as o,F as r,a as l,M as c,b as d,H as h,J as m,K as p,G as u,N as w,C as g,Q as f,U as b,X as y,Y as P,Z as v,_ as x,$ as C}from"./three-g8slYH6C.js";import{d as A,z as F,A as j,g as W,j as H,F as M,o as N}from"./@vue-BDXyav1n.js";const _=A({__name:"ModelView1",setup(e){const A=new class extends s{constructor(){super(),t(this,"texture"),t(this,"mixer"),t(this,"composer"),t(this,"unifors",{u_center:{value:new n(.3,.3)}}),t(this,"raycaster"),t(this,"pointer",new n),t(this,"modelGrop",[])}load(){this.init("#webgl"),this.animate(),this.light(),this.gridHelper(),this.create()}create(){var e;null==(e=this.camera)||e.position.set(0,3,4);const t=new a,s=new i;s.setDecoderPath("./draco/"),t.setDRACOLoader(s),t.load("./models/model04.gltf",(e=>{var t,s,a;const i=e.scene;null==(t=this.scene)||t.add(i),this.mixer=new o(i);const A=this.mixer.clipAction(e.animations[0]),F=this.mixer.clipAction(e.animations[2]),j=this.mixer.clipAction(e.animations[4]);F.play(),A.play(),j.play(),F.timeScale=5;const W=new r(new l(0,0,1),0),H=new r(new l(0,0,-1),0),M=new c({color:16777215,wireframe:!0,transparent:!0,opacity:.75}),N=i.clone();N.traverse((e=>{e instanceof d&&(e.material=M,e.material.clippingPlanes=[W])})),i.traverse((e=>{e instanceof d&&(e.material.clippingPlanes=[H])})),null==(s=this.scene)||s.add(N);const _=i.clone(),D=new h,q=new m(75,innerWidth/innerHeight,.1,2e3);q.position.set(0,10,15),new p(q,null==(a=this.renderer)?void 0:a.domElement);const z=new u;z.position.set(10,0,0),D.add(z);const E=new w({color:new g(16777215),depthTest:!0,transparent:!0});_.traverse((e=>{if(e instanceof d){const t=new C,s=new l,n=new l;e.getWorldQuaternion(t),e.getWorldPosition(s),e.getWorldScale(n);const a=new f(e.geometry,20),i=new b(a);E.opacity=1,i.material=E,i.quaternion.copy(t),i.position.copy(s),i.scale.copy(n),z.add(i)}})),this.renderer.localClippingEnabled=!0;const G=this.gui.addFolder("Local Clipping"),L={get Plane(){return W.constant},set Plane(e){H.constant=-e,W.constant=e},get ModelPlane(){return H.constant},set ModelPlane(e){H.constant=e}};G.add(L,"Plane",-3.5,2);const O={threshold:.98,strength:1,radius:.5,exposure:1},Q=new y(this.scene,this.camera),S=new y(D,q);S.clear=!1;const V=new P(new n(window.innerWidth,window.innerHeight),1.5,.4,.85);V.threshold=O.threshold,V.strength=O.strength,V.radius=O.radius;const k=new v;this.composer=new x(this.renderer),this.composer.addPass(Q),this.composer.addPass(S),this.composer.addPass(V),this.composer.addPass(k);const B=this.gui.addFolder("bloom");B.add(O,"threshold",0,1).onChange((function(e){V.threshold=Number(e)})),B.add(O,"strength",0,3).onChange((function(e){V.strength=Number(e)})),this.gui.add(O,"radius",0,1).step(.01).onChange((function(e){V.radius=Number(e)}))}))}animate(){var e,t,s,n,a;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.mixer&&(null==(t=this.mixer)||t.update(this.clock.getDelta())),null==(s=this.raycaster)||s.setFromCamera(this.pointer,this.camera),null==(n=this.composer)||n.render(),null==(a=this.stats)||a.end()}};return F((()=>{A.load()})),j((()=>{A.gui.close(),A.gui.destroy()})),(e,t)=>(N(),W(M,null,[t[0]||(t[0]=H("div",{id:"webgl"},null,-1)),t[1]||(t[1]=H("div",{class:"title-name"},"模型1",-1))],64))}});export{_ as default};
