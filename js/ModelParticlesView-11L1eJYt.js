var e=Object.defineProperty,t=(t,n,s)=>((t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s)(t,"symbol"!=typeof n?n+"":n,s);import{B as n}from"./base-B0yzXU3r.js";import{i as s,O as o,b as i,j as a,c as r,d as l,S as d,A as u,V as c,g as p}from"./three-CgoiNTnZ.js";import{d as m,z as g,A as h,g as f,j as b,F as v,o as _}from"./@vue-DnmhANO5.js";const w=m({__name:"ModelParticlesView",setup(e){const m=new class extends n{constructor(){super(),t(this,"particlesModel")}load(){this.init("#webgl"),this.animate(),this.loadModel()}loadModel(){(new s).load("./models/gltf/Michelle.glb",(e=>{const t=e.scene;let n,s=0;(new o).load("./models/obj/male02/male02.obj",(e=>{const t=e.children[0]instanceof i&&e.children[0].geometry.attributes.position,o=e.children[1]instanceof i&&e.children[1].geometry.attributes.position;n=new Float32Array([...t.array,...o.array]),s=t.count+o.count})),t.traverse((e=>{var t,o;if(e instanceof a){e.visible=!1;let i=!1;const a=new r,{array:m,count:g}=e.geometry.attributes.position,h=m.length,f=new Float32Array(3*g);a.setAttribute("position",new l(f,3));const b=new Float32Array(3*g);a.setAttribute("toPosition",new l(b,3));const v=new Float32Array(g);a.setAttribute("speed",new l(v,1));const _=new d({vertexShader:"\n              uniform float u_progress;\n              uniform float u_time;\n              uniform vec2 u_boundingBox;\n              uniform float u_speed;\n              attribute vec3 toPosition;\n              attribute float speed;\n              void main() {\n                vec3 dis = toPosition - position;             \n\n                float perecent = u_progress / speed;\n\n                vec3 pos;\n                if(perecent <= 1.0){\n                  pos = position + dis * perecent; \n                  float yDis =(toPosition.y-u_boundingBox.x)/(u_boundingBox.y-u_boundingBox.x);\n                  if(yDis<perecent){\n                    pos = toPosition;\n                  }\n\n                }else{\n                  pos = toPosition;\n                }\n               \n                gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\n                gl_PointSize = 2.0;\n              }\n            ",fragmentShader:"\n              void main(){\n                float strength = distance(gl_PointCoord,vec2(0.5,0.5));\n                float dis = length(gl_PointCoord - 0.5);\n                dis = smoothstep(0.5,0.0,dis);\n                strength = step(0.5,strength);\n                strength = 1.0 - strength;\n\n                if(strength == 0.0){\n                  discard;\n                }\n                if(dis == 0.0){\n                  discard;\n                }\n\n                gl_FragColor = vec4(1.0,1.0,1.0, strength);\n                \n              }\n            ",transparent:!0,blending:u,uniforms:{u_progress:{value:0},u_time:{value:0},u_speed:{value:.1},u_boundingBox:{value:new c}}});for(let e=0;e<h;e++)f[3*e]=0,f[3*e+1]=0,f[3*e+2]=0,b[3*e]=50*m[3*e],b[3*e+1]=50*m[3*e+1],b[3*e+2]=50*m[3*e+2],v[e]=.5+.5*Math.random();a.attributes.position.needsUpdate=!0,a.attributes.toPosition.needsUpdate=!0,a.attributes.speed.needsUpdate=!0,a.computeBoundingBox();const{min:w,max:M}=a.boundingBox||{min:new c(.1,.2),max:new c(.11,.12)};_.uniforms.u_boundingBox.value.set(w,M),this.particlesModel=new p(a,_),null==(t=this.particlesModel)||t.position.set(0,0,0),null==(o=this.scene)||o.add(this.particlesModel);const y={ParticleModelChange:()=>{if(this.particlesModel.material.uniforms.u_progress.value=0,i=!i,i){let e=0;for(let t=0;t<h;t++)e%=s,f[3*t]=b[3*t],f[3*t+1]=b[3*t+1],f[3*t+2]=b[3*t+2],b[3*t]=n[3*e],b[3*t+1]=n[3*e+1],b[3*t+2]=n[3*e+2],v[t]=.5+.5*Math.random(),e++}else{let e=0;for(let t=0;t<h;t++)e%=g,f[3*t]=b[3*t],f[3*t+1]=b[3*t+1],f[3*t+2]=b[3*t+2],b[3*t]=50*m[3*e],b[3*t+1]=50*m[3*e+1],b[3*t+2]=50*m[3*e+2],v[t]=.5+.5*Math.random(),e++}a.attributes.position.needsUpdate=!0,a.attributes.toPosition.needsUpdate=!0,a.attributes.speed.needsUpdate=!0}};this.gui.add(y,"ParticleModelChange").name("模型之间粒子变换")}}))}))}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.particlesModel&&(this.particlesModel.material.uniforms.u_time.value=this.clock.getDelta(),this.particlesModel.material.uniforms.u_progress.value>1&&(this.particlesModel.material.uniforms.u_progress.value=1),this.particlesModel.material.uniforms.u_progress.value+=.01),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return g((()=>{m.load()})),h((()=>{m.gui.close(),m.gui.destroy()})),(e,t)=>(_(),f(v,null,[t[0]||(t[0]=b("div",{id:"webgl"},null,-1)),t[1]||(t[1]=b("div",{class:"title-name"},"模型粒子变换",-1))],64))}});export{w as default};
