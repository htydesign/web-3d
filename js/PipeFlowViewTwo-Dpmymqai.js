import{B as e}from"./base-Bvp4kbhh.js";import{V as t,s as n,k as s,aH as a,B as i,l as o,u as r,P as l}from"./three-BQi6w2h5.js";import{d as c,z as d,A as u,g as w,j as m,F as h,o as p}from"./@vue-B4sUqkWa.js";const g=c({__name:"PipeFlowViewTwo",setup(c){const g=new class extends e{constructor(){super()}load(){this.init("#webgl"),this.animate(),this.createMesh()}createPath(e){const a=e.map((e=>new t(e[0],e[1],e[2]))),i=new n;for(let t=0;t<a.length-1;t++)i.curves.push(new s(a[t],a[t+1]));return i}getTrajectoryPoint(e){const n=2*e,s=Math.sin(e);return new t(n,s,0)}createMesh(){var e;const n=new a([new t(-100,0,100),new t(-50,50,50),new t(0,0,0),new t(50,-50,50),new t(100,0,100)]),s=n.getPoints(50),c=(new i).setFromPoints(s),d=new i,{count:u,array:w}=c.attributes.position,m=new Float32Array(3*u);d.setAttribute("position",new o(m,3));for(let t=0;t<u-1;t++){const e=(0+t/u)%1,s=n.getPointAt(e);m[3*t+0]=s.x,m[3*t+1]=s.y,m[3*t+2]=s.z}d.attributes.position.needsUpdate=!0;const h=new r({vertexShader:"\n        void main(){\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 5.0;\n        }\n      ",fragmentShader:"\n        void main(){\n          gl_FragColor = vec4(1.0);\n        }\n      "}),p=new l(d,h);let g=0;p.onBeforeRender=()=>{for(let e=0;e<u;e++){const t=(g+e/u)%1,s=n.getPointAt(t);m[3*e+0]=s.x,m[3*e+1]=s.y,m[3*e+2]=s.z}g+=.1,d.attributes.position.needsUpdate=!0},null==(e=this.scene)||e.add(p)}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return d((()=>{g.load()})),u((()=>{g.gui.close(),g.gui.destroy()})),(e,t)=>(p(),w(h,null,[t[0]||(t[0]=m("div",{id:"webgl"},null,-1)),t[1]||(t[1]=m("div",{class:"title-name"},"粒子管道流动",-1))],64))}});export{g as default};
