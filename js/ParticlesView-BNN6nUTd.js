var e=Object.defineProperty,t=(t,n,s)=>((t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s)(t,"symbol"!=typeof n?n+"":n,s);import{B as n}from"./base-CgClm5XE.js";import{d as s,B as i,e as o,S as a,A as r,V as u,h as l,i as d}from"./three-BQT4yrvs.js";import{d as p,A as m,B as c,g,j as h,F as f,o as b}from"./@vue-89U3BwR9.js";const v=p({__name:"ParticlesView",setup(e){const p=new class extends n{constructor(){super(),t(this,"particles")}load(){this.init("#webgl"),this.particlesTransformGeometry(),this.animate()}particlesTransformGeometry(){var e;let t=!0;const n=1e6,p=new s,m=new i(5,5,5,5,5,50),{array:c}=m.attributes.position,g=new Float32Array(3*n);p.setAttribute("position",new o(g,3));const h=new Float32Array(3*n);p.setAttribute("toPosition",new o(h,3));const f=new Float32Array(n);p.setAttribute("speed",new o(f,1));const b=new a({vertexShader:"\n              uniform float u_progress;\n              uniform float u_time;\n              uniform vec2 u_boundingBox;\n              uniform float u_speed;\n              attribute vec3 toPosition;\n              attribute float speed;\n              void main() {\n                vec3 dis = toPosition - position;             \n\n                float perecent = u_progress / speed;\n\n                vec3 pos;\n                if(perecent <= 1.0){\n                  pos = position + dis * perecent; \n                  float yDis =(toPosition.y-u_boundingBox.x)/(u_boundingBox.y-u_boundingBox.x);\n                  if(yDis<perecent){\n                    pos = toPosition;\n                  }\n\n                }else{\n                  pos = toPosition;\n                }\n               \n                gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\n                gl_PointSize = 3.0;\n              }\n            ",fragmentShader:"\n              void main(){\n                float strength = distance(gl_PointCoord,vec2(0.5,0.5));\n                float dis = length(gl_PointCoord - 0.5);\n                dis = smoothstep(0.5,0.0,dis);\n                strength = step(0.5,strength);\n                strength = 1.0 - strength;\n\n                if(strength == 0.0){\n                  discard;\n                }\n                if(dis == 0.0){\n                  discard;\n                }\n\n                gl_FragColor = vec4(1.0,1.0,1.0, strength);\n                \n              }\n            ",transparent:!0,blending:r,uniforms:{u_progress:{value:0},u_time:{value:0},u_speed:{value:.1},u_boundingBox:{value:new u}}});for(let s=0;s<n;s++)g[3*s]=c[3*s],g[3*s+1]=c[3*s+1],g[3*s+2]=c[3*s+2],h[3*s]=c[3*s],h[3*s+1]=c[3*s+1],h[3*s+2]=c[3*s+2],f[s]=.5+.5*Math.random();p.attributes.position.needsUpdate=!0,p.attributes.toPosition.needsUpdate=!0,p.attributes.speed.needsUpdate=!0,this.particles=new l(p,b),this.particles.position.set(0,0,0),this.particles.scale.set(30,30,30),this.particles.castShadow=!0,null==(e=this.scene)||e.add(this.particles),p.computeBoundingBox();const{min:v,max:_}=m.boundingBox||{min:new u(-2.5,-2.5),max:new u(2.5,2.5)};b.uniforms.u_boundingBox.value.set(v,_);const w={ParticleGeometryChange:()=>{let e;this.particles.material.uniforms.u_progress.value=0,t=!t,e=t?new i(5,5,5,5,5,50):new d(2.5,64,64);const s=e.attributes.position.array,o=e.attributes.position.count;let a=0;for(let t=0;t<n;t++)a%=o,g[3*t]=h[3*t],g[3*t+1]=h[3*t+1],g[3*t+2]=h[3*t+2],h[3*t]=s[3*a],h[3*t+1]=s[3*a+1],h[3*t+2]=s[3*a+2],f[t]=.5+.5*Math.random(),a++;p.attributes.position.needsUpdate=!0,p.attributes.toPosition.needsUpdate=!0,p.attributes.speed.needsUpdate=!0,e.computeBoundingBox();const{min:r,max:l}=e.boundingBox||{min:new u(.1,.2),max:new u(.11,.12)};b.uniforms.u_boundingBox.value.set(r,l)}};this.gui.add(w,"ParticleGeometryChange").name("几何体之间粒子变换")}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.particles&&(this.particles.material.uniforms.u_time.value=this.clock.getDelta(),this.particles.material.uniforms.u_progress.value>1&&(this.particles.material.uniforms.u_progress.value=1),this.particles.material.uniforms.u_progress.value+=.01),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return m((()=>{p.load()})),c((()=>{p.gui.close(),p.gui.destroy()})),(e,t)=>(b(),g(f,null,[t[0]||(t[0]=h("div",{id:"webgl"},null,-1)),t[1]||(t[1]=h("div",{class:"title-name"},"几何体粒子变换（1000000个粒子）",-1))],64))}});export{v as default};
