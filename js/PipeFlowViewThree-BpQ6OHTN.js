import{B as e}from"./base-DA_1vFsv.js";import{B as t,m as n,g as s,b as a,l as i,u as o,ab as r,ad as l,G as d,aH as c,V as m}from"./three-bNoUHtZ1.js";import{d as u,z as w,A as h,g as p,j as g,F as v,o as M}from"./@vue-B4sUqkWa.js";const b=u({__name:"PipeFlowViewThree",setup(u){const b=new class extends e{constructor(){super()}load(){this.init("#webgl"),this.animate(),this.createMesh()}createPoints(e){const d=e.getPoints(50),c=(new t).setFromPoints(d),{count:m,array:u}=c.attributes.position,w=new n({size:1,color:16711680}),h=new s(3,3,3);new a(h,w);const p=new t,g=new Float32Array(300);p.setAttribute("position",new i(g,3));for(let t=0;t<100;t++)g[3*t+0]=5*Math.random()-2.5,g[3*t+1]=5*Math.random()-2.5,g[3*t+2]=1*Math.random()-2.5;p.attributes.position.needsUpdate=!0,new o({uniforms:{time:{value:0}},vertexShader:"\n        \n        void main() {          \n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); \n          gl_PointSize = 5.0;\n        }\n      ",fragmentShader:"\n      \n      void main() {\n       \n        gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n      }\n      "});const v=new r(p,w,m),M=new l;let b=0;return v.onBeforeRender=()=>{for(let t=0;t<m;t++){const n=(b+t/m)%1,s=e.getPointAt(n);M.position.copy(s),M.updateMatrix(),v.setMatrixAt(t,M.matrix)}b+=.001,v.instanceMatrix.needsUpdate=!0},v}createMesh(){var e;const t=new d;null==(e=this.scene)||e.add(t);const n=new c([new m(-100,0,100),new m(-50,50,50),new m(0,0,0),new m(50,-50,50),new m(100,0,100)]);t.add(this.createPoints(n))}animate(){var e,t;null==(e=this.stats)||e.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer.render(this.scene,this.camera),null==(t=this.stats)||t.end()}};return w((()=>{b.load()})),h((()=>{b.gui.close(),b.gui.destroy()})),(e,t)=>(M(),p(v,null,[t[0]||(t[0]=g("div",{id:"webgl"},null,-1)),t[1]||(t[1]=g("div",{class:"title-name"},"粒子管道流动3",-1))],64))}});export{b as default};
