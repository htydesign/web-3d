const e={},t=function(t,i,n){let r=Promise.resolve();if(i&&i.length>0){const t=document.getElementsByTagName("link"),s=document.querySelector("meta[property=csp-nonce]"),a=(null==s?void 0:s.nonce)||(null==s?void 0:s.getAttribute("nonce"));r=Promise.allSettled(i.map((i=>{if(i=function(e,t){return new URL(e,t).href}(i,n),i in e)return;e[i]=!0;const r=i.endsWith(".css"),s=r?'[rel="stylesheet"]':"";if(!!n)for(let e=t.length-1;e>=0;e--){const n=t[e];if(n.href===i&&(!r||"stylesheet"===n.rel))return}else if(document.querySelector(`link[href="${i}"]${s}`))return;const o=document.createElement("link");return o.rel=r?"stylesheet":"modulepreload",r||(o.as="script"),o.crossOrigin="",o.href=i,a&&o.setAttribute("nonce",a),document.head.appendChild(o),r?new Promise(((e,t)=>{o.addEventListener("load",e),o.addEventListener("error",(()=>t(new Error(`Unable to preload CSS for ${i}`))))})):void 0})))}function s(e){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}return r.then((e=>{for(const t of e||[])"rejected"===t.status&&s(t.reason);return t().catch(s)}))},i="176",n=0,r=1,s=2,a=0,o=1,l=2,u=3,c=2,h=0,d=1,p=2,m=2,f=100,g=101,_=102,v=200,x=201,y=202,b=203,T=204,S=205,M=206,w=207,E=208,A=209,R=210,C=211,N=212,P=213,L=214,I=0,D=1,U=2,F=3,O=4,B=5,V=6,z=7,k=4,G="attached",H=301,W=302,j=303,X=304,$=306,q=1e3,Y=1001,K=1002,Z=1003,Q=1004,J=1005,ee=1006,te=1007,ie=1008,ne=1009,re=1010,se=1011,ae=1012,oe=1013,le=1014,ue=1015,ce=1016,he=1017,de=1018,pe=1020,me=35902,fe=1021,ge=1022,_e=1023,ve=1026,xe=1027,ye=1028,be=1029,Te=1030,Se=1031,Me=1033,we=33776,Ee=33777,Ae=33778,Re=33779,Ce=35840,Ne=35841,Pe=35842,Le=35843,Ie=36196,De=37492,Ue=37496,Fe=37808,Oe=37809,Be=37810,Ve=37811,ze=37812,ke=37813,Ge=37814,He=37815,We=37816,je=37817,Xe=37818,$e=37819,qe=37820,Ye=37821,Ke=36492,Ze=36494,Qe=36495,Je=36283,et=36284,tt=36285,it=36286,nt=2201,rt=2300,st=2301,at=2302,ot=2400,lt=2401,ut=2402,ct=2500,ht="",dt="srgb",pt="srgb-linear",mt="linear",ft="srgb",gt=7680,_t=512,vt=513,xt=514,yt=515,bt=516,Tt=517,St=518,Mt=519,wt=35044,Et=35048,At="300 es",Rt=2e3,Ct=2001;class Nt{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return void 0!==i&&(void 0!==i[e]&&-1!==i[e].indexOf(t))}removeEventListener(e,t){const i=this._listeners;if(void 0===i)return;const n=i[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){const t=this._listeners;if(void 0===t)return;const i=t[e.type];if(void 0!==i){e.target=this;const t=i.slice(0);for(let i=0,n=t.length;i<n;i++)t[i].call(this,e);e.target=null}}}const Pt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Lt=1234567;const It=Math.PI/180,Dt=180/Math.PI;function Ut(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Pt[255&e]+Pt[e>>8&255]+Pt[e>>16&255]+Pt[e>>24&255]+"-"+Pt[255&t]+Pt[t>>8&255]+"-"+Pt[t>>16&15|64]+Pt[t>>24&255]+"-"+Pt[63&i|128]+Pt[i>>8&255]+"-"+Pt[i>>16&255]+Pt[i>>24&255]+Pt[255&n]+Pt[n>>8&255]+Pt[n>>16&255]+Pt[n>>24&255]).toLowerCase()}function Ft(e,t,i){return Math.max(t,Math.min(i,e))}function Ot(e,t){return(e%t+t)%t}function Bt(e,t,i){return(1-i)*e+i*t}function Vt(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function zt(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const kt={DEG2RAD:It,RAD2DEG:Dt,generateUUID:Ut,clamp:Ft,euclideanModulo:Ot,mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:Bt,damp:function(e,t,i,n){return Bt(e,t,1-Math.exp(-i*n))},pingpong:function(e,t=1){return t-Math.abs(Ot(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(Lt=e);let t=Lt+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*It},radToDeg:function(e){return e*Dt},isPowerOfTwo:function(e){return!(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,i,n,r){const s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),u=s((t+n)/2),c=a((t+n)/2),h=s((t-n)/2),d=a((t-n)/2),p=s((n-t)/2),m=a((n-t)/2);switch(r){case"XYX":e.set(o*c,l*h,l*d,o*u);break;case"YZY":e.set(l*d,o*c,l*h,o*u);break;case"ZXZ":e.set(l*h,l*d,o*c,o*u);break;case"XZX":e.set(o*c,l*m,l*p,o*u);break;case"YXY":e.set(l*p,o*c,l*m,o*u);break;case"ZYZ":e.set(l*m,l*p,o*c,o*u)}},normalize:zt,denormalize:Vt};class Gt{constructor(e=0,t=0){Gt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ft(this.x,e.x,t.x),this.y=Ft(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ft(this.x,e,t),this.y=Ft(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ft(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ft(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ht{constructor(e,t,i,n,r,s,a,o,l){Ht.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l)}set(e,t,i,n,r,s,a,o,l){const u=this.elements;return u[0]=e,u[1]=n,u[2]=a,u[3]=t,u[4]=r,u[5]=o,u[6]=i,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],u=i[4],c=i[7],h=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],_=n[1],v=n[4],x=n[7],y=n[2],b=n[5],T=n[8];return r[0]=s*m+a*_+o*y,r[3]=s*f+a*v+o*b,r[6]=s*g+a*x+o*T,r[1]=l*m+u*_+c*y,r[4]=l*f+u*v+c*b,r[7]=l*g+u*x+c*T,r[2]=h*m+d*_+p*y,r[5]=h*f+d*v+p*b,r[8]=h*g+d*x+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8];return t*s*u-t*a*l-i*r*u+i*a*o+n*r*l-n*s*o}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=u*s-a*l,h=a*o-u*r,d=l*r-s*o,p=t*c+i*h+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=c*m,e[1]=(n*l-u*i)*m,e[2]=(a*i-n*s)*m,e[3]=h*m,e[4]=(u*t-n*o)*m,e[5]=(n*r-a*t)*m,e[6]=d*m,e[7]=(i*o-l*t)*m,e[8]=(s*t-i*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+e,-n*l,n*o,-n*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Wt.makeScale(e,t)),this}rotate(e){return this.premultiply(Wt.makeRotation(-e)),this}translate(e,t){return this.premultiply(Wt.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Wt=new Ht;function jt(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Xt(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function $t(){const e=Xt("canvas");return e.style.display="block",e}const qt={};function Yt(e){e in qt||(qt[e]=!0)}const Kt=(new Ht).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Zt=(new Ht).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Qt(){const e={enabled:!0,workingColorSpace:pt,spaces:{},convert:function(e,t,i){return!1!==this.enabled&&t!==i&&t&&i?(this.spaces[t].transfer===ft&&(e.r=ei(e.r),e.g=ei(e.g),e.b=ei(e.b)),this.spaces[t].primaries!==this.spaces[i].primaries&&(e.applyMatrix3(this.spaces[t].toXYZ),e.applyMatrix3(this.spaces[i].fromXYZ)),this.spaces[i].transfer===ft&&(e.r=ti(e.r),e.g=ti(e.g),e.b=ti(e.b)),e):e},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)},getPrimaries:function(e){return this.spaces[e].primaries},getTransfer:function(e){return e===ht?mt:this.spaces[e].transfer},getLuminanceCoefficients:function(e,t=this.workingColorSpace){return e.fromArray(this.spaces[t].luminanceCoefficients)},define:function(e){Object.assign(this.spaces,e)},_getMatrix:function(e,t,i){return e.copy(this.spaces[t].toXYZ).multiply(this.spaces[i].fromXYZ)},_getDrawingBufferColorSpace:function(e){return this.spaces[e].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(e=this.workingColorSpace){return this.spaces[e].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],i=[.2126,.7152,.0722],n=[.3127,.329];return e.define({[pt]:{primaries:t,whitePoint:n,transfer:mt,toXYZ:Kt,fromXYZ:Zt,luminanceCoefficients:i,workingColorSpaceConfig:{unpackColorSpace:dt},outputColorSpaceConfig:{drawingBufferColorSpace:dt}},[dt]:{primaries:t,whitePoint:n,transfer:ft,toXYZ:Kt,fromXYZ:Zt,luminanceCoefficients:i,outputColorSpaceConfig:{drawingBufferColorSpace:dt}}}),e}const Jt=Qt();function ei(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function ti(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let ii;class ni{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{void 0===ii&&(ii=Xt("canvas")),ii.width=e.width,ii.height=e.height;const t=ii.getContext("2d");e instanceof ImageData?t.putImageData(e,0,0):t.drawImage(e,0,0,e.width,e.height),i=ii}return i.toDataURL(t)}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Xt("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let e=0;e<r.length;e++)r[e]=255*ei(r[e]/255);return i.putImageData(n,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*ei(t[e]/255)):t[e]=ei(t[e]);return{data:t,width:e.width,height:e.height}}return e}}let ri=0;class si{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ri++}),this.uuid=Ut(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let e;if(Array.isArray(n)){e=[];for(let t=0,i=n.length;t<i;t++)n[t].isDataTexture?e.push(ai(n[t].image)):e.push(ai(n[t]))}else e=ai(n);i.url=e}return t||(e.images[this.uuid]=i),i}}function ai(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ni.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:{}}let oi=0;class li extends Nt{constructor(e=li.DEFAULT_IMAGE,t=li.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=1023,o=1009,l=li.DEFAULT_ANISOTROPY,u=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:oi++}),this.uuid=Ut(),this.name="",this.source=new si(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Gt(0,0),this.repeat=new Gt(1,1),this.center=new Gt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isTextureArray=e.isTextureArray,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case q:e.x=e.x-Math.floor(e.x);break;case Y:e.x=e.x<0?0:1;break;case K:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case q:e.y=e.y-Math.floor(e.y);break;case Y:e.y=e.y<0?0:1;break;case K:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}li.DEFAULT_IMAGE=null,li.DEFAULT_MAPPING=300,li.DEFAULT_ANISOTROPY=1;class ui{constructor(e=0,t=0,i=0,n=1){ui.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const s=.01,a=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(u-h)<s&&Math.abs(c-m)<s&&Math.abs(p-f)<s){if(Math.abs(u+h)<a&&Math.abs(c+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,_=(g+1)/2,v=(u+h)/4,x=(c+m)/4,y=(p+f)/4;return e>o&&e>_?e<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(e),n=v/i,r=x/i):o>_?o<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(o),i=v/n,r=y/n):_<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(_),i=x/r,n=y/r),this.set(i,n,r,t),this}let _=Math.sqrt((f-p)*(f-p)+(c-m)*(c-m)+(h-u)*(h-u));return Math.abs(_)<.001&&(_=1),this.x=(f-p)/_,this.y=(c-m)/_,this.z=(h-u)/_,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ft(this.x,e.x,t.x),this.y=Ft(this.y,e.y,t.y),this.z=Ft(this.z,e.z,t.z),this.w=Ft(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ft(this.x,e,t),this.y=Ft(this.y,e,t),this.z=Ft(this.z,e,t),this.w=Ft(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ft(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ci extends Nt{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth?i.depth:1,this.scissor=new ui(0,0,e,t),this.scissorTest=!1,this.viewport=new ui(0,0,e,t);const n={width:e,height:t,depth:this.depth};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ee,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},i);const r=new li(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const s=i.count;for(let a=0;a<s;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==e&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new si(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class hi extends ci{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class di extends li{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Z,this.minFilter=Z,this.wrapR=Y,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class pi extends li{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Z,this.minFilter=Z,this.wrapR=Y,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class mi{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,s,a){let o=i[n+0],l=i[n+1],u=i[n+2],c=i[n+3];const h=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return e[t+0]=o,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===a)return e[t+0]=h,e[t+1]=d,e[t+2]=p,void(e[t+3]=m);if(c!==m||o!==h||l!==d||u!==p){let e=1-a;const t=o*h+l*d+u*p+c*m,i=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,t*i);e=Math.sin(e*s)/r,a=Math.sin(a*s)/r}const r=a*i;if(o=o*e+h*r,l=l*e+d*r,u=u*e+p*r,c=c*e+m*r,e===1-a){const e=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=e,l*=e,u*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}static multiplyQuaternionsFlat(e,t,i,n,r,s){const a=i[n],o=i[n+1],l=i[n+2],u=i[n+3],c=r[s],h=r[s+1],d=r[s+2],p=r[s+3];return e[t]=a*p+u*c+o*d-l*h,e[t+1]=o*p+u*h+l*c-a*d,e[t+2]=l*p+u*d+a*h-o*c,e[t+3]=u*p-a*c-o*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,r=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(i/2),u=a(n/2),c=a(r/2),h=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],u=t[6],c=t[10],h=i+a+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(u-o)*e,this._y=(r-l)*e,this._z=(s-n)*e}else if(i>a&&i>c){const e=2*Math.sqrt(1+i-a-c);this._w=(u-o)/e,this._x=.25*e,this._y=(n+s)/e,this._z=(r+l)/e}else if(a>c){const e=2*Math.sqrt(1+a-i-c);this._w=(r-l)/e,this._x=(n+s)/e,this._y=.25*e,this._z=(o+u)/e}else{const e=2*Math.sqrt(1+c-i-a);this._w=(s-n)/e,this._x=(r+l)/e,this._y=(o+u)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ft(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(0===i)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,s=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=i*u+s*a+n*l-r*o,this._y=n*u+s*o+r*a-i*l,this._z=r*u+s*l+i*o-n*a,this._w=s*u-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const i=this._x,n=this._y,r=this._z,s=this._w;let a=s*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*i+t*this._x,this._y=e*n+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}const l=Math.sqrt(o),u=Math.atan2(l,a),c=Math.sin((1-t)*u)/l,h=Math.sin(t*u)/l;return this._w=s*c+this._w*h,this._x=i*c+this._x*h,this._y=n*c+this._y*h,this._z=r*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class fi{constructor(e=0,t=0,i=0){fi.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(_i.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_i.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,a=e.z,o=e.w,l=2*(s*n-a*i),u=2*(a*t-r*n),c=2*(r*i-s*t);return this.x=t+o*l+s*c-a*u,this.y=i+o*u+a*l-r*c,this.z=n+o*c+r*u-s*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ft(this.x,e.x,t.x),this.y=Ft(this.y,e.y,t.y),this.z=Ft(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ft(this.x,e,t),this.y=Ft(this.y,e,t),this.z=Ft(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Ft(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,s=t.x,a=t.y,o=t.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return gi.copy(this).projectOnVector(e),this.sub(gi)}reflect(e){return this.sub(gi.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ft(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=2*Math.random()-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const gi=new fi,_i=new mi;class vi{constructor(e=new fi(1/0,1/0,1/0),t=new fi(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(yi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(yi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=yi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(void 0!==i){const n=i.getAttribute("position");if(!0===t&&void 0!==n&&!0!==e.isInstancedMesh)for(let t=0,i=n.count;t<i;t++)!0===e.isMesh?e.getVertexPosition(t,yi):yi.fromBufferAttribute(n,t),yi.applyMatrix4(e.matrixWorld),this.expandByPoint(yi);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),bi.copy(e.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),bi.copy(i.boundingBox)),bi.applyMatrix4(e.matrixWorld),this.union(bi)}const n=e.children;for(let r=0,s=n.length;r<s;r++)this.expandByObject(n[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,yi),yi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ri),Ci.subVectors(this.max,Ri),Ti.subVectors(e.a,Ri),Si.subVectors(e.b,Ri),Mi.subVectors(e.c,Ri),wi.subVectors(Si,Ti),Ei.subVectors(Mi,Si),Ai.subVectors(Ti,Mi);let t=[0,-wi.z,wi.y,0,-Ei.z,Ei.y,0,-Ai.z,Ai.y,wi.z,0,-wi.x,Ei.z,0,-Ei.x,Ai.z,0,-Ai.x,-wi.y,wi.x,0,-Ei.y,Ei.x,0,-Ai.y,Ai.x,0];return!!Li(t,Ti,Si,Mi,Ci)&&(t=[1,0,0,0,1,0,0,0,1],!!Li(t,Ti,Si,Mi,Ci)&&(Ni.crossVectors(wi,Ei),t=[Ni.x,Ni.y,Ni.z],Li(t,Ti,Si,Mi,Ci)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,yi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(yi).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(xi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),xi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),xi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),xi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),xi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),xi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),xi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),xi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(xi)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const xi=[new fi,new fi,new fi,new fi,new fi,new fi,new fi,new fi],yi=new fi,bi=new vi,Ti=new fi,Si=new fi,Mi=new fi,wi=new fi,Ei=new fi,Ai=new fi,Ri=new fi,Ci=new fi,Ni=new fi,Pi=new fi;function Li(e,t,i,n,r){for(let s=0,a=e.length-3;s<=a;s+=3){Pi.fromArray(e,s);const a=r.x*Math.abs(Pi.x)+r.y*Math.abs(Pi.y)+r.z*Math.abs(Pi.z),o=t.dot(Pi),l=i.dot(Pi),u=n.dot(Pi);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>a)return!1}return!0}const Ii=new vi,Di=new fi,Ui=new fi;class Fi{constructor(e=new fi,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;void 0!==t?i.copy(t):Ii.setFromPoints(e).getCenter(i);let n=0;for(let r=0,s=e.length;r<s;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Di.subVectors(e,this.center);const t=Di.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),i=.5*(e-this.radius);this.center.addScaledVector(Di,i/e),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Ui.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Di.copy(e.center).add(Ui)),this.expandByPoint(Di.copy(e.center).sub(Ui))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Oi=new fi,Bi=new fi,Vi=new fi,zi=new fi,ki=new fi,Gi=new fi,Hi=new fi;class Wi{constructor(e=new fi,t=new fi(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Oi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Oi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Oi.copy(this.origin).addScaledVector(this.direction,t),Oi.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Bi.copy(e).add(t).multiplyScalar(.5),Vi.copy(t).sub(e).normalize(),zi.copy(this.origin).sub(Bi);const r=.5*e.distanceTo(t),s=-this.direction.dot(Vi),a=zi.dot(this.direction),o=-zi.dot(Vi),l=zi.lengthSq(),u=Math.abs(1-s*s);let c,h,d,p;if(u>0)if(c=s*o-a,h=s*a-o,p=r*u,c>=0)if(h>=-p)if(h<=p){const e=1/u;c*=e,h*=e,d=c*(c+s*h+2*a)+h*(s*c+h+2*o)+l}else h=r,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h=-r,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-s*r+a)),h=c>0?-r:Math.min(Math.max(-r,-o),r),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-r,-o),r),d=h*(h+2*o)+l):(c=Math.max(0,-(s*r+a)),h=c>0?r:Math.min(Math.max(-r,-o),r),d=-c*c+h*(h+2*o)+l);else h=s>0?-r:r,c=Math.max(0,-(s*h+a)),d=-c*c+h*(h+2*o)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,c),n&&n.copy(Bi).addScaledVector(Vi,h),d}intersectSphere(e,t){Oi.subVectors(e.center,this.origin);const i=Oi.dot(this.direction),n=Oi.dot(Oi)-i*i,r=e.radius*e.radius;if(n>r)return null;const s=Math.sqrt(r-n),a=i-s,o=i+s;return o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,s,a,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(i=(e.min.x-h.x)*l,n=(e.max.x-h.x)*l):(i=(e.max.x-h.x)*l,n=(e.min.x-h.x)*l),u>=0?(r=(e.min.y-h.y)*u,s=(e.max.y-h.y)*u):(r=(e.max.y-h.y)*u,s=(e.min.y-h.y)*u),i>s||r>n?null:((r>i||isNaN(i))&&(i=r),(s<n||isNaN(n))&&(n=s),c>=0?(a=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(a=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),i>o||a>n?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0?null:this.at(i>=0?i:n,t)))}intersectsBox(e){return null!==this.intersectBox(e,Oi)}intersectTriangle(e,t,i,n,r){ki.subVectors(t,e),Gi.subVectors(i,e),Hi.crossVectors(ki,Gi);let s,a=this.direction.dot(Hi);if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}zi.subVectors(this.origin,e);const o=s*this.direction.dot(Gi.crossVectors(zi,Gi));if(o<0)return null;const l=s*this.direction.dot(ki.cross(zi));if(l<0)return null;if(o+l>a)return null;const u=-s*zi.dot(Hi);return u<0?null:this.at(u/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class ji{constructor(e,t,i,n,r,s,a,o,l,u,c,h,d,p,m,f){ji.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,i,n,r,s,a,o,l,u,c,h,d,p,m,f)}set(e,t,i,n,r,s,a,o,l,u,c,h,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new ji).fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Xi.setFromMatrixColumn(e,0).length(),r=1/Xi.setFromMatrixColumn(e,1).length(),s=1/Xi.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),u=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){const e=s*u,i=s*c,n=a*u,r=a*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=i+n*l,t[5]=e-r*l,t[9]=-a*o,t[2]=r-e*l,t[6]=n+i*l,t[10]=s*o}else if("YXZ"===e.order){const e=o*u,i=o*c,n=l*u,r=l*c;t[0]=e+r*a,t[4]=n*a-i,t[8]=s*l,t[1]=s*c,t[5]=s*u,t[9]=-a,t[2]=i*a-n,t[6]=r+e*a,t[10]=s*o}else if("ZXY"===e.order){const e=o*u,i=o*c,n=l*u,r=l*c;t[0]=e-r*a,t[4]=-s*c,t[8]=n+i*a,t[1]=i+n*a,t[5]=s*u,t[9]=r-e*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){const e=s*u,i=s*c,n=a*u,r=a*c;t[0]=o*u,t[4]=n*l-i,t[8]=e*l+r,t[1]=o*c,t[5]=r*l+e,t[9]=i*l-n,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){const e=s*o,i=s*l,n=a*o,r=a*l;t[0]=o*u,t[4]=r-e*c,t[8]=n*c+i,t[1]=c,t[5]=s*u,t[9]=-a*u,t[2]=-l*u,t[6]=i*c+n,t[10]=e-r*c}else if("XZY"===e.order){const e=s*o,i=s*l,n=a*o,r=a*l;t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=e*c+r,t[5]=s*u,t[9]=i*c-n,t[2]=n*c-i,t[6]=a*u,t[10]=r*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(qi,e,Yi)}lookAt(e,t,i){const n=this.elements;return Qi.subVectors(e,t),0===Qi.lengthSq()&&(Qi.z=1),Qi.normalize(),Ki.crossVectors(i,Qi),0===Ki.lengthSq()&&(1===Math.abs(i.z)?Qi.x+=1e-4:Qi.z+=1e-4,Qi.normalize(),Ki.crossVectors(i,Qi)),Ki.normalize(),Zi.crossVectors(Qi,Ki),n[0]=Ki.x,n[4]=Zi.x,n[8]=Qi.x,n[1]=Ki.y,n[5]=Zi.y,n[9]=Qi.y,n[2]=Ki.z,n[6]=Zi.z,n[10]=Qi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],u=i[1],c=i[5],h=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],_=i[3],v=i[7],x=i[11],y=i[15],b=n[0],T=n[4],S=n[8],M=n[12],w=n[1],E=n[5],A=n[9],R=n[13],C=n[2],N=n[6],P=n[10],L=n[14],I=n[3],D=n[7],U=n[11],F=n[15];return r[0]=s*b+a*w+o*C+l*I,r[4]=s*T+a*E+o*N+l*D,r[8]=s*S+a*A+o*P+l*U,r[12]=s*M+a*R+o*L+l*F,r[1]=u*b+c*w+h*C+d*I,r[5]=u*T+c*E+h*N+d*D,r[9]=u*S+c*A+h*P+d*U,r[13]=u*M+c*R+h*L+d*F,r[2]=p*b+m*w+f*C+g*I,r[6]=p*T+m*E+f*N+g*D,r[10]=p*S+m*A+f*P+g*U,r[14]=p*M+m*R+f*L+g*F,r[3]=_*b+v*w+x*C+y*I,r[7]=_*T+v*E+x*N+y*D,r[11]=_*S+v*A+x*P+y*U,r[15]=_*M+v*R+x*L+y*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],a=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+r*o*c-n*l*c-r*a*h+i*l*h+n*a*d-i*o*d)+e[7]*(+t*o*d-t*l*h+r*s*h-n*s*d+n*l*u-r*o*u)+e[11]*(+t*l*c-t*a*d-r*s*c+i*s*d+r*a*u-i*l*u)+e[15]*(-n*a*u-t*o*c+t*a*h+n*s*c-i*s*h+i*o*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],_=c*f*l-m*h*l+m*o*d-a*f*d-c*o*g+a*h*g,v=p*h*l-u*f*l-p*o*d+s*f*d+u*o*g-s*h*g,x=u*m*l-p*c*l+p*a*d-s*m*d-u*a*g+s*c*g,y=p*c*o-u*m*o-p*a*h+s*m*h+u*a*f-s*c*f,b=t*_+i*v+n*x+r*y;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/b;return e[0]=_*T,e[1]=(m*h*r-c*f*r-m*n*d+i*f*d+c*n*g-i*h*g)*T,e[2]=(a*f*r-m*o*r+m*n*l-i*f*l-a*n*g+i*o*g)*T,e[3]=(c*o*r-a*h*r-c*n*l+i*h*l+a*n*d-i*o*d)*T,e[4]=v*T,e[5]=(u*f*r-p*h*r+p*n*d-t*f*d-u*n*g+t*h*g)*T,e[6]=(p*o*r-s*f*r-p*n*l+t*f*l+s*n*g-t*o*g)*T,e[7]=(s*h*r-u*o*r+u*n*l-t*h*l-s*n*d+t*o*d)*T,e[8]=x*T,e[9]=(p*c*r-u*m*r-p*i*d+t*m*d+u*i*g-t*c*g)*T,e[10]=(s*m*r-p*a*r+p*i*l-t*m*l-s*i*g+t*a*g)*T,e[11]=(u*a*r-s*c*r-u*i*l+t*c*l+s*i*d-t*a*d)*T,e[12]=y*T,e[13]=(u*m*n-p*c*n+p*i*h-t*m*h-u*i*f+t*c*f)*T,e[14]=(p*a*n-s*m*n-p*i*o+t*m*o+s*i*f-t*a*f)*T,e[15]=(s*c*n-u*a*n+u*i*o-t*c*o-s*i*h+t*a*h)*T,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,a=e.y,o=e.z,l=r*s,u=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,u*a+i,u*o-n*s,0,l*o-n*a,u*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,s){return this.set(1,i,r,0,e,1,s,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,s=t._y,a=t._z,o=t._w,l=r+r,u=s+s,c=a+a,h=r*l,d=r*u,p=r*c,m=s*u,f=s*c,g=a*c,_=o*l,v=o*u,x=o*c,y=i.x,b=i.y,T=i.z;return n[0]=(1-(m+g))*y,n[1]=(d+x)*y,n[2]=(p-v)*y,n[3]=0,n[4]=(d-x)*b,n[5]=(1-(h+g))*b,n[6]=(f+_)*b,n[7]=0,n[8]=(p+v)*T,n[9]=(f-_)*T,n[10]=(1-(h+m))*T,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=Xi.set(n[0],n[1],n[2]).length();const s=Xi.set(n[4],n[5],n[6]).length(),a=Xi.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],$i.copy(this);const o=1/r,l=1/s,u=1/a;return $i.elements[0]*=o,$i.elements[1]*=o,$i.elements[2]*=o,$i.elements[4]*=l,$i.elements[5]*=l,$i.elements[6]*=l,$i.elements[8]*=u,$i.elements[9]*=u,$i.elements[10]*=u,t.setFromRotationMatrix($i),i.x=r,i.y=s,i.z=a,this}makePerspective(e,t,i,n,r,s,a=2e3){const o=this.elements,l=2*r/(t-e),u=2*r/(i-n),c=(t+e)/(t-e),h=(i+n)/(i-n);let d,p;if(a===Rt)d=-(s+r)/(s-r),p=-2*s*r/(s-r);else{if(a!==Ct)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-r),p=-s*r/(s-r)}return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=u,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,n,r,s,a=2e3){const o=this.elements,l=1/(t-e),u=1/(i-n),c=1/(s-r),h=(t+e)*l,d=(i+n)*u;let p,m;if(a===Rt)p=(s+r)*c,m=-2*c;else{if(a!==Ct)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=r*c,m=-1*c}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Xi=new fi,$i=new ji,qi=new fi(0,0,0),Yi=new fi(1,1,1),Ki=new fi,Zi=new fi,Qi=new fi,Ji=new ji,en=new mi;class tn{constructor(e=0,t=0,i=0,n=tn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],u=n[9],c=n[2],h=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(Ft(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ft(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ft(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-Ft(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(Ft(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-Ft(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,d),this._y=0)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Ji.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ji,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return en.setFromEuler(this),this.setFromQuaternion(en,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}tn.DEFAULT_ORDER="XYZ";class nn{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return!!(this.mask&e.mask)}isEnabled(e){return!!(this.mask&1<<e)}}let rn=0;const sn=new fi,an=new mi,on=new ji,ln=new fi,un=new fi,cn=new fi,hn=new mi,dn=new fi(1,0,0),pn=new fi(0,1,0),mn=new fi(0,0,1),fn={type:"added"},gn={type:"removed"},_n={type:"childadded",child:null},vn={type:"childremoved",child:null};class xn extends Nt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:rn++}),this.uuid=Ut(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xn.DEFAULT_UP.clone();const e=new fi,t=new tn,i=new mi,n=new fi(1,1,1);t._onChange((function(){i.setFromEuler(t,!1)})),i._onChange((function(){t.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new ji},normalMatrix:{value:new Ht}}),this.matrix=new ji,this.matrixWorld=new ji,this.matrixAutoUpdate=xn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=xn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new nn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.multiply(an),this}rotateOnWorldAxis(e,t){return an.setFromAxisAngle(e,t),this.quaternion.premultiply(an),this}rotateX(e){return this.rotateOnAxis(dn,e)}rotateY(e){return this.rotateOnAxis(pn,e)}rotateZ(e){return this.rotateOnAxis(mn,e)}translateOnAxis(e,t){return sn.copy(e).applyQuaternion(this.quaternion),this.position.add(sn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(dn,e)}translateY(e){return this.translateOnAxis(pn,e)}translateZ(e){return this.translateOnAxis(mn,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(on.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?ln.copy(e):ln.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),un.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?on.lookAt(un,ln,this.up):on.lookAt(ln,un,this.up),this.quaternion.setFromRotationMatrix(on),n&&(on.extractRotation(n.matrixWorld),an.setFromRotationMatrix(on),this.quaternion.premultiply(an.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this||e&&e.isObject3D&&(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(fn),_n.child=e,this.dispatchEvent(_n),_n.child=null),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(gn),vn.child=e,this.dispatchEvent(vn),vn.child=null),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),on.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),on.multiply(e.parent.matrixWorld)),e.applyMatrix4(on),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(fn),_n.child=e,this.dispatchEvent(_n),_n.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let r=0,s=n.length;r<s;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(un,e,cn),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(un,hn,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++){t[i].updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){const e=this.children;for(let t=0,i=e.length;t<i;t++){e[t].updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.geometryInfo=this._geometryInfo.map((e=>({...e,boundingBox:e.boundingBox?{min:e.boundingBox.min.toArray(),max:e.boundingBox.max.toArray()}:void 0,boundingSphere:e.boundingSphere?{radius:e.boundingSphere.radius,center:e.boundingSphere.center.toArray()}:void 0}))),n.instanceInfo=this._instanceInfo.map((e=>({...e}))),n.availableInstanceIds=this._availableInstanceIds.slice(),n.availableGeometryIds=this._availableGeometryIds.slice(),n.nextIndexStart=this._nextIndexStart,n.nextVertexStart=this._nextVertexStart,n.geometryCount=this._geometryCount,n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.matricesTexture=this._matricesTexture.toJSON(e),n.indirectTexture=this._indirectTexture.toJSON(e),null!==this._colorsTexture&&(n.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(n.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const i=t.shapes;if(Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const n=i[t];r(e.shapes,n)}else r(e.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(r(e.materials,this.material[i]));n.material=t}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){const i=this.animations[t];n.animations.push(r(e.animations,i))}}if(t){const t=s(e.geometries),n=s(e.materials),r=s(e.textures),a=s(e.images),o=s(e.shapes),l=s(e.skeletons),u=s(e.animations),c=s(e.nodes);t.length>0&&(i.geometries=t),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),u.length>0&&(i.animations=u),c.length>0&&(i.nodes=c)}return i.object=n,i;function s(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){const t=e.children[i];this.add(t.clone())}return this}}xn.DEFAULT_UP=new fi(0,1,0),xn.DEFAULT_MATRIX_AUTO_UPDATE=!0,xn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const yn=new fi,bn=new fi,Tn=new fi,Sn=new fi,Mn=new fi,wn=new fi,En=new fi,An=new fi,Rn=new fi,Cn=new fi,Nn=new ui,Pn=new ui,Ln=new ui;class In{constructor(e=new fi,t=new fi,i=new fi){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),yn.subVectors(e,t),n.cross(yn);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){yn.subVectors(n,t),bn.subVectors(i,t),Tn.subVectors(e,t);const s=yn.dot(yn),a=yn.dot(bn),o=yn.dot(Tn),l=bn.dot(bn),u=bn.dot(Tn),c=s*l-a*a;if(0===c)return r.set(0,0,0),null;const h=1/c,d=(l*o-a*u)*h,p=(s*u-a*o)*h;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return null!==this.getBarycoord(e,t,i,n,Sn)&&(Sn.x>=0&&Sn.y>=0&&Sn.x+Sn.y<=1)}static getInterpolation(e,t,i,n,r,s,a,o){return null===this.getBarycoord(e,t,i,n,Sn)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,Sn.x),o.addScaledVector(s,Sn.y),o.addScaledVector(a,Sn.z),o)}static getInterpolatedAttribute(e,t,i,n,r,s){return Nn.setScalar(0),Pn.setScalar(0),Ln.setScalar(0),Nn.fromBufferAttribute(e,t),Pn.fromBufferAttribute(e,i),Ln.fromBufferAttribute(e,n),s.setScalar(0),s.addScaledVector(Nn,r.x),s.addScaledVector(Pn,r.y),s.addScaledVector(Ln,r.z),s}static isFrontFacing(e,t,i,n){return yn.subVectors(i,t),bn.subVectors(e,t),yn.cross(bn).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return yn.subVectors(this.c,this.b),bn.subVectors(this.a,this.b),.5*yn.cross(bn).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return In.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return In.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return In.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return In.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return In.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,r=this.c;let s,a;Mn.subVectors(n,i),wn.subVectors(r,i),An.subVectors(e,i);const o=Mn.dot(An),l=wn.dot(An);if(o<=0&&l<=0)return t.copy(i);Rn.subVectors(e,n);const u=Mn.dot(Rn),c=wn.dot(Rn);if(u>=0&&c<=u)return t.copy(n);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return s=o/(o-u),t.copy(i).addScaledVector(Mn,s);Cn.subVectors(e,r);const d=Mn.dot(Cn),p=wn.dot(Cn);if(p>=0&&d<=p)return t.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(i).addScaledVector(wn,a);const f=u*p-d*c;if(f<=0&&c-u>=0&&d-p>=0)return En.subVectors(r,n),a=(c-u)/(c-u+(d-p)),t.copy(n).addScaledVector(En,a);const g=1/(f+m+h);return s=m*g,a=h*g,t.copy(i).addScaledVector(Mn,s).addScaledVector(wn,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Dn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Un={h:0,s:0,l:0},Fn={h:0,s:0,l:0};function On(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}class Bn{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(void 0===t&&void 0===i){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=dt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Jt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=Jt.workingColorSpace){return this.r=e,this.g=t,this.b=i,Jt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=Jt.workingColorSpace){if(e=Ot(e,1),t=Ft(t,0,1),i=Ft(i,0,1),0===t)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=On(r,n,e+1/3),this.g=On(r,n,e),this.b=On(r,n,e-1/3)}return Jt.toWorkingColorSpace(this,n),this}setStyle(e,t=dt){function i(e){void 0!==e&&parseFloat(e)}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let e;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(e[4]),this.setRGB(Math.min(255,parseInt(e[1],10))/255,Math.min(255,parseInt(e[2],10))/255,Math.min(255,parseInt(e[3],10))/255,t);if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(e[4]),this.setRGB(Math.min(100,parseInt(e[1],10))/100,Math.min(100,parseInt(e[2],10))/100,Math.min(100,parseInt(e[3],10))/100,t);break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(e[4]),this.setHSL(parseFloat(e[1])/360,parseFloat(e[2])/100,parseFloat(e[3])/100,t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const e=n[1],i=e.length;if(3===i)return this.setRGB(parseInt(e.charAt(0),16)/15,parseInt(e.charAt(1),16)/15,parseInt(e.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(e,16),t)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=dt){const i=Dn[e.toLowerCase()];return void 0!==i&&this.setHex(i,t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ei(e.r),this.g=ei(e.g),this.b=ei(e.b),this}copyLinearToSRGB(e){return this.r=ti(e.r),this.g=ti(e.g),this.b=ti(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=dt){return Jt.fromWorkingColorSpace(Vn.copy(this),e),65536*Math.round(Ft(255*Vn.r,0,255))+256*Math.round(Ft(255*Vn.g,0,255))+Math.round(Ft(255*Vn.b,0,255))}getHexString(e=dt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Jt.workingColorSpace){Jt.fromWorkingColorSpace(Vn.copy(this),t);const i=Vn.r,n=Vn.g,r=Vn.b,s=Math.max(i,n,r),a=Math.min(i,n,r);let o,l;const u=(a+s)/2;if(a===s)o=0,l=0;else{const e=s-a;switch(l=u<=.5?e/(s+a):e/(2-s-a),s){case i:o=(n-r)/e+(n<r?6:0);break;case n:o=(r-i)/e+2;break;case r:o=(i-n)/e+4}o/=6}return e.h=o,e.s=l,e.l=u,e}getRGB(e,t=Jt.workingColorSpace){return Jt.fromWorkingColorSpace(Vn.copy(this),t),e.r=Vn.r,e.g=Vn.g,e.b=Vn.b,e}getStyle(e=dt){Jt.fromWorkingColorSpace(Vn.copy(this),e);const t=Vn.r,i=Vn.g,n=Vn.b;return e!==dt?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(e,t,i){return this.getHSL(Un),this.setHSL(Un.h+e,Un.s+t,Un.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Un),e.getHSL(Fn);const i=Bt(Un.h,Fn.h,t),n=Bt(Un.s,Fn.s,t),r=Bt(Un.l,Fn.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vn=new Bn;Bn.NAMES=Dn;let zn=0;class kn extends Nt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:zn++}),this.uuid=Ut(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=T,this.blendDst=S,this.blendEquation=f,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Bn(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=gt,this.stencilZFail=gt,this.stencilZPass=gt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const i=e[t];if(void 0===i)continue;const n=this[t];void 0!==n&&(n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(i.dispersion=this.dispersion),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(i.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapRotation&&(i.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),!0===this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=!0),this.blendSrc!==T&&(i.blendSrc=this.blendSrc),this.blendDst!==S&&(i.blendDst=this.blendDst),this.blendEquation!==f&&(i.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(i.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(i.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(i.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(i.depthFunc=this.depthFunc),!1===this.depthTest&&(i.depthTest=this.depthTest),!1===this.depthWrite&&(i.depthWrite=this.depthWrite),!1===this.colorWrite&&(i.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(i.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(i.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(i.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==gt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==gt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==gt&&(i.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(i.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaHash&&(i.alphaHash=!0),!0===this.alphaToCoverage&&(i.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=!0),!0===this.forceSinglePass&&(i.forceSinglePass=!0),!0===this.wireframe&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){const t=n(e.textures),r=n(e.images);t.length>0&&(i.textures=t),r.length>0&&(i.images=r)}return i}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(null!==t){const e=t.length;i=new Array(e);for(let n=0;n!==e;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class Gn extends kn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Bn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new tn,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Hn=Wn();function Wn(){const e=new ArrayBuffer(4),t=new Float32Array(e),i=new Uint32Array(e),n=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const e=l-127;e<-27?(n[l]=0,n[256|l]=32768,r[l]=24,r[256|l]=24):e<-14?(n[l]=1024>>-e-14,n[256|l]=1024>>-e-14|32768,r[l]=-e-1,r[256|l]=-e-1):e<=15?(n[l]=e+15<<10,n[256|l]=e+15<<10|32768,r[l]=13,r[256|l]=13):e<128?(n[l]=31744,n[256|l]=64512,r[l]=24,r[256|l]=24):(n[l]=31744,n[256|l]=64512,r[l]=13,r[256|l]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let e=l<<13,t=0;for(;!(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,s[l]=e|t}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)32!==l&&(o[l]=1024);return{floatView:t,uint32View:i,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function jn(e){Math.abs(e),e=Ft(e,-65504,65504),Hn.floatView[0]=e;const t=Hn.uint32View[0],i=t>>23&511;return Hn.baseTable[i]+((8388607&t)>>Hn.shiftTable[i])}function Xn(e){const t=e>>10;return Hn.uint32View[0]=Hn.mantissaTable[Hn.offsetTable[t]+(1023&e)]+Hn.exponentTable[t],Hn.floatView[0]}class $n{static toHalfFloat(e){return jn(e)}static fromHalfFloat(e){return Xn(e)}}const qn=new fi,Yn=new Gt;let Kn=0;class Zn{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:Kn++}),this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=i,this.usage=wt,this.updateRanges=[],this.gpuType=ue,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)Yn.fromBufferAttribute(this,t),Yn.applyMatrix3(e),this.setXY(t,Yn.x,Yn.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix3(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix4(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)qn.fromBufferAttribute(this,t),qn.applyNormalMatrix(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)qn.fromBufferAttribute(this,t),qn.transformDirection(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Vt(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=zt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Vt(t,this.array)),t}setX(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Vt(t,this.array)),t}setY(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Vt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Vt(t,this.array)),t}setW(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array),r=zt(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==wt&&(e.usage=this.usage),e}}class Qn extends Zn{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Jn extends Zn{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class er extends Zn{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=Xn(this.array[e*this.itemSize]);return this.normalized&&(t=Vt(t,this.array)),t}setX(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize]=jn(t),this}getY(e){let t=Xn(this.array[e*this.itemSize+1]);return this.normalized&&(t=Vt(t,this.array)),t}setY(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+1]=jn(t),this}getZ(e){let t=Xn(this.array[e*this.itemSize+2]);return this.normalized&&(t=Vt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+2]=jn(t),this}getW(e){let t=Xn(this.array[e*this.itemSize+3]);return this.normalized&&(t=Vt(t,this.array)),t}setW(e,t){return this.normalized&&(t=zt(t,this.array)),this.array[e*this.itemSize+3]=jn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array)),this.array[e+0]=jn(t),this.array[e+1]=jn(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array)),this.array[e+0]=jn(t),this.array[e+1]=jn(i),this.array[e+2]=jn(n),this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array),r=zt(r,this.array)),this.array[e+0]=jn(t),this.array[e+1]=jn(i),this.array[e+2]=jn(n),this.array[e+3]=jn(r),this}}class tr extends Zn{constructor(e,t,i){super(new Float32Array(e),t,i)}}let ir=0;const nr=new ji,rr=new xn,sr=new fi,ar=new vi,or=new vi,lr=new fi;class ur extends Nt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ir++}),this.uuid=Ut(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(jt(e)?Jn:Qn)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const t=(new Ht).getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return nr.makeRotationFromQuaternion(e),this.applyMatrix4(nr),this}rotateX(e){return nr.makeRotationX(e),this.applyMatrix4(nr),this}rotateY(e){return nr.makeRotationY(e),this.applyMatrix4(nr),this}rotateZ(e){return nr.makeRotationZ(e),this.applyMatrix4(nr),this}translate(e,t,i){return nr.makeTranslation(e,t,i),this.applyMatrix4(nr),this}scale(e,t,i){return nr.makeScale(e,t,i),this.applyMatrix4(nr),this}lookAt(e){return rr.lookAt(e),rr.updateMatrix(),this.applyMatrix4(rr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(sr).negate(),this.translate(sr.x,sr.y,sr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(void 0===t){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i];t.push(n.x,n.y,n.z||0)}this.setAttribute("position",new tr(t,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const i=e[n];t.setXYZ(n,i.x,i.y,i.z||0)}e.length,t.count,t.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new vi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)this.boundingBox.set(new fi(-1/0,-1/0,-1/0),new fi(1/0,1/0,1/0));else{if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];ar.setFromBufferAttribute(i),this.morphTargetsRelative?(lr.addVectors(this.boundingBox.min,ar.min),this.boundingBox.expandByPoint(lr),lr.addVectors(this.boundingBox.max,ar.max),this.boundingBox.expandByPoint(lr)):(this.boundingBox.expandByPoint(ar.min),this.boundingBox.expandByPoint(ar.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Fi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)this.boundingSphere.set(new fi,1/0);else if(e){const i=this.boundingSphere.center;if(ar.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const i=t[e];or.setFromBufferAttribute(i),this.morphTargetsRelative?(lr.addVectors(ar.min,or.min),ar.expandByPoint(lr),lr.addVectors(ar.max,or.max),ar.expandByPoint(lr)):(ar.expandByPoint(or.min),ar.expandByPoint(or.max))}ar.getCenter(i);let n=0;for(let t=0,r=e.count;t<r;t++)lr.fromBufferAttribute(e,t),n=Math.max(n,i.distanceToSquared(lr));if(t)for(let r=0,s=t.length;r<s;r++){const s=t[r],a=this.morphTargetsRelative;for(let t=0,r=s.count;t<r;t++)lr.fromBufferAttribute(s,t),a&&(sr.fromBufferAttribute(e,t),lr.add(sr)),n=Math.max(n,i.distanceToSquared(lr))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return;const i=t.position,n=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Zn(new Float32Array(4*i.count),4));const s=this.getAttribute("tangent"),a=[],o=[];for(let S=0;S<i.count;S++)a[S]=new fi,o[S]=new fi;const l=new fi,u=new fi,c=new fi,h=new Gt,d=new Gt,p=new Gt,m=new fi,f=new fi;function g(e,t,n){l.fromBufferAttribute(i,e),u.fromBufferAttribute(i,t),c.fromBufferAttribute(i,n),h.fromBufferAttribute(r,e),d.fromBufferAttribute(r,t),p.fromBufferAttribute(r,n),u.sub(l),c.sub(l),d.sub(h),p.sub(h);const s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(m.copy(u).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(s),f.copy(c).multiplyScalar(d.x).addScaledVector(u,-p.x).multiplyScalar(s),a[e].add(m),a[t].add(m),a[n].add(m),o[e].add(f),o[t].add(f),o[n].add(f))}let _=this.groups;0===_.length&&(_=[{start:0,count:e.count}]);for(let S=0,M=_.length;S<M;++S){const t=_[S],i=t.start;for(let n=i,r=i+t.count;n<r;n+=3)g(e.getX(n+0),e.getX(n+1),e.getX(n+2))}const v=new fi,x=new fi,y=new fi,b=new fi;function T(e){y.fromBufferAttribute(n,e),b.copy(y);const t=a[e];v.copy(t),v.sub(y.multiplyScalar(y.dot(t))).normalize(),x.crossVectors(b,t);const i=x.dot(o[e])<0?-1:1;s.setXYZW(e,v.x,v.y,v.z,i)}for(let S=0,M=_.length;S<M;++S){const t=_[S],i=t.start;for(let n=i,r=i+t.count;n<r;n+=3)T(e.getX(n+0)),T(e.getX(n+1)),T(e.getX(n+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new Zn(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);const n=new fi,r=new fi,s=new fi,a=new fi,o=new fi,l=new fi,u=new fi,c=new fi;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),m=e.getX(h+2);n.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),u.subVectors(s,r),c.subVectors(n,r),u.cross(c),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),a.add(u),o.add(u),l.add(u),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,h=t.count;e<h;e+=3)n.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),u.subVectors(s,r),c.subVectors(n,r),u.cross(c),i.setXYZ(e+0,u.x,u.y,u.z),i.setXYZ(e+1,u.x,u.y,u.z),i.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)lr.fromBufferAttribute(e,t),lr.normalize(),e.setXYZ(t,lr.x,lr.y,lr.z)}toNonIndexed(){function e(e,t){const i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n);let a=0,o=0;for(let l=0,u=t.length;l<u;l++){a=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*n;for(let e=0;e<n;e++)s[o++]=i[a++]}return new Zn(s,n,r)}if(null===this.index)return this;const t=new ur,i=this.index.array,n=this.attributes;for(const a in n){const r=e(n[a],i);t.setAttribute(a,r)}const r=this.morphAttributes;for(const a in r){const n=[],s=r[a];for(let t=0,r=s.length;t<r;t++){const r=e(s[t],i);n.push(r)}t.morphAttributes[a]=n}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const e=s[a];t.addGroup(e.start,e.count,e.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const o in i){const t=i[o];e.data.attributes[o]=t.toJSON(e.data)}const n={};let r=!1;for(const o in this.morphAttributes){const t=this.morphAttributes[o],i=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];i.push(r.toJSON(e.data))}i.length>0&&(n[o]=i,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;null!==i&&this.setIndex(i.clone());const n=e.attributes;for(const l in n){const e=n[l];this.setAttribute(l,e.clone(t))}const r=e.morphAttributes;for(const l in r){const e=[],i=r[l];for(let n=0,r=i.length;n<r;n++)e.push(i[n].clone(t));this.morphAttributes[l]=e}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let l=0,u=s.length;l<u;l++){const e=s[l];this.addGroup(e.start,e.count,e.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const cr=new ji,hr=new Wi,dr=new Fi,pr=new fi,mr=new fi,fr=new fi,gr=new fi,_r=new fi,vr=new fi,xr=new fi,yr=new fi;class br extends xn{constructor(e=new ur,t=new Gn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,s=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(r&&a){vr.set(0,0,0);for(let i=0,n=r.length;i<n;i++){const n=a[i],o=r[i];0!==n&&(_r.fromBufferAttribute(o,e),s?vr.addScaledVector(_r,n):vr.addScaledVector(_r.sub(t),n))}t.add(vr)}return t}raycast(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0!==n){if(null===i.boundingSphere&&i.computeBoundingSphere(),dr.copy(i.boundingSphere),dr.applyMatrix4(r),hr.copy(e.ray).recast(e.near),!1===dr.containsPoint(hr.origin)){if(null===hr.intersectSphere(dr,pr))return;if(hr.origin.distanceToSquared(pr)>(e.far-e.near)**2)return}cr.copy(r).invert(),hr.copy(e.ray).applyMatrix4(cr),null!==i.boundingBox&&!1===hr.intersectsBox(i.boundingBox)||this._computeIntersections(e,t,hr)}}_computeIntersections(e,t,i){let n;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,c=r.attributes.normal,h=r.groups,d=r.drawRange;if(null!==a)if(Array.isArray(s))for(let p=0,m=h.length;p<m;p++){const r=h[p],o=s[r.materialIndex];for(let s=Math.max(r.start,d.start),h=Math.min(a.count,Math.min(r.start+r.count,d.start+d.count));s<h;s+=3){n=Tr(this,o,e,i,l,u,c,a.getX(s),a.getX(s+1),a.getX(s+2)),n&&(n.faceIndex=Math.floor(s/3),n.face.materialIndex=r.materialIndex,t.push(n))}}else{for(let r=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);r<o;r+=3){n=Tr(this,s,e,i,l,u,c,a.getX(r),a.getX(r+1),a.getX(r+2)),n&&(n.faceIndex=Math.floor(r/3),t.push(n))}}else if(void 0!==o)if(Array.isArray(s))for(let p=0,m=h.length;p<m;p++){const r=h[p],a=s[r.materialIndex];for(let s=Math.max(r.start,d.start),h=Math.min(o.count,Math.min(r.start+r.count,d.start+d.count));s<h;s+=3){n=Tr(this,a,e,i,l,u,c,s,s+1,s+2),n&&(n.faceIndex=Math.floor(s/3),n.face.materialIndex=r.materialIndex,t.push(n))}}else{for(let r=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);r<a;r+=3){n=Tr(this,s,e,i,l,u,c,r,r+1,r+2),n&&(n.faceIndex=Math.floor(r/3),t.push(n))}}}}function Tr(e,t,i,n,r,s,a,o,l,u){e.getVertexPosition(o,mr),e.getVertexPosition(l,fr),e.getVertexPosition(u,gr);const c=function(e,t,i,n,r,s,a,o){let l;if(l=1===t.side?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,0===t.side,o),null===l)return null;yr.copy(o),yr.applyMatrix4(e.matrixWorld);const u=i.ray.origin.distanceTo(yr);return u<i.near||u>i.far?null:{distance:u,point:yr.clone(),object:e}}(e,t,i,n,mr,fr,gr,xr);if(c){const e=new fi;In.getBarycoord(xr,mr,fr,gr,e),r&&(c.uv=In.getInterpolatedAttribute(r,o,l,u,e,new Gt)),s&&(c.uv1=In.getInterpolatedAttribute(s,o,l,u,e,new Gt)),a&&(c.normal=In.getInterpolatedAttribute(a,o,l,u,e,new fi),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));const t={a:o,b:l,c:u,normal:new fi,materialIndex:0};In.getNormal(mr,fr,gr,t.normal),c.face=t,c.barycoord=e}return c}class Sr extends ur{constructor(e=1,t=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(e,t,i,n,r,s,p,m,f,g,_){const v=s/f,x=p/g,y=s/2,b=p/2,T=m/2,S=f+1,M=g+1;let w=0,E=0;const A=new fi;for(let a=0;a<M;a++){const s=a*x-b;for(let o=0;o<S;o++){const h=o*v-y;A[e]=h*n,A[t]=s*r,A[i]=T,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=m>0?1:-1,u.push(A.x,A.y,A.z),c.push(o/f),c.push(1-a/g),w+=1}}for(let a=0;a<g;a++)for(let e=0;e<f;e++){const t=h+e+S*a,i=h+e+S*(a+1),n=h+(e+1)+S*(a+1),r=h+(e+1)+S*a;o.push(t,i,r),o.push(i,n,r),E+=6}a.addGroup(d,E,_),d+=E,h+=w}p("z","y","x",-1,-1,i,t,e,s,r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new tr(l,3)),this.setAttribute("normal",new tr(u,3)),this.setAttribute("uv",new tr(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mr(e){const t={};for(const i in e){t[i]={};for(const n in e[i]){const r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?t[i][n]=null:t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function wr(e){const t={};for(let i=0;i<e.length;i++){const n=Mr(e[i]);for(const e in n)t[e]=n[e]}return t}function Er(e){const t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:Jt.workingColorSpace}const Ar={clone:Mr,merge:wr};class Rr extends kn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mr(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)!0===this.extensions[n]&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Cr extends xn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ji,this.projectionMatrix=new ji,this.projectionMatrixInverse=new ji,this.coordinateSystem=Rt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const Nr=new fi,Pr=new Gt,Lr=new Gt;class Ir extends Cr{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Dt*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*It*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Dt*Math.atan(Math.tan(.5*It*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Nr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Nr.x,Nr.y).multiplyScalar(-e/Nr.z),Nr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Nr.x,Nr.y).multiplyScalar(-e/Nr.z)}getViewSize(e,t){return this.getViewBounds(e,Pr,Lr),t.subVectors(Lr,Pr)}setViewOffset(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*It*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/e,t-=s.offsetY*i/a,n*=s.width/e,i*=s.height/a}const a=this.filmOffset;0!==a&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Dr=-90;class Ur extends xn{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Ir(Dr,1,e,t);n.layers=this.layers,this.add(n);const r=new Ir(Dr,1,e,t);r.layers=this.layers,this.add(r);const s=new Ir(Dr,1,e,t);s.layers=this.layers,this.add(s);const a=new Ir(Dr,1,e,t);a.layers=this.layers,this.add(a);const o=new Ir(Dr,1,e,t);o.layers=this.layers,this.add(o);const l=new Ir(Dr,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,r,s,a,o]=t;for(const l of t)this.remove(l);if(e===Rt)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(e!==Ct)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,s,a,o,l,u]=this.children,c=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,s),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,o),e.setRenderTarget(i,4,n),e.render(t,l),i.texture.generateMipmaps=m,e.setRenderTarget(i,5,n),e.render(t,u),e.setRenderTarget(c,h,d),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Fr extends li{constructor(e=[],t=301,i,n,r,s,a,o,l,u){super(e,t,i,n,r,s,a,o,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Or extends hi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new Fr(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:ee}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},n=new Sr(5,5,5),r=new Rr({name:"CubemapFromEquirect",uniforms:Mr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const s=new br(n,r),a=t.minFilter;t.minFilter===ie&&(t.minFilter=ee);return new Ur(1,10,this).update(e,s),t.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,i,n);e.setRenderTarget(r)}}let Br=class extends xn{constructor(){super(),this.isGroup=!0,this.type="Group"}};const Vr={type:"move"};class zr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Br,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Br,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new fi,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new fi),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Br,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new fi,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new fi),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){s=!0;for(const s of e.hand.values()){const e=t.getJointPose(s,i),n=this._getHandJoint(l,s);null!==e&&(n.matrix.fromArray(e.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.matrixWorldNeedsUpdate=!0,n.jointRadius=e.radius),n.visible=null!==e}const n=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=n.position.distanceTo(r.position),o=.02,u=.005;l.inputState.pinching&&a>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&a<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(n=t.getPose(e.targetRaySpace,i),null===n&&null!==r&&(n=r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Vr)))}return null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const i=new Br;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class kr{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Bn(e),this.near=t,this.far=i}clone(){return new kr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Gr extends xn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new tn,this.environmentIntensity=1,this.environmentRotation=new tn,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Hr{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=wt,this.updateRanges=[],this.version=0,this.uuid=Ut()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ut()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ut()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Wr=new fi;class jr{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Wr.fromBufferAttribute(this,t),Wr.applyMatrix4(e),this.setXYZ(t,Wr.x,Wr.y,Wr.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Wr.fromBufferAttribute(this,t),Wr.applyNormalMatrix(e),this.setXYZ(t,Wr.x,Wr.y,Wr.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Wr.fromBufferAttribute(this,t),Wr.transformDirection(e),this.setXYZ(t,Wr.x,Wr.y,Wr.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Vt(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=zt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=zt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=zt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=zt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=zt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Vt(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Vt(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Vt(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Vt(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=zt(t,this.array),i=zt(i,this.array),n=zt(n,this.array),r=zt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(void 0===e){const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new Zn(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new jr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Xr extends kn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Bn(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let $r;const qr=new fi,Yr=new fi,Kr=new fi,Zr=new Gt,Qr=new Gt,Jr=new ji,es=new fi,ts=new fi,is=new fi,ns=new Gt,rs=new Gt,ss=new Gt;class as extends xn{constructor(e=new Xr){if(super(),this.isSprite=!0,this.type="Sprite",void 0===$r){$r=new ur;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Hr(e,5);$r.setIndex([0,1,2,0,2,3]),$r.setAttribute("position",new jr(t,3,0,!1)),$r.setAttribute("uv",new jr(t,2,3,!1))}this.geometry=$r,this.material=e,this.center=new Gt(.5,.5)}raycast(e,t){e.camera,Yr.setFromMatrixScale(this.matrixWorld),Jr.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Kr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Yr.multiplyScalar(-Kr.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const s=this.center;os(es.set(-.5,-.5,0),Kr,s,Yr,n,r),os(ts.set(.5,-.5,0),Kr,s,Yr,n,r),os(is.set(.5,.5,0),Kr,s,Yr,n,r),ns.set(0,0),rs.set(1,0),ss.set(1,1);let a=e.ray.intersectTriangle(es,ts,is,!1,qr);if(null===a&&(os(ts.set(-.5,.5,0),Kr,s,Yr,n,r),rs.set(0,1),a=e.ray.intersectTriangle(es,is,ts,!1,qr),null===a))return;const o=e.ray.origin.distanceTo(qr);o<e.near||o>e.far||t.push({distance:o,point:qr.clone(),uv:In.getInterpolation(qr,es,ts,is,ns,rs,ss,new Gt),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function os(e,t,i,n,r,s){Zr.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(Qr.x=s*Zr.x-r*Zr.y,Qr.y=r*Zr.x+s*Zr.y):Qr.copy(Zr),e.copy(t),e.x+=Qr.x,e.y+=Qr.y,e.applyMatrix4(Jr)}const ls=new fi,us=new ui,cs=new ui,hs=new fi,ds=new ji,ps=new fi,ms=new Fi,fs=new ji,gs=new Wi;class _s extends br{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=G,this.bindMatrix=new ji,this.bindMatrixInverse=new ji,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;null===this.boundingBox&&(this.boundingBox=new vi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,ps),this.boundingBox.expandByPoint(ps)}computeBoundingSphere(){const e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Fi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,ps),this.boundingSphere.expandByPoint(ps)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;void 0!==i&&(null===this.boundingSphere&&this.computeBoundingSphere(),ms.copy(this.boundingSphere),ms.applyMatrix4(n),!1!==e.ray.intersectsSphere(ms)&&(fs.copy(n).invert(),gs.copy(e.ray).applyMatrix4(fs),null!==this.boundingBox&&!1===gs.intersectsBox(this.boundingBox)||this._computeIntersections(e,t,gs)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new ui,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===G?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode&&this.bindMatrixInverse.copy(this.bindMatrix).invert()}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;us.fromBufferAttribute(n.attributes.skinIndex,e),cs.fromBufferAttribute(n.attributes.skinWeight,e),ls.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const e=cs.getComponent(r);if(0!==e){const n=us.getComponent(r);ds.multiplyMatrices(i.bones[n].matrixWorld,i.boneInverses[n]),t.addScaledVector(hs.copy(ls).applyMatrix4(ds),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}class vs extends xn{constructor(){super(),this.isBone=!0,this.type="Bone"}}class xs extends li{constructor(e=null,t=1,i=1,n,r,s,a,o,l=1003,u=1003,c,h){super(null,s,a,o,l,u,n,r,c,h),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const ys=new ji,bs=new ji;class Ts{constructor(e=[],t=[]){this.uuid=Ut(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new ji)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new ji;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const n=e[r]?e[r].matrixWorld:bs;ys.multiplyMatrices(n,t[r]),ys.toArray(i,16*r)}null!==n&&(n.needsUpdate=!0)}clone(){return new Ts(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new xs(t,e,e,_e,ue);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let n=t[e.bones[i]];void 0===n&&(n=new vs),this.bones.push(n),this.boneInverses.push((new ji).fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){const r=t[n];e.bones.push(r.uuid);const s=i[n];e.boneInverses.push(s.toArray())}return e}}class Ss extends Zn{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ms=new ji,ws=new ji,Es=[],As=new vi,Rs=new ji,Cs=new br,Ns=new Fi;class Ps extends br{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ss(new Float32Array(16*i),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,Rs)}computeBoundingBox(){const e=this.geometry,t=this.count;null===this.boundingBox&&(this.boundingBox=new vi),null===e.boundingBox&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Ms),As.copy(e.boundingBox).applyMatrix4(Ms),this.boundingBox.union(As)}computeBoundingSphere(){const e=this.geometry,t=this.count;null===this.boundingSphere&&(this.boundingSphere=new Fi),null===e.boundingSphere&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Ms),Ns.copy(e.boundingSphere).applyMatrix4(Ms),this.boundingSphere.union(Ns)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.morphTexture&&(this.morphTexture=e.morphTexture.clone()),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,r=e*(i.length+1)+1;for(let s=0;s<i.length;s++)i[s]=n[r+s]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Cs.geometry=this.geometry,Cs.material=this.material,void 0!==Cs.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),Ns.copy(this.boundingSphere),Ns.applyMatrix4(i),!1!==e.ray.intersectsSphere(Ns)))for(let r=0;r<n;r++){this.getMatrixAt(r,Ms),ws.multiplyMatrices(i,Ms),Cs.matrixWorld=ws,Cs.raycast(e,Es);for(let e=0,i=Es.length;e<i;e++){const i=Es[e];i.instanceId=r,i.object=this,t.push(i)}Es.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Ss(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;null===this.morphTexture&&(this.morphTexture=new xs(new Float32Array(n*this.count),n,this.count,ye,ue));const r=this.morphTexture.source.data.data;let s=0;for(let l=0;l<i.length;l++)s+=i[l];const a=this.geometry.morphTargetsRelative?1:1-s,o=n*e;r[o]=a,r.set(i,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Ls=new fi,Is=new fi,Ds=new Ht;class Us{constructor(e=new fi(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Ls.subVectors(i,t).cross(Is.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Ls),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Ds.getNormalMatrix(e),n=this.coplanarPoint(Ls).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Fs=new Fi,Os=new fi;class Bs{constructor(e=new Us,t=new Us,i=new Us,n=new Us,r=new Us,s=new Us){this.planes=[e,t,i,n,r,s]}set(e,t,i,n,r,s){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=2e3){const i=this.planes,n=e.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],u=n[5],c=n[6],h=n[7],d=n[8],p=n[9],m=n[10],f=n[11],g=n[12],_=n[13],v=n[14],x=n[15];if(i[0].setComponents(o-r,h-l,f-d,x-g).normalize(),i[1].setComponents(o+r,h+l,f+d,x+g).normalize(),i[2].setComponents(o+s,h+u,f+p,x+_).normalize(),i[3].setComponents(o-s,h-u,f-p,x-_).normalize(),i[4].setComponents(o-a,h-c,f-m,x-v).normalize(),t===Rt)i[5].setComponents(o+a,h+c,f+m,x+v).normalize();else{if(t!==Ct)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);i[5].setComponents(a,c,m,v).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),Fs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),Fs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Fs)}intersectsSprite(e){return Fs.center.set(0,0,0),Fs.radius=.7071067811865476,Fs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Fs)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++){if(t[r].distanceToPoint(i)<n)return!1}return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Os.x=n.normal.x>0?e.max.x:e.min.x,Os.y=n.normal.y>0?e.max.y:e.min.y,Os.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Os)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}const Vs=new ji,zs=new Bs;class ks{constructor(){this.coordinateSystem=Rt}intersectsObject(e,t){if(!t.isArrayCamera||0===t.cameras.length)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),zs.setFromProjectionMatrix(Vs,this.coordinateSystem),zs.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),zs.setFromProjectionMatrix(Vs,this.coordinateSystem),zs.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),zs.setFromProjectionMatrix(Vs,this.coordinateSystem),zs.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),zs.setFromProjectionMatrix(Vs,this.coordinateSystem),zs.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||0===t.cameras.length)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),zs.setFromProjectionMatrix(Vs,this.coordinateSystem),zs.containsPoint(e))return!0}return!1}clone(){return new ks}}class Gs extends kn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Bn(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Hs=new fi,Ws=new fi,js=new ji,Xs=new Wi,$s=new Fi,qs=new fi,Ys=new fi;class Ks extends xn{constructor(e=new ur,t=new Gs){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,i=[0];for(let e=1,n=t.count;e<n;e++)Hs.fromBufferAttribute(t,e-1),Ws.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=Hs.distanceTo(Ws);e.setAttribute("lineDistance",new tr(i,1))}return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),$s.copy(i.boundingSphere),$s.applyMatrix4(n),$s.radius+=r,!1===e.ray.intersectsSphere($s))return;js.copy(n).invert(),Xs.copy(e.ray).applyMatrix4(js);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=this.isLineSegments?2:1,u=i.index,c=i.attributes.position;if(null!==u){const i=Math.max(0,s.start),n=Math.min(u.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=u.getX(r),n=u.getX(r+1),s=Zs(this,e,Xs,o,i,n,r);s&&t.push(s)}if(this.isLineLoop){const r=u.getX(n-1),s=u.getX(i),a=Zs(this,e,Xs,o,r,s,n-1);a&&t.push(a)}}else{const i=Math.max(0,s.start),n=Math.min(c.count,s.start+s.count);for(let r=i,s=n-1;r<s;r+=l){const i=Zs(this,e,Xs,o,r,r+1,r);i&&t.push(i)}if(this.isLineLoop){const r=Zs(this,e,Xs,o,n-1,i,n-1);r&&t.push(r)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function Zs(e,t,i,n,r,s,a){const o=e.geometry.attributes.position;Hs.fromBufferAttribute(o,r),Ws.fromBufferAttribute(o,s);if(i.distanceSqToSegment(Hs,Ws,qs,Ys)>n)return;qs.applyMatrix4(e.matrixWorld);const l=t.ray.origin.distanceTo(qs);return l<t.near||l>t.far?void 0:{distance:l,point:Ys.clone().applyMatrix4(e.matrixWorld),index:a,face:null,faceIndex:null,barycoord:null,object:e}}const Qs=new fi,Js=new fi;class ea extends Ks{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,i=[];for(let e=0,n=t.count;e<n;e+=2)Qs.fromBufferAttribute(t,e),Js.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+Qs.distanceTo(Js);e.setAttribute("lineDistance",new tr(i,1))}return this}}class ta extends Ks{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class ia extends kn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Bn(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const na=new ji,ra=new Wi,sa=new Fi,aa=new fi;class oa extends xn{constructor(e=new ur,t=new ia){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),sa.copy(i.boundingSphere),sa.applyMatrix4(n),sa.radius+=r,!1===e.ray.intersectsSphere(sa))return;na.copy(n).invert(),ra.copy(e.ray).applyMatrix4(na);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=i.index,u=i.attributes.position;if(null!==l){for(let i=Math.max(0,s.start),r=Math.min(l.count,s.start+s.count);i<r;i++){const r=l.getX(i);aa.fromBufferAttribute(u,r),la(aa,r,o,n,e,t,this)}}else{for(let i=Math.max(0,s.start),r=Math.min(u.count,s.start+s.count);i<r;i++)aa.fromBufferAttribute(u,i),la(aa,i,o,n,e,t,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){const t=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function la(e,t,i,n,r,s,a){const o=ra.distanceSqToPoint(e);if(o<i){const i=new fi;ra.closestPointToPoint(e,i),i.applyMatrix4(n);const l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:i,index:t,face:null,faceIndex:null,barycoord:null,object:a})}}class ua extends li{constructor(e,t,i,n,r=1006,s=1006,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isVideoTexture=!0,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){u.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class ca extends li{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Z,this.minFilter=Z,this.generateMipmaps=!1,this.needsUpdate=!0}}class ha extends li{constructor(e,t,i,n,r,s,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class da extends li{constructor(e,t,i=1014,n,r,s,a=1003,o=1003,l,u=1026){if(u!==ve&&u!==xe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,r,s,a,o,u,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new si(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class pa extends da{constructor(e=1,t=1,i=1){super(e,t),this.isDepthArrayTexture=!0,this.image={width:e,height:t,depth:i},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ma extends ur{constructor(e=1,t=1,i=4,n=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:n,heightSegments:r},t=Math.max(0,t),i=Math.max(1,Math.floor(i)),n=Math.max(3,Math.floor(n)),r=Math.max(1,Math.floor(r));const s=[],a=[],o=[],l=[],u=t/2,c=Math.PI/2*e,h=t,d=2*c+h,p=2*i+r,m=n+1,f=new fi,g=new fi;for(let _=0;_<=p;_++){let v=0,x=0,y=0,b=0;if(_<=i){const t=_/i,n=t*Math.PI/2;x=-u-e*Math.cos(n),y=e*Math.sin(n),b=-e*Math.cos(n),v=t*c}else if(_<=i+r){const n=(_-i)/r;x=n*t-u,y=e,b=0,v=c+n*h}else{const t=(_-i-r)/i,n=t*Math.PI/2;x=u+e*Math.sin(n),y=e*Math.cos(n),b=e*Math.sin(n),v=c+h+t*c}const T=Math.max(0,Math.min(1,v/d));let S=0;0===_?S=.5/n:_===p&&(S=-.5/n);for(let e=0;e<=n;e++){const t=e/n,i=t*Math.PI*2,r=Math.sin(i),s=Math.cos(i);g.x=-y*s,g.y=x,g.z=y*r,a.push(g.x,g.y,g.z),f.set(-y*s,b,y*r),f.normalize(),o.push(f.x,f.y,f.z),l.push(t+S,T)}if(_>0){const e=(_-1)*m;for(let t=0;t<n;t++){const i=e+t,n=e+t+1,r=_*m+t,a=_*m+t+1;s.push(i,n,r),s.push(n,a,r)}}}this.setIndex(s),this.setAttribute("position",new tr(a,3)),this.setAttribute("normal",new tr(o,3)),this.setAttribute("uv",new tr(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ma(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class fa extends ur{constructor(e=1,t=32,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const r=[],s=[],a=[],o=[],l=new fi,u=new Gt;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let c=0,h=3;c<=t;c++,h+=3){const r=i+c/t*n;l.x=e*Math.cos(r),l.y=e*Math.sin(r),s.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(s[h]/e+1)/2,u.y=(s[h+1]/e+1)/2,o.push(u.x,u.y)}for(let c=1;c<=t;c++)r.push(c,c+1,0);this.setIndex(r),this.setAttribute("position",new tr(s,3)),this.setAttribute("normal",new tr(a,3)),this.setAttribute("uv",new tr(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fa(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ga extends ur{constructor(e=1,t=1,i=1,n=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;n=Math.floor(n),r=Math.floor(r);const u=[],c=[],h=[],d=[];let p=0;const m=[],f=i/2;let g=0;function _(i){const r=p,s=new Gt,m=new fi;let _=0;const v=!0===i?e:t,x=!0===i?1:-1;for(let e=1;e<=n;e++)c.push(0,f*x,0),h.push(0,x,0),d.push(.5,.5),p++;const y=p;for(let e=0;e<=n;e++){const t=e/n*o+a,i=Math.cos(t),r=Math.sin(t);m.x=v*r,m.y=f*x,m.z=v*i,c.push(m.x,m.y,m.z),h.push(0,x,0),s.x=.5*i+.5,s.y=.5*r*x+.5,d.push(s.x,s.y),p++}for(let e=0;e<n;e++){const t=r+e,n=y+e;!0===i?u.push(n,n+1,t):u.push(n+1,n,t),_+=3}l.addGroup(g,_,!0===i?1:2),g+=_}!function(){const s=new fi,_=new fi;let v=0;const x=(t-e)/i;for(let l=0;l<=r;l++){const u=[],g=l/r,v=g*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,r=t*o+a,l=Math.sin(r),m=Math.cos(r);_.x=v*l,_.y=-g*i+f,_.z=v*m,c.push(_.x,_.y,_.z),s.set(l,x,m).normalize(),h.push(s.x,s.y,s.z),d.push(t,1-g),u.push(p++)}m.push(u)}for(let i=0;i<n;i++)for(let n=0;n<r;n++){const s=m[n][i],a=m[n+1][i],o=m[n+1][i+1],l=m[n][i+1];(e>0||0!==n)&&(u.push(s,a,l),v+=3),(t>0||n!==r-1)&&(u.push(a,o,l),v+=3)}l.addGroup(g,v,0),g+=v}(),!1===s&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new tr(c,3)),this.setAttribute("normal",new tr(h,3)),this.setAttribute("uv",new tr(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ga(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class _a extends ga{constructor(e=1,t=1,i=32,n=1,r=!1,s=0,a=2*Math.PI){super(0,e,t,i,n,r,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new _a(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class va extends ur{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const r=[],s=[];function a(e,t,i,n){const r=n+1,s=[];for(let a=0;a<=r;a++){s[a]=[];const n=e.clone().lerp(i,a/r),o=t.clone().lerp(i,a/r),l=r-a;for(let e=0;e<=l;e++)s[a][e]=0===e&&a===r?n:n.clone().lerp(o,e/l)}for(let a=0;a<r;a++)for(let e=0;e<2*(r-a)-1;e++){const t=Math.floor(e/2);e%2==0?(o(s[a][t+1]),o(s[a+1][t]),o(s[a][t])):(o(s[a][t+1]),o(s[a+1][t+1]),o(s[a+1][t]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,i){const n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function u(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function c(e){return Math.atan2(e.z,-e.x)}!function(e){const i=new fi,n=new fi,r=new fi;for(let s=0;s<t.length;s+=3)l(t[s+0],i),l(t[s+1],n),l(t[s+2],r),a(i,n,r,e)}(n),function(e){const t=new fi;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){const e=new fi;for(let i=0;i<r.length;i+=3){e.x=r[i+0],e.y=r[i+1],e.z=r[i+2];const n=c(e)/2/Math.PI+.5,a=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);s.push(n,1-a)}var t;(function(){const e=new fi,t=new fi,i=new fi,n=new fi,a=new Gt,o=new Gt,l=new Gt;for(let h=0,d=0;h<r.length;h+=9,d+=6){e.set(r[h+0],r[h+1],r[h+2]),t.set(r[h+3],r[h+4],r[h+5]),i.set(r[h+6],r[h+7],r[h+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),n.copy(e).add(t).add(i).divideScalar(3);const p=c(n);u(a,d+0,e,p),u(o,d+2,t,p),u(l,d+4,i,p)}})(),function(){for(let e=0;e<s.length;e+=6){const t=s[e+0],i=s[e+2],n=s[e+4],r=Math.max(t,i,n),a=Math.min(t,i,n);r>.9&&a<.1&&(t<.2&&(s[e+0]+=1),i<.2&&(s[e+2]+=1),n<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new tr(r,3)),this.setAttribute("normal",new tr(r.slice(),3)),this.setAttribute("uv",new tr(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new va(e.vertices,e.indices,e.radius,e.details)}}const xa=new fi,ya=new fi,ba=new fi,Ta=new In;class Sa extends ur{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const i=4,n=Math.pow(10,i),r=Math.cos(It*t),s=e.getIndex(),a=e.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],u=["a","b","c"],c=new Array(3),h={},d=[];for(let e=0;e<o;e+=3){s?(l[0]=s.getX(e),l[1]=s.getX(e+1),l[2]=s.getX(e+2)):(l[0]=e,l[1]=e+1,l[2]=e+2);const{a:t,b:i,c:o}=Ta;if(t.fromBufferAttribute(a,l[0]),i.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Ta.getNormal(ba),c[0]=`${Math.round(t.x*n)},${Math.round(t.y*n)},${Math.round(t.z*n)}`,c[1]=`${Math.round(i.x*n)},${Math.round(i.y*n)},${Math.round(i.z*n)}`,c[2]=`${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let e=0;e<3;e++){const t=(e+1)%3,i=c[e],n=c[t],s=Ta[u[e]],a=Ta[u[t]],o=`${i}_${n}`,p=`${n}_${i}`;p in h&&h[p]?(ba.dot(h[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),h[p]=null):o in h||(h[o]={index0:l[e],index1:l[t],normal:ba.clone()})}}for(const e in h)if(h[e]){const{index0:t,index1:i}=h[e];xa.fromBufferAttribute(a,t),ya.fromBufferAttribute(a,i),d.push(xa.x,xa.y,xa.z),d.push(ya.x,ya.y,ya.z)}this.setAttribute("position",new tr(d,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ma{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)i=this.getPoint(s/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let n=0;const r=i.length;let s;s=t||e*i[r-1];let a,o=0,l=r-1;for(;o<=l;)if(n=Math.floor(o+(l-o)/2),a=i[n]-s,a<0)o=n+1;else{if(!(a>0)){l=n;break}l=n-1}if(n=l,i[n]===s)return n/(r-1);const u=i[n];return(n+(s-u)/(i[n+1]-u))/(r-1)}getTangent(e,t){const i=1e-4;let n=e-i,r=e+i;n<0&&(n=0),r>1&&(r=1);const s=this.getPoint(n),a=this.getPoint(r),o=t||(s.isVector2?new Gt:new fi);return o.copy(a).sub(s).normalize(),o}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new fi,n=[],r=[],s=[],a=new fi,o=new ji;for(let d=0;d<=e;d++){const t=d/e;n[d]=this.getTangentAt(t,new fi)}r[0]=new fi,s[0]=new fi;let l=Number.MAX_VALUE;const u=Math.abs(n[0].x),c=Math.abs(n[0].y),h=Math.abs(n[0].z);u<=l&&(l=u,i.set(1,0,0)),c<=l&&(l=c,i.set(0,1,0)),h<=l&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let d=1;d<=e;d++){if(r[d]=r[d-1].clone(),s[d]=s[d-1].clone(),a.crossVectors(n[d-1],n[d]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(Ft(n[d-1].dot(n[d]),-1,1));r[d].applyMatrix4(o.makeRotationAxis(a,e))}s[d].crossVectors(n[d],r[d])}if(!0===t){let t=Math.acos(Ft(r[0].dot(r[e]),-1,1));t/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(t=-t);for(let i=1;i<=e;i++)r[i].applyMatrix4(o.makeRotationAxis(n[i],t*i)),s[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class wa extends Ma{constructor(e=0,t=0,i=1,n=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(e,t=new Gt){const i=t,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);const a=this.aStartAngle+e*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=o-this.aX,n=l-this.aY;o=i*e-n*t+this.aX,l=i*t+n*e+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function Ea(){let e=0,t=0,i=0,n=0;function r(r,s,a,o){e=r,t=a,i=-3*r+3*s-2*a-o,n=2*r-2*s+a+o}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,a,o){let l=(t-e)/s-(i-e)/(s+a)+(i-t)/a,u=(i-t)/a-(n-t)/(a+o)+(n-i)/o;l*=a,u*=a,r(t,i,l,u)},calc:function(r){const s=r*r;return e+t*r+i*s+n*(s*r)}}}const Aa=new fi,Ra=new Ea,Ca=new Ea,Na=new Ea;class Pa extends Ma{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new fi){const i=t,n=this.points,r=n.length,s=(r-(this.closed?0:1))*e;let a,o,l=Math.floor(s),u=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===u&&l===r-1&&(l=r-2,u=1),this.closed||l>0?a=n[(l-1)%r]:(Aa.subVectors(n[0],n[1]).add(n[0]),a=Aa);const c=n[l%r],h=n[(l+1)%r];if(this.closed||l+2<r?o=n[(l+2)%r]:(Aa.subVectors(n[r-1],n[r-2]).add(n[r-1]),o=Aa),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(c),e),i=Math.pow(c.distanceToSquared(h),e),n=Math.pow(h.distanceToSquared(o),e);i<1e-4&&(i=1),t<1e-4&&(t=i),n<1e-4&&(n=i),Ra.initNonuniformCatmullRom(a.x,c.x,h.x,o.x,t,i,n),Ca.initNonuniformCatmullRom(a.y,c.y,h.y,o.y,t,i,n),Na.initNonuniformCatmullRom(a.z,c.z,h.z,o.z,t,i,n)}else"catmullrom"===this.curveType&&(Ra.initCatmullRom(a.x,c.x,h.x,o.x,this.tension),Ca.initCatmullRom(a.y,c.y,h.y,o.y,this.tension),Na.initCatmullRom(a.z,c.z,h.z,o.z,this.tension));return i.set(Ra.calc(u),Ca.calc(u),Na.calc(u)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new fi).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function La(e,t,i,n,r){const s=.5*(n-t),a=.5*(r-i),o=e*e;return(2*i-2*n+s+a)*(e*o)+(-3*i+3*n-2*s-a)*o+s*e+i}function Ia(e,t,i,n){return function(e,t){const i=1-e;return i*i*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,i)+function(e,t){return e*e*t}(e,n)}function Da(e,t,i,n,r){return function(e,t){const i=1-e;return i*i*i*t}(e,t)+function(e,t){const i=1-e;return 3*i*i*e*t}(e,i)+function(e,t){return 3*(1-e)*e*e*t}(e,n)+function(e,t){return e*e*e*t}(e,r)}class Ua extends Ma{constructor(e=new Gt,t=new Gt,i=new Gt,n=new Gt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Gt){const i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(Da(e,n.x,r.x,s.x,a.x),Da(e,n.y,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Fa extends Ma{constructor(e=new Gt,t=new Gt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Gt){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Gt){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Oa extends Ma{constructor(e=new fi,t=new fi){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new fi){const i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fi){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ba extends Ma{constructor(e=new Gt,t=new Gt,i=new Gt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Gt){const i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(Ia(e,n.x,r.x,s.x),Ia(e,n.y,r.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Va extends Ma{constructor(e=new fi,t=new fi,i=new fi){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new fi){const i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(Ia(e,n.x,r.x,s.x),Ia(e,n.y,r.y,s.y),Ia(e,n.z,r.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class za extends Ma{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Gt){const i=t,n=this.points,r=(n.length-1)*e,s=Math.floor(r),a=r-s,o=n[0===s?s:s-1],l=n[s],u=n[s>n.length-2?n.length-1:s+1],c=n[s>n.length-3?n.length-1:s+2];return i.set(La(a,o.x,l.x,u.x,c.x),La(a,o.y,l.y,u.y,c.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new Gt).fromArray(i))}return this}}var ka=Object.freeze({__proto__:null,ArcCurve:class extends wa{constructor(e,t,i,n,r,s){super(e,t,i,i,n,r,s),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:Pa,CubicBezierCurve:Ua,CubicBezierCurve3:class extends Ma{constructor(e=new fi,t=new fi,i=new fi,n=new fi){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new fi){const i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(Da(e,n.x,r.x,s.x,a.x),Da(e,n.y,r.y,s.y,a.y),Da(e,n.z,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},EllipseCurve:wa,LineCurve:Fa,LineCurve3:Oa,QuadraticBezierCurve:Ba,QuadraticBezierCurve3:Va,SplineCurve:za});class Ga extends Ma{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ka[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=i){const e=n[r]-i,s=this.curves[r],a=s.getLength(),o=0===a?0:1-e/a;return s.getPointAt(o,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const s=r[n],a=s.isEllipseCurve?2*e:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,o=s.getPoints(a);for(let e=0;e<o.length;e++){const n=o[e];i&&i.equals(n)||(t.push(n),i=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push((new ka[i.type]).fromJSON(i))}return this}}class Ha extends Ga{constructor(e){super(),this.type="Path",this.currentPoint=new Gt,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Fa(this.currentPoint.clone(),new Gt(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const r=new Ba(this.currentPoint.clone(),new Gt(e,t),new Gt(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,s){const a=new Ua(this.currentPoint.clone(),new Gt(e,t),new Gt(i,n),new Gt(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new za(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,i,n,r,s),this}absarc(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this}ellipse(e,t,i,n,r,s,a,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,i,n,r,s,a,o),this}absellipse(e,t,i,n,r,s,a,o){const l=new wa(e,t,i,n,r,s,a,o);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Wa extends Ha{constructor(e){super(e),this.uuid=Ut(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push((new Ha).fromJSON(i))}return this}}function ja(e,t,i=2){const n=t&&t.length,r=n?t[0]*i:e.length;let s=Xa(e,0,r,i,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,u;if(n&&(s=function(e,t,i,n){const r=[];for(let s=0,a=t.length;s<a;s++){const i=Xa(e,t[s]*n,s<a-1?t[s+1]*n:e.length,n,!1);i===i.next&&(i.steiner=!0),r.push(no(i))}r.sort(Ja);for(let s=0;s<r.length;s++)i=eo(r[s],i);return i}(e,t,s,i)),e.length>80*i){o=1/0,l=1/0;let t=-1/0,n=-1/0;for(let s=i;s<r;s+=i){const i=e[s],r=e[s+1];i<o&&(o=i),r<l&&(l=r),i>t&&(t=i),r>n&&(n=r)}u=Math.max(t-o,n-l),u=0!==u?32767/u:0}return qa(s,a,i,o,l,u,0),a}function Xa(e,t,i,n,r){let s;if(r===function(e,t,i,n){let r=0;for(let s=t,a=i-n;s<i;s+=n)r+=(e[a]-e[s])*(e[s+1]+e[a+1]),a=s;return r}(e,t,i,n)>0)for(let a=t;a<i;a+=n)s=fo(a/n|0,e[a],e[a+1],s);else for(let a=i-n;a>=t;a-=n)s=fo(a/n|0,e[a],e[a+1],s);return s&&lo(s,s.next)&&(go(s),s=s.next),s}function $a(e,t){if(!e)return e;t||(t=e);let i,n=e;do{if(i=!1,n.steiner||!lo(n,n.next)&&0!==oo(n.prev,n,n.next))n=n.next;else{if(go(n),n=t=n.prev,n===n.next)break;i=!0}}while(i||n!==t);return t}function qa(e,t,i,n,r,s,a){if(!e)return;!a&&s&&function(e,t,i,n){let r=e;do{0===r.z&&(r.z=io(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i=1;do{let n,r=e;e=null;let s=null;for(t=0;r;){t++;let a=r,o=0;for(let e=0;e<i&&(o++,a=a.nextZ,a);e++);let l=i;for(;o>0||l>0&&a;)0!==o&&(0===l||!a||r.z<=a.z)?(n=r,r=r.nextZ,o--):(n=a,a=a.nextZ,l--),s?s.nextZ=n:e=n,n.prevZ=s,s=n;r=a}s.nextZ=null,i*=2}while(t>1)}(r)}(e,n,r,s);let o=e;for(;e.prev!==e.next;){const l=e.prev,u=e.next;if(s?Ka(e,n,r,s):Ya(e))t.push(l.i,e.i,u.i),go(e),e=u.next,o=u.next;else if((e=u)===o){a?1===a?qa(e=Za($a(e),t),t,i,n,r,s,2):2===a&&Qa(e,t,i,n,r,s):qa($a(e),t,i,n,r,s,1);break}}}function Ya(e){const t=e.prev,i=e,n=e.next;if(oo(t,i,n)>=0)return!1;const r=t.x,s=i.x,a=n.x,o=t.y,l=i.y,u=n.y,c=Math.min(r,s,a),h=Math.min(o,l,u),d=Math.max(r,s,a),p=Math.max(o,l,u);let m=n.next;for(;m!==t;){if(m.x>=c&&m.x<=d&&m.y>=h&&m.y<=p&&so(r,o,s,l,a,u,m.x,m.y)&&oo(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Ka(e,t,i,n){const r=e.prev,s=e,a=e.next;if(oo(r,s,a)>=0)return!1;const o=r.x,l=s.x,u=a.x,c=r.y,h=s.y,d=a.y,p=Math.min(o,l,u),m=Math.min(c,h,d),f=Math.max(o,l,u),g=Math.max(c,h,d),_=io(p,m,t,i,n),v=io(f,g,t,i,n);let x=e.prevZ,y=e.nextZ;for(;x&&x.z>=_&&y&&y.z<=v;){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==a&&so(o,c,l,h,u,d,x.x,x.y)&&oo(x.prev,x,x.next)>=0)return!1;if(x=x.prevZ,y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==a&&so(o,c,l,h,u,d,y.x,y.y)&&oo(y.prev,y,y.next)>=0)return!1;y=y.nextZ}for(;x&&x.z>=_;){if(x.x>=p&&x.x<=f&&x.y>=m&&x.y<=g&&x!==r&&x!==a&&so(o,c,l,h,u,d,x.x,x.y)&&oo(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;y&&y.z<=v;){if(y.x>=p&&y.x<=f&&y.y>=m&&y.y<=g&&y!==r&&y!==a&&so(o,c,l,h,u,d,y.x,y.y)&&oo(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function Za(e,t){let i=e;do{const n=i.prev,r=i.next.next;!lo(n,r)&&uo(n,i,i.next,r)&&po(n,r)&&po(r,n)&&(t.push(n.i,i.i,r.i),go(i),go(i.next),i=e=r),i=i.next}while(i!==e);return $a(i)}function Qa(e,t,i,n,r,s){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&ao(a,e)){let o=mo(a,e);return a=$a(a,a.next),o=$a(o,o.next),qa(a,t,i,n,r,s,0),void qa(o,t,i,n,r,s,0)}e=e.next}a=a.next}while(a!==e)}function Ja(e,t){let i=e.x-t.x;if(0===i&&(i=e.y-t.y,0===i)){i=(e.next.y-e.y)/(e.next.x-e.x)-(t.next.y-t.y)/(t.next.x-t.x)}return i}function eo(e,t){const i=function(e,t){let i=t;const n=e.x,r=e.y;let s,a=-1/0;if(lo(e,i))return i;do{if(lo(e,i.next))return i.next;if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const e=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=n&&e>a&&(a=e,s=i.x<i.next.x?i:i.next,e===n))return s}i=i.next}while(i!==t);if(!s)return null;const o=s,l=s.x,u=s.y;let c=1/0;i=s;do{if(n>=i.x&&i.x>=l&&n!==i.x&&ro(r<u?n:a,r,l,u,r<u?a:n,r,i.x,i.y)){const t=Math.abs(r-i.y)/(n-i.x);po(i,e)&&(t<c||t===c&&(i.x>s.x||i.x===s.x&&to(s,i)))&&(s=i,c=t)}i=i.next}while(i!==o);return s}(e,t);if(!i)return t;const n=mo(i,e);return $a(n,n.next),$a(i,i.next)}function to(e,t){return oo(e.prev,e,t.prev)<0&&oo(t.next,e,e.next)<0}function io(e,t,i,n,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function no(e){let t=e,i=e;do{(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next}while(t!==e);return i}function ro(e,t,i,n,r,s,a,o){return(r-a)*(t-o)>=(e-a)*(s-o)&&(e-a)*(n-o)>=(i-a)*(t-o)&&(i-a)*(s-o)>=(r-a)*(n-o)}function so(e,t,i,n,r,s,a,o){return!(e===a&&t===o)&&ro(e,t,i,n,r,s,a,o)}function ao(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&uo(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(po(e,t)&&po(t,e)&&function(e,t){let i=e,n=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==e);return n}(e,t)&&(oo(e.prev,e,t.prev)||oo(e,t.prev,t))||lo(e,t)&&oo(e.prev,e,e.next)>0&&oo(t.prev,t,t.next)>0)}function oo(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function lo(e,t){return e.x===t.x&&e.y===t.y}function uo(e,t,i,n){const r=ho(oo(e,t,i)),s=ho(oo(e,t,n)),a=ho(oo(i,n,e)),o=ho(oo(i,n,t));return r!==s&&a!==o||(!(0!==r||!co(e,i,t))||(!(0!==s||!co(e,n,t))||(!(0!==a||!co(i,e,n))||!(0!==o||!co(i,t,n)))))}function co(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function ho(e){return e>0?1:e<0?-1:0}function po(e,t){return oo(e.prev,e,e.next)<0?oo(e,t,e.next)>=0&&oo(e,e.prev,t)>=0:oo(e,t,e.prev)<0||oo(e,e.next,t)<0}function mo(e,t){const i=_o(e.i,e.x,e.y),n=_o(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function fo(e,t,i,n){const r=_o(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function go(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _o(e,t,i){return{i:e,x:t,y:i,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}class vo{static triangulate(e,t,i=2){return ja(e,t,i)}}class xo{static area(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return.5*i}static isClockWise(e){return xo.area(e)<0}static triangulateShape(e,t){const i=[],n=[],r=[];yo(e),bo(i,e);let s=e.length;t.forEach(yo);for(let o=0;o<t.length;o++)n.push(s),s+=t[o].length,bo(i,t[o]);const a=vo.triangulate(i,n);for(let o=0;o<a.length;o+=3)r.push(a.slice(o,o+3));return r}}function yo(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function bo(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class To extends ur{constructor(e=new Wa([new Gt(.5,.5),new Gt(-.5,.5),new Gt(-.5,-.5),new Gt(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let a=0,o=e.length;a<o;a++){s(e[a])}function s(e){const s=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1;let u=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:.2,h=void 0!==t.bevelSize?t.bevelSize:c-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:So;let g,_,v,x,y,b=!1;m&&(g=m.getSpacedPoints(o),b=!0,u=!1,_=m.computeFrenetFrames(o,!1),v=new fi,x=new fi,y=new fi),u||(p=0,c=0,h=0,d=0);const T=e.extractPoints(a);let S=T.shape;const M=T.holes;if(!xo.isClockWise(S)){S=S.reverse();for(let e=0,t=M.length;e<t;e++){const t=M[e];xo.isClockWise(t)&&(M[e]=t.reverse())}}function w(e){const t=1e-10*1e-10;let i=e[0];for(let n=1;n<=e.length;n++){const r=n%e.length,s=e[r],a=s.x-i.x,o=s.y-i.y,l=a*a+o*o,u=Math.max(Math.abs(s.x),Math.abs(s.y),Math.abs(i.x),Math.abs(i.y));l<=t*u*u?(e.splice(r,1),n--):i=s}}w(S),M.forEach(w);const E=M.length,A=S;for(let t=0;t<E;t++){const e=M[t];S=S.concat(e)}function R(e,t,i){return e.clone().addScaledVector(t,i)}const C=S.length;function N(e,t,i){let n,r,s;const a=e.x-t.x,o=e.y-t.y,l=i.x-e.x,u=i.y-e.y,c=a*a+o*o,h=a*u-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(c),d=Math.sqrt(l*l+u*u),p=t.x-o/h,m=t.y+a/h,f=((i.x-u/d-p)*u-(i.y+l/d-m)*l)/(a*u-o*l);n=p+a*f-e.x,r=m+o*f-e.y;const g=n*n+r*r;if(g<=2)return new Gt(n,r);s=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(u)&&(e=!0),e?(n=-o,r=a,s=Math.sqrt(c)):(n=a,r=o,s=Math.sqrt(c/2))}return new Gt(n/s,r/s)}const P=[];for(let t=0,i=A.length,n=i-1,r=t+1;t<i;t++,n++,r++)n===i&&(n=0),r===i&&(r=0),P[t]=N(A[t],A[n],A[r]);const L=[];let I,D,U=P.concat();for(let t=0,i=E;t<i;t++){const e=M[t];I=[];for(let t=0,i=e.length,n=i-1,r=t+1;t<i;t++,n++,r++)n===i&&(n=0),r===i&&(r=0),I[t]=N(e[t],e[n],e[r]);L.push(I),U=U.concat(I)}if(0===p)D=xo.triangulateShape(A,M);else{const e=[],t=[];for(let i=0;i<p;i++){const n=i/p,r=c*Math.cos(n*Math.PI/2),s=h*Math.sin(n*Math.PI/2)+d;for(let t=0,i=A.length;t<i;t++){const i=R(A[t],P[t],s);V(i.x,i.y,-r),0===n&&e.push(i)}for(let e=0,i=E;e<i;e++){const i=M[e];I=L[e];const a=[];for(let e=0,t=i.length;e<t;e++){const t=R(i[e],I[e],s);V(t.x,t.y,-r),0===n&&a.push(t)}0===n&&t.push(a)}}D=xo.triangulateShape(e,t)}const F=D.length,O=h+d;for(let t=0;t<C;t++){const e=u?R(S[t],U[t],O):S[t];b?(x.copy(_.normals[0]).multiplyScalar(e.x),v.copy(_.binormals[0]).multiplyScalar(e.y),y.copy(g[0]).add(x).add(v),V(y.x,y.y,y.z)):V(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<C;e++){const i=u?R(S[e],U[e],O):S[e];b?(x.copy(_.normals[t]).multiplyScalar(i.x),v.copy(_.binormals[t]).multiplyScalar(i.y),y.copy(g[t]).add(x).add(v),V(y.x,y.y,y.z)):V(i.x,i.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,i=c*Math.cos(e*Math.PI/2),n=h*Math.sin(e*Math.PI/2)+d;for(let t=0,r=A.length;t<r;t++){const e=R(A[t],P[t],n);V(e.x,e.y,l+i)}for(let t=0,r=M.length;t<r;t++){const e=M[t];I=L[t];for(let t=0,r=e.length;t<r;t++){const r=R(e[t],I[t],n);b?V(r.x,r.y+g[o-1].y,g[o-1].x+i):V(r.x,r.y,l+i)}}}function B(e,t){let i=e.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=e.length-1);for(let e=0,i=o+2*p;e<i;e++){const i=C*e,s=C*(e+1);k(t+n+i,t+r+i,t+r+s,t+n+s)}}}function V(e,t,i){s.push(e),s.push(t),s.push(i)}function z(e,t,r){G(e),G(t),G(r);const s=n.length/3,a=f.generateTopUV(i,n,s-3,s-2,s-1);H(a[0]),H(a[1]),H(a[2])}function k(e,t,r,s){G(e),G(t),G(s),G(t),G(r),G(s);const a=n.length/3,o=f.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function G(e){n.push(s[3*e+0]),n.push(s[3*e+1]),n.push(s[3*e+2])}function H(e){r.push(e.x),r.push(e.y)}!function(){const e=n.length/3;if(u){let e=0,t=C*e;for(let i=0;i<F;i++){const e=D[i];z(e[2]+t,e[1]+t,e[0]+t)}e=o+2*p,t=C*e;for(let i=0;i<F;i++){const e=D[i];z(e[0]+t,e[1]+t,e[2]+t)}}else{for(let e=0;e<F;e++){const t=D[e];z(t[2],t[1],t[0])}for(let e=0;e<F;e++){const t=D[e];z(t[0]+C*o,t[1]+C*o,t[2]+C*o)}}i.addGroup(e,n.length/3-e,0)}(),function(){const e=n.length/3;let t=0;B(A,t),t+=A.length;for(let i=0,n=M.length;i<n;i++){const e=M[i];B(e,t),t+=e.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new tr(n,3)),this.setAttribute("uv",new tr(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){const t=e[n];i.shapes.push(t.uuid)}else i.shapes.push(e.uuid);i.options=Object.assign({},t),void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const i=[];for(let r=0,s=e.shapes.length;r<s;r++){const n=t[e.shapes[r]];i.push(n)}const n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=(new ka[n.type]).fromJSON(n)),new To(i,e.options)}}const So={generateTopUV:function(e,t,i,n,r){const s=t[3*i],a=t[3*i+1],o=t[3*n],l=t[3*n+1],u=t[3*r],c=t[3*r+1];return[new Gt(s,a),new Gt(o,l),new Gt(u,c)]},generateSideWallUV:function(e,t,i,n,r,s){const a=t[3*i],o=t[3*i+1],l=t[3*i+2],u=t[3*n],c=t[3*n+1],h=t[3*n+2],d=t[3*r],p=t[3*r+1],m=t[3*r+2],f=t[3*s],g=t[3*s+1],_=t[3*s+2];return Math.abs(o-c)<Math.abs(a-u)?[new Gt(a,1-l),new Gt(u,1-h),new Gt(d,1-m),new Gt(f,1-_)]:[new Gt(o,1-l),new Gt(c,1-h),new Gt(p,1-m),new Gt(g,1-_)]}};class Mo extends va{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mo(e.radius,e.detail)}}class wo extends ur{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=e/2,s=t/2,a=Math.floor(i),o=Math.floor(n),l=a+1,u=o+1,c=e/a,h=t/o,d=[],p=[],m=[],f=[];for(let g=0;g<u;g++){const e=g*h-s;for(let t=0;t<l;t++){const i=t*c-r;p.push(i,-e,0),m.push(0,0,1),f.push(t/a),f.push(1-g/o)}}for(let g=0;g<o;g++)for(let e=0;e<a;e++){const t=e+l*g,i=e+l*(g+1),n=e+1+l*(g+1),r=e+1+l*g;d.push(t,i,r),d.push(i,n,r)}this.setIndex(d),this.setAttribute("position",new tr(p,3)),this.setAttribute("normal",new tr(m,3)),this.setAttribute("uv",new tr(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wo(e.width,e.height,e.widthSegments,e.heightSegments)}}class Eo extends ur{constructor(e=new Wa([new Gt(0,.5),new Gt(-.5,-.5),new Gt(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(e))l(e);else for(let u=0;u<e.length;u++)l(e[u]),this.addGroup(a,o,u),a+=o,o=0;function l(e){const a=n.length/3,l=e.extractPoints(t);let u=l.shape;const c=l.holes;!1===xo.isClockWise(u)&&(u=u.reverse());for(let t=0,i=c.length;t<i;t++){const e=c[t];!0===xo.isClockWise(e)&&(c[t]=e.reverse())}const h=xo.triangulateShape(u,c);for(let t=0,i=c.length;t<i;t++){const e=c[t];u=u.concat(e)}for(let t=0,i=u.length;t<i;t++){const e=u[t];n.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,n=h.length;t<n;t++){const e=h[t],n=e[0]+a,r=e[1]+a,s=e[2]+a;i.push(n,r,s),o+=3}}this.setIndex(i),this.setAttribute("position",new tr(n,3)),this.setAttribute("normal",new tr(r,3)),this.setAttribute("uv",new tr(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){const n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const i=[];for(let n=0,r=e.shapes.length;n<r;n++){const r=t[e.shapes[n]];i.push(r)}return new Eo(i,e.curveSegments)}}class Ao extends ur{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const o=Math.min(s+a,Math.PI);let l=0;const u=[],c=new fi,h=new fi,d=[],p=[],m=[],f=[];for(let g=0;g<=i;g++){const d=[],_=g/i;let v=0;0===g&&0===s?v=.5/t:g===i&&o===Math.PI&&(v=-.5/t);for(let i=0;i<=t;i++){const o=i/t;c.x=-e*Math.cos(n+o*r)*Math.sin(s+_*a),c.y=e*Math.cos(s+_*a),c.z=e*Math.sin(n+o*r)*Math.sin(s+_*a),p.push(c.x,c.y,c.z),h.copy(c).normalize(),m.push(h.x,h.y,h.z),f.push(o+v,1-_),d.push(l++)}u.push(d)}for(let g=0;g<i;g++)for(let e=0;e<t;e++){const t=u[g][e+1],n=u[g][e],r=u[g+1][e],a=u[g+1][e+1];(0!==g||s>0)&&d.push(t,n,a),(g!==i-1||o<Math.PI)&&d.push(n,r,a)}this.setIndex(d),this.setAttribute("position",new tr(p,3)),this.setAttribute("normal",new tr(m,3)),this.setAttribute("uv",new tr(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ao(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ro extends va{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ro(e.radius,e.detail)}}class Co extends ur{constructor(e=1,t=.4,i=12,n=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const s=[],a=[],o=[],l=[],u=new fi,c=new fi,h=new fi;for(let d=0;d<=i;d++)for(let s=0;s<=n;s++){const p=s/n*r,m=d/i*Math.PI*2;c.x=(e+t*Math.cos(m))*Math.cos(p),c.y=(e+t*Math.cos(m))*Math.sin(p),c.z=t*Math.sin(m),a.push(c.x,c.y,c.z),u.x=e*Math.cos(p),u.y=e*Math.sin(p),h.subVectors(c,u).normalize(),o.push(h.x,h.y,h.z),l.push(s/n),l.push(d/i)}for(let d=1;d<=i;d++)for(let e=1;e<=n;e++){const t=(n+1)*d+e-1,i=(n+1)*(d-1)+e-1,r=(n+1)*(d-1)+e,a=(n+1)*d+e;s.push(t,i,a),s.push(i,r,a)}this.setIndex(s),this.setAttribute("position",new tr(a,3)),this.setAttribute("normal",new tr(o,3)),this.setAttribute("uv",new tr(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Co(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class No extends ur{constructor(e=new Va(new fi(-1,-1,0),new fi(-1,1,0),new fi(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new fi,o=new fi,l=new Gt;let u=new fi;const c=[],h=[],d=[],p=[];function m(r){u=e.getPointAt(r/t,u);const l=s.normals[r],d=s.binormals[r];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,r=Math.sin(t),s=-Math.cos(t);o.x=s*l.x+r*d.x,o.y=s*l.y+r*d.y,o.z=s*l.z+r*d.z,o.normalize(),h.push(o.x,o.y,o.z),a.x=u.x+i*o.x,a.y=u.y+i*o.y,a.z=u.z+i*o.z,c.push(a.x,a.y,a.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,a=(n+1)*(e-1)+t;p.push(i,r,a),p.push(r,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new tr(c,3)),this.setAttribute("normal",new tr(h,3)),this.setAttribute("uv",new tr(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new No((new ka[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Po extends kn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Bn(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Lo extends Rr{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Io extends kn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Bn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new tn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Do extends Io{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Gt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ft(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Bn(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Bn(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Bn(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Uo extends kn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Bn(16777215),this.specular=new Bn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new tn,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fo extends kn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Bn(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Oo extends kn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Bo extends kn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Bn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Bn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new tn,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Vo extends kn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class zo extends kn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class ko extends kn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Bn(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Go extends Gs{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ho(e,t){return e&&e.constructor!==t?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function Wo(e){const t=e.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort((function(t,i){return e[t]-e[i]})),i}function jo(e,t,i){const n=e.length,r=new e.constructor(n);for(let s=0,a=0;a!==n;++s){const n=i[s]*t;for(let i=0;i!==t;++i)r[a++]=e[n+i]}return r}function Xo(e,t,i,n){let r=1,s=e[0];for(;void 0!==s&&void 0===s[n];)s=e[r++];if(void 0===s)return;let a=s[n];if(void 0!==a)if(Array.isArray(a))do{a=s[n],void 0!==a&&(t.push(s.time),i.push(...a)),s=e[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[n],void 0!==a&&(t.push(s.time),a.toArray(i,i.length)),s=e[r++]}while(void 0!==s);else do{a=s[n],void 0!==a&&(t.push(s.time),i.push(a)),s=e[r++]}while(void 0!==s)}class $o{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let s;i:{n:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,n=t[++i],e<n)break t}s=t.length;break i}if(e>=r)break e;{const a=t[1];e<a&&(i=2,r=a);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(n=r,r=t[--i-1],e>=r)break t}s=i,i=0}}for(;i<s;){const n=i+s>>>1;e<t[n]?s=n:i=n+1}if(n=t[i],r=t[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let s=0;s!==n;++s)t[s]=i[r+s];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class qo extends $o{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ot,endingEnd:ot}}intervalChanged_(e,t,i){const n=this.parameterPositions;let r=e-2,s=e+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case lt:r=e,a=2*t-i;break;case ut:r=n.length-2,a=t+n[r]-n[r+1];break;default:r=e,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case lt:s=e,o=2*i-t;break;case ut:s=1,o=i+n[1]-n[0];break;default:s=e-1,o=t}const l=.5*(i-t),u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-i),this._offsetPrev=r*u,this._offsetNext=s*u}interpolate_(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,_=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,v=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let y=0;y!==a;++y)r[y]=g*s[u+y]+_*s[l+y]+v*s[o+y]+x*s[c+y];return r}}class Yo extends $o{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=(i-t)/(n-t),c=1-u;for(let h=0;h!==a;++h)r[h]=s[l+h]*c+s[o+h]*u;return r}}class Ko extends $o{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Zo{constructor(e,t,i,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ho(t,this.TimeBufferType),this.values=Ho(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Ho(e.times,Array),values:Ho(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(i.interpolation=t)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new Ko(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Yo(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new qo(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case rt:t=this.InterpolantFactoryMethodDiscrete;break;case st:t=this.InterpolantFactoryMethodLinear;break;case at:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return rt;case this.InterpolantFactoryMethodLinear:return st;case this.InterpolantFactoryMethodSmooth:return at}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const e=this.getValueSize();this.times=i.slice(r,s),this.values=this.values.slice(r*e,s*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(e=!1);const i=this.times,n=this.values,r=i.length;0===r&&(e=!1);let s=null;for(let o=0;o!==r;o++){const t=i[o];if("number"==typeof t&&isNaN(t)){e=!1;break}if(null!==s&&s>t){e=!1;break}s=t}if(void 0!==n&&(a=n,ArrayBuffer.isView(a)&&!(a instanceof DataView)))for(let o=0,l=n.length;o!==l;++o){const t=n[o];if(isNaN(t)){e=!1;break}}var a;return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===at,r=e.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=e[a];if(o!==e[a+1]&&(1!==a||o!==e[0]))if(n)r=!0;else{const e=a*i,n=e-i,s=e+i;for(let a=0;a!==i;++a){const i=t[e+a];if(i!==t[n+a]||i!==t[s+a]){r=!0;break}}}if(r){if(a!==s){e[s]=e[a];const n=a*i,r=s*i;for(let e=0;e!==i;++e)t[r+e]=t[n+e]}++s}}if(r>0){e[s]=e[r];for(let e=r*i,n=s*i,a=0;a!==i;++a)t[n+a]=t[e+a];++s}return s!==e.length?(this.times=e.slice(0,s),this.values=t.slice(0,s*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Zo.prototype.ValueTypeName="",Zo.prototype.TimeBufferType=Float32Array,Zo.prototype.ValueBufferType=Float32Array,Zo.prototype.DefaultInterpolation=st;class Qo extends Zo{constructor(e,t,i){super(e,t,i)}}Qo.prototype.ValueTypeName="bool",Qo.prototype.ValueBufferType=Array,Qo.prototype.DefaultInterpolation=rt,Qo.prototype.InterpolantFactoryMethodLinear=void 0,Qo.prototype.InterpolantFactoryMethodSmooth=void 0;class Jo extends Zo{constructor(e,t,i,n){super(e,t,i,n)}}Jo.prototype.ValueTypeName="color";class el extends Zo{constructor(e,t,i,n){super(e,t,i,n)}}el.prototype.ValueTypeName="number";class tl extends $o{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-t)/(n-t);let l=e*a;for(let u=l+a;l!==u;l+=4)mi.slerpFlat(r,0,s,l-a,s,l,o);return r}}class il extends Zo{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new tl(this.times,this.values,this.getValueSize(),e)}}il.prototype.ValueTypeName="quaternion",il.prototype.InterpolantFactoryMethodSmooth=void 0;class nl extends Zo{constructor(e,t,i){super(e,t,i)}}nl.prototype.ValueTypeName="string",nl.prototype.ValueBufferType=Array,nl.prototype.DefaultInterpolation=rt,nl.prototype.InterpolantFactoryMethodLinear=void 0,nl.prototype.InterpolantFactoryMethodSmooth=void 0;class rl extends Zo{constructor(e,t,i,n){super(e,t,i,n)}}rl.prototype.ValueTypeName="vector";class sl{constructor(e="",t=-1,i=[],n=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Ut(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let s=0,a=i.length;s!==a;++s)t.push(al(i[s]).scale(n));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=i.length;r!==s;++r)t.push(Zo.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const r=t.length,s=[];for(let a=0;a<r;a++){let e=[],o=[];e.push((a+r-1)%r,a,(a+1)%r),o.push(0,1,0);const l=Wo(e);e=jo(e,1,l),o=jo(o,1,l),n||0!==e[0]||(e.push(r),o.push(o[0])),s.push(new el(".morphTargetInfluences["+t[a].name+"]",e,o).scale(1/i))}return new this(e,-1,s)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const t=e;i=t.geometry&&t.geometry.animations||t.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,o=e.length;a<o;a++){const t=e[a],i=t.name.match(r);if(i&&i.length>1){const e=i[1];let r=n[e];r||(n[e]=r=[]),r.push(t)}}const s=[];for(const a in n)s.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return s}static parseAnimation(e,t){if(!e)return null;const i=function(e,t,i,n,r){if(0!==i.length){const s=[],a=[];Xo(i,s,a,n),0!==s.length&&r.push(new e(t,s,a))}},n=[],r=e.name||"default",s=e.fps||30,a=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let u=0;u<l.length;u++){const e=l[u].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let i;for(i=0;i<e.length;i++)if(e[i].morphTargets)for(let n=0;n<e[i].morphTargets.length;n++)t[e[i].morphTargets[n]]=-1;for(const r in t){const t=[],s=[];for(let n=0;n!==e[i].morphTargets.length;++n){const n=e[i];t.push(n.time),s.push(n.morphTarget===r?1:0)}n.push(new el(".morphTargetInfluence["+r+"]",t,s))}o=t.length*s}else{const r=".bones["+t[u].name+"]";i(rl,r+".position",e,"pos",n),i(il,r+".quaternion",e,"rot",n),i(rl,r+".scale",e,"scl",n)}}if(0===n.length)return null;return new this(r,o,n,a)}resetDuration(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){const i=this.tracks[t];e=Math.max(e,i.times[i.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function al(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return el;case"vector":case"vector2":case"vector3":case"vector4":return rl;case"color":return Jo;case"quaternion":return il;case"bool":case"boolean":return Qo;case"string":return nl}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],i=[];Xo(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const ol={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class ll{constructor(e,t,i){const n=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){o++,!1===s&&void 0!==n.onStart&&n.onStart(e,a,o),s=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){const i=l[t],n=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return n}return null}}}const ul=new ll;class cl{constructor(e){this.manager=void 0!==e?e:ul,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise((function(n,r){i.load(e,n,t,r)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}cl.DEFAULT_MATERIAL_NAME="__DEFAULT";const hl={};class dl extends Error{constructor(e,t){super(e),this.response=t}}class pl extends cl{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=ol.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout((()=>{t&&t(r),this.manager.itemEnd(e)}),0),r;if(void 0!==hl[e])return void hl[e].push({onLoad:t,onProgress:i,onError:n});hl[e]=[],hl[e].push({onLoad:t,onProgress:i,onError:n});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then((t=>{if(200===t.status||0===t.status){if(t.status,"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const i=hl[e],n=t.body.getReader(),r=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),s=r?parseInt(r):0,a=0!==s;let o=0;const l=new ReadableStream({start(e){!function t(){n.read().then((({done:n,value:r})=>{if(n)e.close();else{o+=r.byteLength;const n=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let e=0,t=i.length;e<t;e++){const t=i[e];t.onProgress&&t.onProgress(n)}e.enqueue(r),t()}}),(t=>{e.error(t)}))}()}});return new Response(l)}throw new dl(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,a)));case"json":return e.json();default:if(""===a)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(a),i=t&&t[1]?t[1].toLowerCase():void 0,n=new TextDecoder(i);return e.arrayBuffer().then((e=>n.decode(e)))}}})).then((t=>{ol.add(e,t);const i=hl[e];delete hl[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onLoad&&n.onLoad(t)}})).catch((t=>{const i=hl[e];if(void 0===i)throw this.manager.itemError(e),t;delete hl[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ml extends cl{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=ol.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;const a=Xt("img");function o(){u(),ol.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){u(),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class fl extends cl{constructor(e){super(e)}load(e,t,i,n){const r=this,s=new xs,a=new pl(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,(function(e){let i;try{i=r.parse(e)}catch(a){if(void 0===n)return;n(a)}void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:Y,s.wrapT=void 0!==i.wrapT?i.wrapT:Y,s.magFilter=void 0!==i.magFilter?i.magFilter:ee,s.minFilter=void 0!==i.minFilter?i.minFilter:ee,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.colorSpace&&(s.colorSpace=i.colorSpace),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=ie),1===i.mipmapCount&&(s.minFilter=ee),void 0!==i.generateMipmaps&&(s.generateMipmaps=i.generateMipmaps),s.needsUpdate=!0,t&&t(s,i)}),i,n),s}}class gl extends cl{constructor(e){super(e)}load(e,t,i,n){const r=new li,s=new ml(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,(function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)}),i,n),r}}class _l extends xn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Bn(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(t.object.target=this.target.uuid),t}}class vl extends _l{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(xn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Bn(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const xl=new ji,yl=new fi,bl=new fi;class Tl{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Gt(512,512),this.mapType=ne,this.map=null,this.mapPass=null,this.matrix=new ji,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Bs,this._frameExtents=new Gt(1,1),this._viewportCount=1,this._viewports=[new ui(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;yl.setFromMatrixPosition(e.matrixWorld),t.position.copy(yl),bl.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(bl),t.updateMatrixWorld(),xl.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xl),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(xl)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 1!==this.intensity&&(e.intensity=this.intensity),0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Sl extends Tl{constructor(){super(new Ir(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=2*Dt*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;i===t.fov&&n===t.aspect&&r===t.far||(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ml extends _l{constructor(e,t,i=0,n=Math.PI/3,r=0,s=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(xn.DEFAULT_UP),this.updateMatrix(),this.target=new xn,this.distance=i,this.angle=n,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new Sl}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const wl=new ji,El=new fi,Al=new fi;class Rl extends Tl{constructor(){super(new Ir(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Gt(4,2),this._viewportCount=6,this._viewports=[new ui(2,1,1,1),new ui(0,1,1,1),new ui(3,1,1,1),new ui(1,1,1,1),new ui(3,0,1,1),new ui(1,0,1,1)],this._cubeDirections=[new fi(1,0,0),new fi(-1,0,0),new fi(0,0,1),new fi(0,0,-1),new fi(0,1,0),new fi(0,-1,0)],this._cubeUps=[new fi(0,1,0),new fi(0,1,0),new fi(0,1,0),new fi(0,1,0),new fi(0,0,1),new fi(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),El.setFromMatrixPosition(e.matrixWorld),i.position.copy(El),Al.copy(i.position),Al.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Al),i.updateMatrixWorld(),n.makeTranslation(-El.x,-El.y,-El.z),wl.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(wl)}}class Cl extends _l{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Rl}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Nl extends Cr{constructor(e=-1,t=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,s=i+e,a=n+t,o=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,s=r+e*this.view.width,a-=t*this.view.offsetY,o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}class Pl extends Tl{constructor(){super(new Nl(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ll extends _l{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(xn.DEFAULT_UP),this.updateMatrix(),this.target=new xn,this.shadow=new Pl}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Il extends _l{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Dl extends _l{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Ul{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new fi)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*n),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],i*n*1.092548),t.addScaledVector(s[5],n*r*1.092548),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],i*r*1.092548),t.addScaledVector(s[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*n),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*i),t.addScaledVector(s[4],.858086*i*n),t.addScaledVector(s[5],.858086*n*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*i*r),t.addScaledVector(s[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class Fl extends _l{constructor(e=new Ul,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Ol{static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Bl extends cl{constructor(e){super(e),this.isImageBitmapLoader=!0,this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=ol.get(e);if(void 0!==s)return r.manager.itemStart(e),s.then?void s.then((i=>{t&&t(i),r.manager.itemEnd(e)})).catch((e=>{n&&n(e)})):(setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s);const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader;const o=fetch(e,a).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(i){return ol.add(e,i),t&&t(i),r.manager.itemEnd(e),i})).catch((function(t){n&&n(t),ol.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)}));ol.add(e,o),r.manager.itemStart(e)}}let Vl;class zl{static getContext(){return void 0===Vl&&(Vl=new(window.AudioContext||window.webkitAudioContext)),Vl}static setContext(e){Vl=e}}class kl extends cl{constructor(e){super(e)}load(e,t,i,n){const r=this,s=new pl(this.manager);function a(t){n&&n(t),r.manager.itemError(e)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(e){try{const i=e.slice(0);zl.getContext().decodeAudioData(i,(function(e){t(e)})).catch(a)}catch(i){a(i)}}),i,n)}}class Gl extends Ir{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class Hl{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Wl(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Wl();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Wl(){return performance.now()}const jl=new fi,Xl=new mi,$l=new fi,ql=new fi;class Yl extends xn{constructor(){super(),this.type="AudioListener",this.context=zl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Hl}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(jl,Xl,$l),ql.set(0,0,-1).applyQuaternion(Xl),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(jl.x,e),t.positionY.linearRampToValueAtTime(jl.y,e),t.positionZ.linearRampToValueAtTime(jl.z,e),t.forwardX.linearRampToValueAtTime(ql.x,e),t.forwardY.linearRampToValueAtTime(ql.y,e),t.forwardZ.linearRampToValueAtTime(ql.z,e),t.upX.linearRampToValueAtTime(i.x,e),t.upY.linearRampToValueAtTime(i.y,e),t.upZ.linearRampToValueAtTime(i.z,e)}else t.setPosition(jl.x,jl.y,jl.z),t.setOrientation(ql.x,ql.y,ql.z,i.x,i.y,i.z)}}class Kl extends xn{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return;if(!1===this.hasPlaybackControl)return;this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return!1!==this.hasPlaybackControl&&this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),"buffer"!==e.sourceType||(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice()),this}clone(e){return new this.constructor(this.listener).copy(this,e)}}class Zl{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class Ql{constructor(e,t,i){let n,r,s;switch(this.binding=e,this.valueSize=i,t){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let s=this.cumulativeWeight;if(0===s){for(let e=0;e!==n;++e)i[r+e]=i[e];s=t}else{s+=t;const e=t/s;this._mixBufferRegion(i,r,0,e,n)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const e=t*this._origIndex;this._mixBufferRegion(i,n,e,1-r,t)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let o=t,l=t+t;o!==l;++o)if(i[o]!==i[o+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,s=n;r!==s;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let s=0;s!==r;++s)e[t+s]=e[i+s]}_slerp(e,t,i,n){mi.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){const s=this._workIndex*r;mi.multiplyQuaternionsFlat(e,s,e,t,e,i),mi.slerpFlat(e,t,e,t,e,s,n)}_lerp(e,t,i,n,r){const s=1-n;for(let a=0;a!==r;++a){const r=t+a;e[r]=e[r]*s+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let s=0;s!==r;++s){const r=t+s;e[r]=e[r]+e[i+s]*n}}}const Jl="\\[\\]\\.:\\/",eu=new RegExp("["+Jl+"]","g"),tu="[^"+Jl+"]",iu="[^"+Jl.replace("\\.","")+"]",nu=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",tu)+/(WCOD+)?/.source.replace("WCOD",iu)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",tu)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",tu)+"$"),ru=["material","materials","bones","map"];class su{constructor(e,t,i){this.path=t,this.parsedPath=i||su.parseTrackName(t),this.node=su.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new su.Composite(e,t,i):new su(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(eu,"")}static parseTrackName(e){const t=nu.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=i.nodeName.substring(n+1);-1!==ru.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){const i=function(e){for(let n=0;n<e.length;n++){const r=e[n];if(r.name===t||r.uuid===t)return r;const s=i(r.children);if(s)return s}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let r=t.propertyIndex;if(e||(e=su.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return;if(i){let n=t.objectIndex;switch(i){case"materials":if(!e.material)return;if(!e.material.materials)return;e=e.material.materials;break;case"bones":if(!e.skeleton)return;e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return;if(!e.material.map)return;e=e.material.map;break;default:if(void 0===e[i])return;e=e[i]}if(void 0!==n){if(void 0===e[n])return;e=e[n]}}const s=e[n];if(void 0===s){t.nodeName;return}let a=this.Versioning.None;this.targetObject=e,!0===e.isMaterial?a=this.Versioning.NeedsUpdate:!0===e.isObject3D&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry)return;if(!e.geometry.morphAttributes)return;void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}su.Composite=class{constructor(e,t,i){const n=i||su.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},su.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},su.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},su.prototype.GetterByBindingType=[su.prototype._getValue_direct,su.prototype._getValue_array,su.prototype._getValue_arrayElement,su.prototype._getValue_toArray],su.prototype.SetterByBindingTypeAndVersioning=[[su.prototype._setValue_direct,su.prototype._setValue_direct_setNeedsUpdate,su.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[su.prototype._setValue_array,su.prototype._setValue_array_setNeedsUpdate,su.prototype._setValue_array_setMatrixWorldNeedsUpdate],[su.prototype._setValue_arrayElement,su.prototype._setValue_arrayElement_setNeedsUpdate,su.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[su.prototype._setValue_fromArray,su.prototype._setValue_fromArray_setNeedsUpdate,su.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class au{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const r=t.tracks,s=r.length,a=new Array(s),o={endingStart:ot,endingEnd:ot};for(let l=0;l!==s;++l){const e=r[l].createInterpolant(null);a[l]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i=!1){if(e.fadeOut(t),this.fadeIn(t),!0===i){const i=this._clip.duration,n=e._clip.duration,r=n/i,s=i/n;e.warp(1,r,t),this.warp(s,1,t)}return this}crossFadeTo(e,t,i=!1){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,r=n.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+i,l[0]=e/s,l[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled)return void this._updateWeight(e);const r=this._startTime;if(null!==r){const n=(e-r)*i;n<0||0===i?t=0:(this._startTime=null,t=i*n)}t*=this._updateTimeScale(e);const s=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;if(2501===this.blendMode)for(let i=0,n=e.length;i!==n;++i)e[i].evaluate(s),t[i].accumulateAdditive(a);else for(let i=0,r=e.length;i!==r;++i)e[i].evaluate(s),t[i].accumulate(n,a)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const s=2202===i;if(0===e)return-1===r||!s||1&~r?n:t-n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0){const i=Math.floor(n/t);n-=t*i,r+=Math.abs(i);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(s&&!(1&~r))return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=lt,n.endingEnd=lt):(n.endingStart=e?this.zeroSlopeAtStart?lt:ot:ut,n.endingEnd=t?this.zeroSlopeAtEnd?lt:ot:ut)}_scheduleFading(e,t,i){const n=this._mixer,r=n.time;let s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=t,a[1]=r+e,o[1]=i,this}}const ou=new Float32Array(1);class lu extends Nt{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,s=e._propertyBindings,a=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName;let u=l[o];void 0===u&&(u={},l[o]=u);for(let c=0;c!==r;++c){const e=n[c],r=e.name;let l=u[r];if(void 0!==l)++l.referenceCount,s[c]=l;else{if(l=s[c],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,r));continue}const n=t&&t._propertyBindings[c].binding.parsedPath;l=new Ql(su.create(i,r,n),e.ValueTypeName,e.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,r),s[c]=l}a[c].resultBuffer=l.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,r=this._actionsByClip;let s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const t=s.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),s.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null;delete a.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const e=t[i];0==--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let s=n[t];void 0===s&&(s={},n[t]=s),s[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,a=s[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[r],0===Object.keys(a).length&&delete s[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return void 0===i&&(i=new Yo(new Float32Array(2),new Float32Array(2),1,ou),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){const n=t||this._root,r=n.uuid;let s="string"==typeof e?sl.findByName(n,e):e;const a=null!==s?s.uuid:e,o=this._actionsByClip[a];let l=null;if(void 0===i&&(i=null!==s?s.blendMode:ct),void 0!==o){const e=o.actionByRoot[r];if(void 0!==e&&e.blendMode===i)return e;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const u=new au(this,s,t,i);return this._bindAction(u,l),this._addInactiveAction(u,a,r),u}existingAction(e,t){const i=t||this._root,n=i.uuid,r="string"==typeof e?sl.findByName(i,e):e,s=r?r.uuid:e,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let l=0;l!==i;++l){t[l]._update(n,e,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const e=r.knownActions;for(let i=0,n=e.length;i!==n;++i){const n=e[i];this._deactivateAction(n);const r=n._cacheIndex,s=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,s._cacheIndex=r,t[r]=s,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const r in i){const e=i[r].actionByRoot[t];void 0!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const r in n){const e=n[r];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(e,t){const i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class uu extends ci{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTargetArray=!0,this.depth=i,this.texture=new di(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class cu extends Hr{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const hu=new ji;class du{constructor(e,t,i=0,n=1/0){this.ray=new Wi(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new nn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera&&(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t)}setFromXRController(e){return hu.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(hu),this}intersectObject(e,t=!0,i=[]){return mu(e,this,i,t),i.sort(pu),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)mu(e[n],this,i,t);return i.sort(pu),i}}function pu(e,t){return e.distance-t.distance}function mu(e,t,i,n){let r=!0;if(e.layers.test(t.layers)){!1===e.raycast(t,i)&&(r=!1)}if(!0===r&&!0===n){const n=e.children;for(let e=0,r=n.length;e<r;e++)mu(n[e],t,i,!0)}}class fu{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Ft(this.phi,e,Math.PI-e),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Ft(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class gu{constructor(e,t,i,n){gu.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==e&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const r=this.elements;return r[0]=e,r[2]=t,r[1]=i,r[3]=n,this}}const _u=new fi,vu=new fi;class xu{constructor(e=new fi,t=new fi){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_u.subVectors(e,this.start),vu.subVectors(this.end,this.start);const i=vu.dot(vu);let n=vu.dot(_u)/i;return t&&(n=Ft(n,0,1)),n}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class yu extends br{constructor(e,t,i){super(new Ao(t,4,2),new Gn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}class bu extends ea{constructor(e=10,t=10,i=4473924,n=8947848){i=new Bn(i),n=new Bn(n);const r=t/2,s=e/t,a=e/2,o=[],l=[];for(let c=0,h=0,d=-a;c<=t;c++,d+=s){o.push(-a,0,d,a,0,d),o.push(d,0,-a,d,0,a);const e=c===r?i:n;e.toArray(l,h),h+=3,e.toArray(l,h),h+=3,e.toArray(l,h),h+=3,e.toArray(l,h),h+=3}const u=new ur;u.setAttribute("position",new tr(o,3)),u.setAttribute("color",new tr(l,3));super(u,new Gs({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Tu=new fi,Su=new fi,Mu=new fi;class wu extends xn{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",void 0===t&&(t=1);let n=new ur;n.setAttribute("position",new tr([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Gs({fog:!1,toneMapped:!1});this.lightPlane=new Ks(n,r),this.add(this.lightPlane),n=new ur,n.setAttribute("position",new tr([0,0,0,0,0,1],3)),this.targetLine=new Ks(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Tu.setFromMatrixPosition(this.light.matrixWorld),Su.setFromMatrixPosition(this.light.target.matrixWorld),Mu.subVectors(Su,Tu),this.lightPlane.lookAt(Su),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Su),this.targetLine.scale.z=Mu.length()}}const Eu=new fi,Au=new Cr;class Ru extends ea{constructor(e){const t=new ur,i=new Gs({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={};function a(e,t){o(e),o(t)}function o(e){n.push(0,0,0),r.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),t.setAttribute("position",new tr(n,3)),t.setAttribute("color",new tr(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new Bn(16755200),u=new Bn(16711680),c=new Bn(43775),h=new Bn(16777215),d=new Bn(3355443);this.setColors(l,u,c,h,d)}setColors(e,t,i,n,r){const s=this.geometry.getAttribute("color");s.setXYZ(0,e.r,e.g,e.b),s.setXYZ(1,e.r,e.g,e.b),s.setXYZ(2,e.r,e.g,e.b),s.setXYZ(3,e.r,e.g,e.b),s.setXYZ(4,e.r,e.g,e.b),s.setXYZ(5,e.r,e.g,e.b),s.setXYZ(6,e.r,e.g,e.b),s.setXYZ(7,e.r,e.g,e.b),s.setXYZ(8,e.r,e.g,e.b),s.setXYZ(9,e.r,e.g,e.b),s.setXYZ(10,e.r,e.g,e.b),s.setXYZ(11,e.r,e.g,e.b),s.setXYZ(12,e.r,e.g,e.b),s.setXYZ(13,e.r,e.g,e.b),s.setXYZ(14,e.r,e.g,e.b),s.setXYZ(15,e.r,e.g,e.b),s.setXYZ(16,e.r,e.g,e.b),s.setXYZ(17,e.r,e.g,e.b),s.setXYZ(18,e.r,e.g,e.b),s.setXYZ(19,e.r,e.g,e.b),s.setXYZ(20,e.r,e.g,e.b),s.setXYZ(21,e.r,e.g,e.b),s.setXYZ(22,e.r,e.g,e.b),s.setXYZ(23,e.r,e.g,e.b),s.setXYZ(24,t.r,t.g,t.b),s.setXYZ(25,t.r,t.g,t.b),s.setXYZ(26,t.r,t.g,t.b),s.setXYZ(27,t.r,t.g,t.b),s.setXYZ(28,t.r,t.g,t.b),s.setXYZ(29,t.r,t.g,t.b),s.setXYZ(30,t.r,t.g,t.b),s.setXYZ(31,t.r,t.g,t.b),s.setXYZ(32,i.r,i.g,i.b),s.setXYZ(33,i.r,i.g,i.b),s.setXYZ(34,i.r,i.g,i.b),s.setXYZ(35,i.r,i.g,i.b),s.setXYZ(36,i.r,i.g,i.b),s.setXYZ(37,i.r,i.g,i.b),s.setXYZ(38,n.r,n.g,n.b),s.setXYZ(39,n.r,n.g,n.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap;Au.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const i=this.camera.coordinateSystem===Rt?-1:0;Cu("c",t,e,Au,0,0,i),Cu("t",t,e,Au,0,0,1),Cu("n1",t,e,Au,-1,-1,i),Cu("n2",t,e,Au,1,-1,i),Cu("n3",t,e,Au,-1,1,i),Cu("n4",t,e,Au,1,1,i),Cu("f1",t,e,Au,-1,-1,1),Cu("f2",t,e,Au,1,-1,1),Cu("f3",t,e,Au,-1,1,1),Cu("f4",t,e,Au,1,1,1),Cu("u1",t,e,Au,.7,1.1,i),Cu("u2",t,e,Au,-.7,1.1,i),Cu("u3",t,e,Au,0,2,i),Cu("cf1",t,e,Au,-1,0,1),Cu("cf2",t,e,Au,1,0,1),Cu("cf3",t,e,Au,0,-1,1),Cu("cf4",t,e,Au,0,1,1),Cu("cn1",t,e,Au,-1,0,i),Cu("cn2",t,e,Au,1,0,i),Cu("cn3",t,e,Au,0,-1,i),Cu("cn4",t,e,Au,0,1,i),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Cu(e,t,i,n,r,s,a){Eu.set(r,s,a).unproject(n);const o=t[e];if(void 0!==o){const e=i.getAttribute("position");for(let t=0,i=o.length;t<i;t++)e.setXYZ(o[t],Eu.x,Eu.y,Eu.z)}}class Nu extends Ks{constructor(e,t=1,i=16776960){const n=i,r=new ur;r.setAttribute("position",new tr([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new Gs({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const s=new ur;s.setAttribute("position",new tr([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new br(s,new Gn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}class Pu extends ea{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=new ur;i.setAttribute("position",new tr(t,3)),i.setAttribute("color",new tr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(i,new Gs({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,i){const n=new Bn,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Lu{constructor(){this.type="ShapePath",this.color=new Bn,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ha,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,s){return this.currentPath.bezierCurveTo(e,t,i,n,r,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){const i=t.length;let n=!1;for(let r=i-1,s=0;s<i;r=s++){let i=t[r],a=t[s],o=a.x-i.x,l=a.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=t[s],o=-o,a=t[r],l=-l),e.y<i.y||e.y>a.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{const t=l*(e.x-i.x)-o*(e.y-i.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==i.y)continue;if(a.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=a.x)return!0}}return n}const i=xo.isClockWise,n=this.subPaths;if(0===n.length)return[];let r,s,a;const o=[];if(1===n.length)return s=n[0],a=new Wa,a.curves=s.curves,o.push(a),o;let l=!i(n[0].getPoints());l=e?!l:l;const u=[],c=[];let h,d,p=[],m=0;c[m]=void 0,p[m]=[];for(let f=0,g=n.length;f<g;f++)s=n[f],h=s.getPoints(),r=i(h),r=e?!r:r,r?(!l&&c[m]&&m++,c[m]={s:new Wa,p:h},c[m].s.curves=s.curves,l&&m++,p[m]=[]):p[m].push({h:s,p:h[0]});if(!c[0])return function(e){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i],r=new Wa;r.curves=n.curves,t.push(r)}return t}(n);if(c.length>1){let e=!1,i=0;for(let t=0,n=c.length;t<n;t++)u[t]=[];for(let n=0,r=c.length;n<r;n++){const r=p[n];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<c.length;r++)t(a.p,c[r].p)&&(n!==r&&i++,o?(o=!1,u[r].push(a)):e=!0);o&&u[n].push(a)}}i>0&&!1===e&&(p=u)}for(let f=0,g=c.length;f<g;f++){a=c[f].s,o.push(a),d=p[f];for(let e=0,t=d.length;e<t;e++)a.holes.push(d[e].h)}return o}}class Iu extends Nt{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){void 0!==e&&(null!==this.domElement&&this.disconnect(),this.domElement=e)}disconnect(){}dispose(){}update(){}}function Du(e,t,i,n){const r=function(e){switch(e){case ne:case re:return{byteLength:1,components:1};case ae:case se:case ce:return{byteLength:2,components:1};case he:case de:return{byteLength:2,components:4};case le:case oe:case ue:return{byteLength:4,components:1};case me:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${e}.`)}(n);switch(i){case fe:return e*t;case ye:case be:return e*t/r.components*r.byteLength;case Te:case Se:return e*t*2/r.components*r.byteLength;case ge:return e*t*3/r.components*r.byteLength;case _e:case Me:return e*t*4/r.components*r.byteLength;case we:case Ee:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case Ae:case Re:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case Ne:case Le:return Math.max(e,16)*Math.max(t,8)/4;case Ce:case Pe:return Math.max(e,8)*Math.max(t,8)/2;case Ie:case De:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case Ue:case Fe:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case Oe:return Math.floor((e+4)/5)*Math.floor((t+3)/4)*16;case Be:return Math.floor((e+4)/5)*Math.floor((t+4)/5)*16;case Ve:return Math.floor((e+5)/6)*Math.floor((t+4)/5)*16;case ze:return Math.floor((e+5)/6)*Math.floor((t+5)/6)*16;case ke:return Math.floor((e+7)/8)*Math.floor((t+4)/5)*16;case Ge:return Math.floor((e+7)/8)*Math.floor((t+5)/6)*16;case He:return Math.floor((e+7)/8)*Math.floor((t+7)/8)*16;case We:return Math.floor((e+9)/10)*Math.floor((t+4)/5)*16;case je:return Math.floor((e+9)/10)*Math.floor((t+5)/6)*16;case Xe:return Math.floor((e+9)/10)*Math.floor((t+7)/8)*16;case $e:return Math.floor((e+9)/10)*Math.floor((t+9)/10)*16;case qe:return Math.floor((e+11)/12)*Math.floor((t+9)/10)*16;case Ye:return Math.floor((e+11)/12)*Math.floor((t+11)/12)*16;case Ke:case Ze:case Qe:return Math.ceil(e/4)*Math.ceil(t/4)*16;case Je:case et:return Math.ceil(e/4)*Math.ceil(t/4)*8;case tt:case it:return Math.ceil(e/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${i} format.`)}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
function Uu(){let e=null,t=!1,i=null,n=null;function r(t,s){i(t,s),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function Fu(e){const t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const n=t.get(i);n&&(e.deleteBuffer(n.buffer),t.delete(i))},update:function(i,n){if(i.isInterleavedBufferAttribute&&(i=i.data),i.isGLBufferAttribute){const e=t.get(i);return void((!e||e.version<i.version)&&t.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}const r=t.get(i);if(void 0===r)t.set(i,function(t,i){const n=t.array,r=t.usage,s=n.byteLength,a=e.createBuffer();let o;if(e.bindBuffer(i,a),e.bufferData(i,n,r),t.onUploadCallback(),n instanceof Float32Array)o=e.FLOAT;else if(n instanceof Uint16Array)o=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(n instanceof Int16Array)o=e.SHORT;else if(n instanceof Uint32Array)o=e.UNSIGNED_INT;else if(n instanceof Int32Array)o=e.INT;else if(n instanceof Int8Array)o=e.BYTE;else if(n instanceof Uint8Array)o=e.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);o=e.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version,size:s}}(i,n));else if(r.version<i.version){if(r.size!==i.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,i,n){const r=i.array,s=i.updateRanges;if(e.bindBuffer(n,t),0===s.length)e.bufferSubData(n,0,r);else{s.sort(((e,t)=>e.start-t.start));let t=0;for(let e=1;e<s.length;e++){const i=s[t],n=s[e];n.start<=i.start+i.count+1?i.count=Math.max(i.count,n.start+n.count-i.start):(++t,s[t]=n)}s.length=t+1;for(let i=0,a=s.length;i<a;i++){const t=s[i];e.bufferSubData(n,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}i.clearUpdateRanges()}i.onUploadCallback()}(r.buffer,i,n),r.version=i.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:i}})),"undefined"!=typeof window&&(window.__THREE__||(window.__THREE__=i));const Ou={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},Bu={common:{diffuse:{value:new Bn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ht}},envmap:{envMap:{value:null},envMapRotation:{value:new Ht},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ht}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ht}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ht},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ht},normalScale:{value:new Gt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ht},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ht}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ht}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ht}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Bn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Bn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0},uvTransform:{value:new Ht}},sprite:{diffuse:{value:new Bn(16777215)},opacity:{value:1},center:{value:new Gt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}}},Vu={basic:{uniforms:wr([Bu.common,Bu.specularmap,Bu.envmap,Bu.aomap,Bu.lightmap,Bu.fog]),vertexShader:Ou.meshbasic_vert,fragmentShader:Ou.meshbasic_frag},lambert:{uniforms:wr([Bu.common,Bu.specularmap,Bu.envmap,Bu.aomap,Bu.lightmap,Bu.emissivemap,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,Bu.fog,Bu.lights,{emissive:{value:new Bn(0)}}]),vertexShader:Ou.meshlambert_vert,fragmentShader:Ou.meshlambert_frag},phong:{uniforms:wr([Bu.common,Bu.specularmap,Bu.envmap,Bu.aomap,Bu.lightmap,Bu.emissivemap,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,Bu.fog,Bu.lights,{emissive:{value:new Bn(0)},specular:{value:new Bn(1118481)},shininess:{value:30}}]),vertexShader:Ou.meshphong_vert,fragmentShader:Ou.meshphong_frag},standard:{uniforms:wr([Bu.common,Bu.envmap,Bu.aomap,Bu.lightmap,Bu.emissivemap,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,Bu.roughnessmap,Bu.metalnessmap,Bu.fog,Bu.lights,{emissive:{value:new Bn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ou.meshphysical_vert,fragmentShader:Ou.meshphysical_frag},toon:{uniforms:wr([Bu.common,Bu.aomap,Bu.lightmap,Bu.emissivemap,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,Bu.gradientmap,Bu.fog,Bu.lights,{emissive:{value:new Bn(0)}}]),vertexShader:Ou.meshtoon_vert,fragmentShader:Ou.meshtoon_frag},matcap:{uniforms:wr([Bu.common,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,Bu.fog,{matcap:{value:null}}]),vertexShader:Ou.meshmatcap_vert,fragmentShader:Ou.meshmatcap_frag},points:{uniforms:wr([Bu.points,Bu.fog]),vertexShader:Ou.points_vert,fragmentShader:Ou.points_frag},dashed:{uniforms:wr([Bu.common,Bu.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ou.linedashed_vert,fragmentShader:Ou.linedashed_frag},depth:{uniforms:wr([Bu.common,Bu.displacementmap]),vertexShader:Ou.depth_vert,fragmentShader:Ou.depth_frag},normal:{uniforms:wr([Bu.common,Bu.bumpmap,Bu.normalmap,Bu.displacementmap,{opacity:{value:1}}]),vertexShader:Ou.meshnormal_vert,fragmentShader:Ou.meshnormal_frag},sprite:{uniforms:wr([Bu.sprite,Bu.fog]),vertexShader:Ou.sprite_vert,fragmentShader:Ou.sprite_frag},background:{uniforms:{uvTransform:{value:new Ht},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ou.background_vert,fragmentShader:Ou.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ht}},vertexShader:Ou.backgroundCube_vert,fragmentShader:Ou.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ou.cube_vert,fragmentShader:Ou.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ou.equirect_vert,fragmentShader:Ou.equirect_frag},distanceRGBA:{uniforms:wr([Bu.common,Bu.displacementmap,{referencePosition:{value:new fi},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ou.distanceRGBA_vert,fragmentShader:Ou.distanceRGBA_frag},shadow:{uniforms:wr([Bu.lights,Bu.fog,{color:{value:new Bn(0)},opacity:{value:1}}]),vertexShader:Ou.shadow_vert,fragmentShader:Ou.shadow_frag}};Vu.physical={uniforms:wr([Vu.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ht},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ht},clearcoatNormalScale:{value:new Gt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ht},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ht},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ht},sheen:{value:0},sheenColor:{value:new Bn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ht},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ht},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ht},transmissionSamplerSize:{value:new Gt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ht},attenuationDistance:{value:0},attenuationColor:{value:new Bn(0)},specularColor:{value:new Bn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ht},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ht},anisotropyVector:{value:new Gt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ht}}]),vertexShader:Ou.meshphysical_vert,fragmentShader:Ou.meshphysical_frag};const zu={r:0,b:0,g:0},ku=new tn,Gu=new ji;function Hu(e,t,i,n,r,s,a){const o=new Bn(0);let l,u,c=!0===s?0:1,h=null,d=0,p=null;function m(e){let n=!0===e.isScene?e.background:null;if(n&&n.isTexture){n=(e.backgroundBlurriness>0?i:t).get(n)}return n}function f(t,i){t.getRGB(zu,Er(e)),n.buffers.color.setClear(zu.r,zu.g,zu.b,i,a)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),c=t,f(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,f(o,c)},render:function(t){let i=!1;const r=m(t);null===r?f(o,c):r&&r.isColor&&(f(r,1),i=!0);const s=e.xr.getEnvironmentBlendMode();"additive"===s?n.buffers.color.setClear(0,0,0,1,a):"alpha-blend"===s&&n.buffers.color.setClear(0,0,0,0,a),(e.autoClear||i)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil))},addToRenderList:function(t,i){const n=m(i);n&&(n.isCubeTexture||n.mapping===$)?(void 0===u&&(u=new br(new Sr(1,1,1),new Rr({name:"BackgroundCubeMaterial",uniforms:Mr(Vu.backgroundCube.uniforms),vertexShader:Vu.backgroundCube.vertexShader,fragmentShader:Vu.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),ku.copy(i.backgroundRotation),ku.x*=-1,ku.y*=-1,ku.z*=-1,n.isCubeTexture&&!1===n.isRenderTargetTexture&&(ku.y*=-1,ku.z*=-1),u.material.uniforms.envMap.value=n,u.material.uniforms.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=i.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(Gu.makeRotationFromEuler(ku)),u.material.toneMapped=Jt.getTransfer(n.colorSpace)!==ft,h===n&&d===n.version&&p===e.toneMapping||(u.material.needsUpdate=!0,h=n,d=n.version,p=e.toneMapping),u.layers.enableAll(),t.unshift(u,u.geometry,u.material,0,0,null)):n&&n.isTexture&&(void 0===l&&(l=new br(new wo(2,2),new Rr({name:"BackgroundMaterial",uniforms:Mr(Vu.background.uniforms),vertexShader:Vu.background.vertexShader,fragmentShader:Vu.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=n,l.material.uniforms.backgroundIntensity.value=i.backgroundIntensity,l.material.toneMapped=Jt.getTransfer(n.colorSpace)!==ft,!0===n.matrixAutoUpdate&&n.updateMatrix(),l.material.uniforms.uvTransform.value.copy(n.matrix),h===n&&d===n.version&&p===e.toneMapping||(l.material.needsUpdate=!0,h=n,d=n.version,p=e.toneMapping),l.layers.enableAll(),t.unshift(l,l.geometry,l.material,0,0,null))},dispose:function(){void 0!==u&&(u.geometry.dispose(),u.material.dispose(),u=void 0),void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}}}function Wu(e,t){const i=e.getParameter(e.MAX_VERTEX_ATTRIBS),n={},r=u(null);let s=r,a=!1;function o(t){return e.bindVertexArray(t)}function l(t){return e.deleteVertexArray(t)}function u(e){const t=[],n=[],r=[];for(let s=0;s<i;s++)t[s]=0,n[s]=0,r[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function c(){const e=s.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function h(e){d(e,0)}function d(t,i){const n=s.newAttributes,r=s.enabledAttributes,a=s.attributeDivisors;n[t]=1,0===r[t]&&(e.enableVertexAttribArray(t),r[t]=1),a[t]!==i&&(e.vertexAttribDivisor(t,i),a[t]=i)}function p(){const t=s.newAttributes,i=s.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function m(t,i,n,r,s,a,o){!0===o?e.vertexAttribIPointer(t,i,n,s,a):e.vertexAttribPointer(t,i,n,r,s,a)}function f(){g(),a=!0,s!==r&&(s=r,o(s.object))}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(i,r,l,f,g){let _=!1;const v=function(t,i,r){const s=!0===r.wireframe;let a=n[t.id];void 0===a&&(a={},n[t.id]=a);let o=a[i.id];void 0===o&&(o={},a[i.id]=o);let l=o[s];void 0===l&&(l=u(e.createVertexArray()),o[s]=l);return l}(f,l,r);s!==v&&(s=v,o(s.object)),_=function(e,t,i,n){const r=s.attributes,a=t.attributes;let o=0;const l=i.getAttributes();for(const s in l){if(l[s].location>=0){const t=r[s];let i=a[s];if(void 0===i&&("instanceMatrix"===s&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(i=e.instanceColor)),void 0===t)return!0;if(t.attribute!==i)return!0;if(i&&t.data!==i.data)return!0;o++}}return s.attributesNum!==o||s.index!==n}(i,f,l,g),_&&function(e,t,i,n){const r={},a=t.attributes;let o=0;const l=i.getAttributes();for(const s in l){if(l[s].location>=0){let t=a[s];void 0===t&&("instanceMatrix"===s&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===s&&e.instanceColor&&(t=e.instanceColor));const i={};i.attribute=t,t&&t.data&&(i.data=t.data),r[s]=i,o++}}s.attributes=r,s.attributesNum=o,s.index=n}(i,f,l,g),null!==g&&t.update(g,e.ELEMENT_ARRAY_BUFFER),(_||a)&&(a=!1,function(i,n,r,s){c();const a=s.attributes,o=r.getAttributes(),l=n.defaultAttributeValues;for(const u in o){const n=o[u];if(n.location>=0){let r=a[u];if(void 0===r&&("instanceMatrix"===u&&i.instanceMatrix&&(r=i.instanceMatrix),"instanceColor"===u&&i.instanceColor&&(r=i.instanceColor)),void 0!==r){const a=r.normalized,o=r.itemSize,l=t.get(r);if(void 0===l)continue;const u=l.buffer,c=l.type,p=l.bytesPerElement,f=c===e.INT||c===e.UNSIGNED_INT||r.gpuType===oe;if(r.isInterleavedBufferAttribute){const t=r.data,l=t.stride,g=r.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<n.locationSize;e++)d(n.location+e,t.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<n.locationSize;e++)h(n.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<n.locationSize;e++)m(n.location+e,o/n.locationSize,c,a,l*p,(g+o/n.locationSize*e)*p,f)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<n.locationSize;e++)d(n.location+e,r.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<n.locationSize;e++)h(n.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<n.locationSize;e++)m(n.location+e,o/n.locationSize,c,a,o*p,o/n.locationSize*e*p,f)}}else if(void 0!==l){const t=l[u];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(n.location,t);break;case 3:e.vertexAttrib3fv(n.location,t);break;case 4:e.vertexAttrib4fv(n.location,t);break;default:e.vertexAttrib1fv(n.location,t)}}}}p()}(i,r,l,f),null!==g&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(g).buffer))},reset:f,resetDefaultState:g,dispose:function(){f();for(const e in n){const t=n[e];for(const e in t){const i=t[e];for(const e in i)l(i[e].object),delete i[e];delete t[e]}delete n[e]}},releaseStatesOfGeometry:function(e){if(void 0===n[e.id])return;const t=n[e.id];for(const i in t){const e=t[i];for(const t in e)l(e[t].object),delete e[t];delete t[i]}delete n[e.id]},releaseStatesOfProgram:function(e){for(const t in n){const i=n[t];if(void 0===i[e.id])continue;const r=i[e.id];for(const e in r)l(r[e].object),delete r[e];delete i[e.id]}},initAttributes:c,enableAttribute:h,disableUnusedAttributes:p}}function ju(e,t,i){let n;function r(t,r,s){0!==s&&(e.drawArraysInstanced(n,t,r,s),i.update(r,n,s))}this.setMode=function(e){n=e},this.render=function(t,r){e.drawArrays(n,t,r),i.update(r,n,1)},this.renderInstances=r,this.renderMultiDraw=function(e,r,s){if(0===s)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,e,0,r,0,s);let a=0;for(let t=0;t<s;t++)a+=r[t];i.update(a,n,1)},this.renderMultiDrawInstances=function(e,s,a,o){if(0===a)return;const l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<e.length;t++)r(e[t],s[t],o[t]);else{l.multiDrawArraysInstancedWEBGL(n,e,0,s,0,o,0,a);let t=0;for(let e=0;e<a;e++)t+=s[e]*o[e];i.update(t,n,1)}}}function Xu(e,t,i,n){let r;function s(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==i.precision?i.precision:"highp";const o=s(a);o!==a&&(a=o);const l=!0===i.logarithmicDepthBuffer,u=!0===i.reverseDepthBuffer&&t.has("EXT_clip_control"),c=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const i=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,textureFormatReadable:function(t){return t===_e||n.convert(t)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(i){const r=i===ce&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(i!==ne&&n.convert(i)!==e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE)&&i!==ue&&!r)},precision:a,logarithmicDepthBuffer:l,reverseDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:e.getParameter(e.MAX_TEXTURE_SIZE),maxCubemapSize:e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:e.getParameter(e.MAX_VERTEX_ATTRIBS),maxVertexUniforms:e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:e.getParameter(e.MAX_VARYING_VECTORS),maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function $u(e){const t=this;let i=null,n=0,r=!1,s=!1;const a=new Us,o=new Ht,l={value:null,needsUpdate:!1};function u(e,i,n,r){const s=null!==e?e.length:0;let u=null;if(0!==s){if(u=l.value,!0!==r||null===u){const t=n+4*s,r=i.matrixWorldInverse;o.getNormalMatrix(r),(null===u||u.length<t)&&(u=new Float32Array(t));for(let i=0,l=n;i!==s;++i,l+=4)a.copy(e[i]).applyMatrix4(r,o),a.normal.toArray(u,l),u[l+3]=a.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const i=0!==e.length||t||0!==n||r;return r=t,n=e.length,i},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(e,t){i=u(e,t,0)},this.setState=function(a,o,c){const h=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,m=e.get(a);if(!r||null===h||0===h.length||s&&!p)s?u(null):function(){l.value!==i&&(l.value=i,l.needsUpdate=n>0);t.numPlanes=n,t.numIntersection=0}();else{const e=s?0:n,t=4*e;let r=m.clippingState||null;l.value=r,r=u(h,o,t,c);for(let n=0;n!==t;++n)r[n]=i[n];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function qu(e){let t=new WeakMap;function i(e,t){return t===j?e.mapping=H:t===X&&(e.mapping=W),e}function n(e){const i=e.target;i.removeEventListener("dispose",n);const r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping;if(s===j||s===X){if(t.has(r)){return i(t.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=new Or(s.height);return a.fromEquirectangularTexture(e,r),t.set(r,a),r.addEventListener("dispose",n),i(a.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}const Yu=[.125,.215,.35,.446,.526,.582],Ku=20,Zu=new Nl,Qu=new Bn;let Ju=null,ec=0,tc=0,ic=!1;const nc=(1+Math.sqrt(5))/2,rc=1/nc,sc=[new fi(-nc,rc,0),new fi(nc,rc,0),new fi(-rc,0,nc),new fi(rc,0,nc),new fi(0,nc,-rc),new fi(0,nc,rc),new fi(-1,1,-1),new fi(1,1,-1),new fi(-1,1,1),new fi(1,1,1)],ac=new fi;let oc=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,r={}){const{size:s=256,position:a=ac}=r;Ju=this._renderer.getRenderTarget(),ec=this._renderer.getActiveCubeFace(),tc=this._renderer.getActiveMipmapLevel(),ic=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(s);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(e,i,n,o,a),t>0&&this._blur(o,0,0,t),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=hc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=cc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ju,ec,tc),this._renderer.xr.enabled=ic,e.scissorTest=!1,uc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===H||e.mapping===W?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ju=this._renderer.getRenderTarget(),ec=this._renderer.getActiveCubeFace(),tc=this._renderer.getActiveMipmapLevel(),ic=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ee,minFilter:ee,generateMipmaps:!1,type:ce,format:_e,colorSpace:pt,depthBuffer:!1},n=lc(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=lc(e,t,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],i=[],n=[];let r=e;const s=e-4+1+Yu.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);i.push(s);let o=1/s;a>e-4?o=Yu[a-e+4-1]:0===a&&(o=0),n.push(o);const l=1/(s-2),u=-l,c=1+l,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,m=3,f=2,g=1,_=new Float32Array(m*p*d),v=new Float32Array(f*p*d),x=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,i=e>2?0:-1,n=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];_.set(n,m*p*e),v.set(h,f*p*e);const r=[e,e,e,e,e,e];x.set(r,g*p*e)}const y=new ur;y.setAttribute("position",new Zn(_,m)),y.setAttribute("uv",new Zn(v,f)),y.setAttribute("faceIndex",new Zn(x,g)),t.push(y),r>4&&r--}return{lodPlanes:t,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=function(e,t,i){const n=new Float32Array(Ku),r=new fi(0,1,0),s=new Rr({name:"SphericalGaussianBlur",defines:{n:Ku,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:dc(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return s}(n,e,t)}return n}_compileMaterial(e){const t=new br(this._lodPlanes[0],e);this._renderer.compile(t,Zu)}_sceneToCubeUV(e,t,i,n,r){const s=new Ir(90,1,t,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,u=l.autoClear,c=l.toneMapping;l.getClearColor(Qu),l.toneMapping=0,l.autoClear=!1;const h=new Gn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new br(new Sr,h);let p=!1;const m=e.background;m?m.isColor&&(h.color.copy(m),e.background=null,p=!0):(h.color.copy(Qu),p=!0);for(let f=0;f<6;f++){const t=f%3;0===t?(s.up.set(0,a[f],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x+o[f],r.y,r.z)):1===t?(s.up.set(0,0,a[f]),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y+o[f],r.z)):(s.up.set(0,a[f],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y,r.z+o[f]));const i=this._cubeSize;uc(n,t*i,f>2?i:0,i,i),l.setRenderTarget(n),p&&l.render(d,s),l.render(e,s)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=c,l.autoClear=u,e.background=m}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===H||e.mapping===W;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=hc()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=cc());const r=n?this._cubemapMaterial:this._equirectMaterial,s=new br(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const a=this._cubeSize;uc(t,0,0,3*a,2*a),i.setRenderTarget(t),i.render(s,Zu)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const t=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),i=sc[(n-r-1)%sc.length];this._blur(e,r-1,r,t,i)}t.autoClear=i}_blur(e,t,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,s,a){const o=this._renderer,l=this._blurMaterial,u=new br(this._lodPlanes[n],l),c=l.uniforms,h=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):Ku,f=[];let g=0;for(let x=0;x<Ku;++x){const e=x/p,t=Math.exp(-e*e/2);f.push(t),0===x?g+=t:x<m&&(g+=2*t)}for(let x=0;x<f.length;x++)f[x]=f[x]/g;c.envMap.value=e.texture,c.samples.value=m,c.weights.value=f,c.latitudinal.value="latitudinal"===s,a&&(c.poleAxis.value=a);const{_lodMax:_}=this;c.dTheta.value=d,c.mipInt.value=_-i;const v=this._sizeLods[n];uc(t,3*v*(n>_-4?n-_+4:0),4*(this._cubeSize-v),3*v,2*v),o.setRenderTarget(t),o.render(u,Zu)}};function lc(e,t,i){const n=new hi(e,t,i);return n.texture.mapping=$,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function uc(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function cc(){return new Rr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:dc(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function hc(){return new Rr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:dc(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function dc(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function pc(e){let t=new WeakMap,i=null;function n(e){const i=e.target;i.removeEventListener("dispose",n);const r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping,a=s===j||s===X,o=s===H||s===W;if(a||o){let s=t.get(r);const l=void 0!==s?s.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===i&&(i=new oc(e)),s=a?i.fromEquirectangular(r,s):i.fromCubemap(r,s),s.texture.pmremVersion=r.pmremVersion,t.set(r,s),s.texture;if(void 0!==s)return s.texture;{const l=r.image;return a&&l&&l.height>0||o&&l&&function(e){let t=0;const i=6;for(let n=0;n<i;n++)void 0!==e[n]&&t++;return t===i}(l)?(null===i&&(i=new oc(e)),s=a?i.fromEquirectangular(r):i.fromCubemap(r),s.texture.pmremVersion=r.pmremVersion,t.set(r,s),r.addEventListener("dispose",n),s.texture):null}}}return r},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function mc(e){const t={};function i(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(){i("EXT_color_buffer_float"),i("WEBGL_clip_cull_distance"),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture"),i("WEBGL_render_shared_exponent")},get:function(e){const t=i(e);return null===t&&Yt("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function fc(e,t,i,n){const r={},s=new WeakMap;function a(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const i in o.attributes)t.remove(o.attributes[i]);o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(t.remove(l),s.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){const i=[],n=e.index,r=e.attributes.position;let a=0;if(null!==n){const e=n.array;a=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],r=e[t+1],s=e[t+2];i.push(n,r,r,s,s,n)}}else{if(void 0===r)return;{const e=r.array;a=r.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,r=t+2;i.push(e,n,n,r,r,e)}}}const o=new(jt(i)?Jn:Qn)(i,1);o.version=a;const l=s.get(e);l&&t.remove(l),s.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",a),r[t.id]=!0,i.memory.geometries++),t},update:function(i){const n=i.attributes;for(const r in n)t.update(n[r],e.ARRAY_BUFFER)},getWireframeAttribute:function(e){const t=s.get(e);if(t){const i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return s.get(e)}}}function gc(e,t,i){let n,r,s;function a(t,a,o){0!==o&&(e.drawElementsInstanced(n,a,r,t*s,o),i.update(a,n,o))}this.setMode=function(e){n=e},this.setIndex=function(e){r=e.type,s=e.bytesPerElement},this.render=function(t,a){e.drawElements(n,a,r,t*s),i.update(a,n,1)},this.renderInstances=a,this.renderMultiDraw=function(e,s,a){if(0===a)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,s,0,r,e,0,a);let o=0;for(let t=0;t<a;t++)o+=s[t];i.update(o,n,1)},this.renderMultiDrawInstances=function(e,o,l,u){if(0===l)return;const c=t.get("WEBGL_multi_draw");if(null===c)for(let t=0;t<e.length;t++)a(e[t]/s,o[t],u[t]);else{c.multiDrawElementsInstancedWEBGL(n,o,0,r,e,0,u,0,l);let t=0;for(let e=0;e<l;e++)t+=o[e]*u[e];i.update(t,n,1)}}}function _c(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(i,n,r){switch(t.calls++,n){case e.TRIANGLES:t.triangles+=r*(i/3);break;case e.LINES:t.lines+=r*(i/2);break;case e.LINE_STRIP:t.lines+=r*(i-1);break;case e.LINE_LOOP:t.lines+=r*i;break;case e.POINTS:t.points+=r*i}}}}function vc(e,t,i){const n=new WeakMap,r=new ui;return{update:function(s,a,o){const l=s.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,c=void 0!==u?u.length:0;let h=n.get(a);if(void 0===h||h.count!==c){let e=function(){_.dispose(),n.delete(a),a.removeEventListener("dispose",e)};void 0!==h&&h.texture.dispose();const i=void 0!==a.morphAttributes.position,s=void 0!==a.morphAttributes.normal,o=void 0!==a.morphAttributes.color,l=a.morphAttributes.position||[],u=a.morphAttributes.normal||[],d=a.morphAttributes.color||[];let p=0;!0===i&&(p=1),!0===s&&(p=2),!0===o&&(p=3);let m=a.attributes.position.count*p,f=1;m>t.maxTextureSize&&(f=Math.ceil(m/t.maxTextureSize),m=t.maxTextureSize);const g=new Float32Array(m*f*4*c),_=new di(g,m,f,c);_.type=ue,_.needsUpdate=!0;const v=4*p;for(let t=0;t<c;t++){const e=l[t],n=u[t],a=d[t],c=m*f*4*t;for(let t=0;t<e.count;t++){const l=t*v;!0===i&&(r.fromBufferAttribute(e,t),g[c+l+0]=r.x,g[c+l+1]=r.y,g[c+l+2]=r.z,g[c+l+3]=0),!0===s&&(r.fromBufferAttribute(n,t),g[c+l+4]=r.x,g[c+l+5]=r.y,g[c+l+6]=r.z,g[c+l+7]=0),!0===o&&(r.fromBufferAttribute(a,t),g[c+l+8]=r.x,g[c+l+9]=r.y,g[c+l+10]=r.z,g[c+l+11]=4===a.itemSize?r.w:1)}}h={count:c,texture:_,size:new Gt(m,f)},n.set(a,h),a.addEventListener("dispose",e)}if(!0===s.isInstancedMesh&&null!==s.morphTexture)o.getUniforms().setValue(e,"morphTexture",s.morphTexture,i);else{let t=0;for(let e=0;e<l.length;e++)t+=l[e];const i=a.morphTargetsRelative?1:1-t;o.getUniforms().setValue(e,"morphTargetBaseInfluence",i),o.getUniforms().setValue(e,"morphTargetInfluences",l)}o.getUniforms().setValue(e,"morphTargetsTexture",h.texture,i),o.getUniforms().setValue(e,"morphTargetsTextureSize",h.size)}}}function xc(e,t,i,n){let r=new WeakMap;function s(e){const t=e.target;t.removeEventListener("dispose",s),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(a){const o=n.render.frame,l=a.geometry,u=t.get(a,l);if(r.get(u)!==o&&(t.update(u),r.set(u,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),r.get(a)!==o&&(i.update(a.instanceMatrix,e.ARRAY_BUFFER),null!==a.instanceColor&&i.update(a.instanceColor,e.ARRAY_BUFFER),r.set(a,o))),a.isSkinnedMesh){const e=a.skeleton;r.get(e)!==o&&(e.update(),r.set(e,o))}return u},dispose:function(){r=new WeakMap}}}const yc=new li,bc=new da(1,1),Tc=new di,Sc=new pi,Mc=new Fr,wc=[],Ec=[],Ac=new Float32Array(16),Rc=new Float32Array(9),Cc=new Float32Array(4);function Nc(e,t,i){const n=e[0];if(n<=0||n>0)return e;const r=t*i;let s=wc[r];if(void 0===s&&(s=new Float32Array(r),wc[r]=s),0!==t){n.toArray(s,0);for(let n=1,r=0;n!==t;++n)r+=i,e[n].toArray(s,r)}return s}function Pc(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function Lc(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function Ic(e,t){let i=Ec[t];void 0===i&&(i=new Int32Array(t),Ec[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function Dc(e,t){const i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function Uc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(Pc(i,t))return;e.uniform2fv(this.addr,t),Lc(i,t)}}function Fc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)i[0]===t.r&&i[1]===t.g&&i[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(Pc(i,t))return;e.uniform3fv(this.addr,t),Lc(i,t)}}function Oc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(Pc(i,t))return;e.uniform4fv(this.addr,t),Lc(i,t)}}function Bc(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Pc(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),Lc(i,t)}else{if(Pc(i,n))return;Cc.set(n),e.uniformMatrix2fv(this.addr,!1,Cc),Lc(i,n)}}function Vc(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Pc(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),Lc(i,t)}else{if(Pc(i,n))return;Rc.set(n),e.uniformMatrix3fv(this.addr,!1,Rc),Lc(i,n)}}function zc(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Pc(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),Lc(i,t)}else{if(Pc(i,n))return;Ac.set(n),e.uniformMatrix4fv(this.addr,!1,Ac),Lc(i,n)}}function kc(e,t){const i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function Gc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(Pc(i,t))return;e.uniform2iv(this.addr,t),Lc(i,t)}}function Hc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(Pc(i,t))return;e.uniform3iv(this.addr,t),Lc(i,t)}}function Wc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(Pc(i,t))return;e.uniform4iv(this.addr,t),Lc(i,t)}}function jc(e,t){const i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function Xc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(Pc(i,t))return;e.uniform2uiv(this.addr,t),Lc(i,t)}}function $c(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(Pc(i,t))return;e.uniform3uiv(this.addr,t),Lc(i,t)}}function qc(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(Pc(i,t))return;e.uniform4uiv(this.addr,t),Lc(i,t)}}function Yc(e,t,i){const n=this.cache,r=i.allocateTextureUnit();let s;n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),this.type===e.SAMPLER_2D_SHADOW?(bc.compareFunction=yt,s=bc):s=yc,i.setTexture2D(t||s,r)}function Kc(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||Sc,r)}function Zc(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||Mc,r)}function Qc(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||Tc,r)}function Jc(e,t){e.uniform1fv(this.addr,t)}function eh(e,t){const i=Nc(t,this.size,2);e.uniform2fv(this.addr,i)}function th(e,t){const i=Nc(t,this.size,3);e.uniform3fv(this.addr,i)}function ih(e,t){const i=Nc(t,this.size,4);e.uniform4fv(this.addr,i)}function nh(e,t){const i=Nc(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function rh(e,t){const i=Nc(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function sh(e,t){const i=Nc(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function ah(e,t){e.uniform1iv(this.addr,t)}function oh(e,t){e.uniform2iv(this.addr,t)}function lh(e,t){e.uniform3iv(this.addr,t)}function uh(e,t){e.uniform4iv(this.addr,t)}function ch(e,t){e.uniform1uiv(this.addr,t)}function hh(e,t){e.uniform2uiv(this.addr,t)}function dh(e,t){e.uniform3uiv(this.addr,t)}function ph(e,t){e.uniform4uiv(this.addr,t)}function mh(e,t,i){const n=this.cache,r=t.length,s=Ic(i,r);Pc(n,s)||(e.uniform1iv(this.addr,s),Lc(n,s));for(let a=0;a!==r;++a)i.setTexture2D(t[a]||yc,s[a])}function fh(e,t,i){const n=this.cache,r=t.length,s=Ic(i,r);Pc(n,s)||(e.uniform1iv(this.addr,s),Lc(n,s));for(let a=0;a!==r;++a)i.setTexture3D(t[a]||Sc,s[a])}function gh(e,t,i){const n=this.cache,r=t.length,s=Ic(i,r);Pc(n,s)||(e.uniform1iv(this.addr,s),Lc(n,s));for(let a=0;a!==r;++a)i.setTextureCube(t[a]||Mc,s[a])}function _h(e,t,i){const n=this.cache,r=t.length,s=Ic(i,r);Pc(n,s)||(e.uniform1iv(this.addr,s),Lc(n,s));for(let a=0;a!==r;++a)i.setTexture2DArray(t[a]||Tc,s[a])}class vh{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return Dc;case 35664:return Uc;case 35665:return Fc;case 35666:return Oc;case 35674:return Bc;case 35675:return Vc;case 35676:return zc;case 5124:case 35670:return kc;case 35667:case 35671:return Gc;case 35668:case 35672:return Hc;case 35669:case 35673:return Wc;case 5125:return jc;case 36294:return Xc;case 36295:return $c;case 36296:return qc;case 35678:case 36198:case 36298:case 36306:case 35682:return Yc;case 35679:case 36299:case 36307:return Kc;case 35680:case 36300:case 36308:case 36293:return Zc;case 36289:case 36303:case 36311:case 36292:return Qc}}(t.type)}}class xh{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Jc;case 35664:return eh;case 35665:return th;case 35666:return ih;case 35674:return nh;case 35675:return rh;case 35676:return sh;case 5124:case 35670:return ah;case 35667:case 35671:return oh;case 35668:case 35672:return lh;case 35669:case 35673:return uh;case 5125:return ch;case 36294:return hh;case 36295:return dh;case 36296:return ph;case 35678:case 36198:case 36298:case 36306:case 35682:return mh;case 35679:case 36299:case 36307:return fh;case 35680:case 36300:case 36308:case 36293:return gh;case 36289:case 36303:case 36311:case 36292:return _h}}(t.type)}}class yh{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const s=n[r];s.setValue(e,t[s.id],i)}}}const bh=/(\w+)(\])?(\[|\.)?/g;function Th(e,t){e.seq.push(t),e.map[t.id]=t}function Sh(e,t,i){const n=e.name,r=n.length;for(bh.lastIndex=0;;){const s=bh.exec(n),a=bh.lastIndex;let o=s[1];const l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===r){Th(i,void 0===u?new vh(o,e,t):new xh(o,e,t));break}{let e=i.map[o];void 0===e&&(e=new yh(o),Th(i,e)),i=e}}}class Mh{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const i=e.getActiveUniform(t,n);Sh(i,e.getUniformLocation(t,i.name),this)}}setValue(e,t,i,n){const r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){const s=t[r],a=i[s.id];!1!==a.needsUpdate&&s.setValue(e,a.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const r=e[n];r.id in t&&i.push(r)}return i}}function wh(e,t,i){const n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let Eh=0;const Ah=new Ht;function Rh(e,t,i){const n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const i=e.split("\n"),n=[],r=Math.max(t-6,0),s=Math.min(t+6,i.length);for(let a=r;a<s;a++){const e=a+1;n.push(`${e===t?">":" "} ${e}: ${i[a]}`)}return n.join("\n")}(e.getShaderSource(t),n)}return r}function Ch(e,t){const i=function(e){Jt._getMatrix(Ah,Jt.workingColorSpace,e);const t=`mat3( ${Ah.elements.map((e=>e.toFixed(4)))} )`;switch(Jt.getTransfer(e)){case mt:return[t,"LinearTransferOETF"];case ft:return[t,"sRGBTransferOETF"];default:return[t,"LinearTransferOETF"]}}(t);return[`vec4 ${e}( vec4 value ) {`,`\treturn ${i[1]}( vec4( value.rgb * ${i[0]}, value.a ) );`,"}"].join("\n")}function Nh(e,t){let i;switch(t){case 1:default:i="Linear";break;case 2:i="Reinhard";break;case 3:i="Cineon";break;case 4:i="ACESFilmic";break;case 6:i="AgX";break;case 7:i="Neutral";break;case 5:i="Custom"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}const Ph=new fi;function Lh(){Jt.getLuminanceCoefficients(Ph);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${Ph.x.toFixed(4)}, ${Ph.y.toFixed(4)}, ${Ph.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function Ih(e){return""!==e}function Dh(e,t){const i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Uh(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Fh=/^[ \t]*#include +<([\w\d./]+)>/gm;function Oh(e){return e.replace(Fh,Vh)}const Bh=new Map;function Vh(e,t){let i=Ou[t];if(void 0===i){const e=Bh.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");i=Ou[e]}return Oh(i)}const zh=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kh(e){return e.replace(zh,Gh)}function Gh(e,t,i,n){let r="";for(let s=parseInt(t);s<parseInt(i);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Hh(e){let t=`precision ${e.precision} float;\n\tprecision ${e.precision} int;\n\tprecision ${e.precision} sampler2D;\n\tprecision ${e.precision} samplerCube;\n\tprecision ${e.precision} sampler3D;\n\tprecision ${e.precision} sampler2DArray;\n\tprecision ${e.precision} sampler2DShadow;\n\tprecision ${e.precision} samplerCubeShadow;\n\tprecision ${e.precision} sampler2DArrayShadow;\n\tprecision ${e.precision} isampler2D;\n\tprecision ${e.precision} isampler3D;\n\tprecision ${e.precision} isamplerCube;\n\tprecision ${e.precision} isampler2DArray;\n\tprecision ${e.precision} usampler2D;\n\tprecision ${e.precision} usampler3D;\n\tprecision ${e.precision} usamplerCube;\n\tprecision ${e.precision} usampler2DArray;\n\t`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Wh(e,t,i,n){const r=e.getContext(),s=i.defines;let a=i.vertexShader,o=i.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(i),u=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case H:case W:t="ENVMAP_TYPE_CUBE";break;case $:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),c=function(e){let t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===W&&(t="ENVMAP_MODE_REFRACTION");return t}(i),h=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(i),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const i=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:n,maxMip:i}}(i),p=function(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",e.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ih).join("\n")}(i),m=function(e){const t=[];for(const i in e){const n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(s),f=r.createProgram();let g,_,v=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(g=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,m].filter(Ih).join("\n"),g.length>0&&(g+="\n"),_=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,m].filter(Ih).join("\n"),_.length>0&&(_+="\n")):(g=[Hh(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,m,i.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",i.batching?"#define USE_BATCHING":"",i.batchingColor?"#define USE_BATCHING_COLOR":"",i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.instancingMorph?"#define USE_INSTANCING_MORPH":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ih).join("\n"),_=[Hh(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,m,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+u:"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.dispersion?"#define USE_DISPERSION":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.alphaHash?"#define USE_ALPHAHASH":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents&&!1===i.flatShading?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor||i.batchingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.numLightProbes>0?"#define USE_LIGHT_PROBES":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?Ou.tonemapping_pars_fragment:"",0!==i.toneMapping?Nh("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",Ou.colorspace_pars_fragment,Ch("linearToOutputTexel",i.outputColorSpace),Lh(),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Ih).join("\n")),a=Oh(a),a=Dh(a,i),a=Uh(a,i),o=Oh(o),o=Dh(o,i),o=Uh(o,i),a=kh(a),o=kh(o),!0!==i.isRawShaderMaterial&&(v="#version 300 es\n",g=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,_=["#define varying in",i.glslVersion===At?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===At?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_);const x=v+g+a,y=v+_+o,b=wh(r,r.VERTEX_SHADER,x),T=wh(r,r.FRAGMENT_SHADER,y);function S(t){if(e.debug.checkShaderErrors){const i=r.getProgramInfoLog(f).trim(),n=r.getShaderInfoLog(b).trim(),s=r.getShaderInfoLog(T).trim();let a=!0,o=!0;if(!1===r.getProgramParameter(f,r.LINK_STATUS))if(a=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(r,f,b,T);else{Rh(r,b,"vertex"),Rh(r,T,"fragment")}else""!==i||""!==n&&""!==s||(o=!1);o&&(t.diagnostics={runnable:a,programLog:i,vertexShader:{log:n,prefix:g},fragmentShader:{log:s,prefix:_}})}r.deleteShader(b),r.deleteShader(T),M=new Mh(r,f),w=function(e,t){const i={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const n=e.getActiveAttrib(t,r),s=n.name;let a=1;n.type===e.FLOAT_MAT2&&(a=2),n.type===e.FLOAT_MAT3&&(a=3),n.type===e.FLOAT_MAT4&&(a=4),i[s]={type:n.type,location:e.getAttribLocation(t,s),locationSize:a}}return i}(r,f)}let M,w;r.attachShader(f,b),r.attachShader(f,T),void 0!==i.index0AttributeName?r.bindAttribLocation(f,0,i.index0AttributeName):!0===i.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),this.getUniforms=function(){return void 0===M&&S(this),M},this.getAttributes=function(){return void 0===w&&S(this),w};let E=!1===i.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===E&&(E=r.getProgramParameter(f,37297)),E},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.type=i.shaderType,this.name=i.shaderName,this.id=Eh++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=b,this.fragmentShader=T,this}let jh=0;class Xh{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return!1===s.has(n)&&(s.add(n),n.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return void 0===i&&(i=new $h(e),t.set(e,i)),i}}class $h{constructor(e){this.id=jh++,this.code=e,this.usedTimes=0}}function qh(e,t,i,n,r,s,a){const o=new nn,l=new Xh,u=new Set,c=[],h=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(e){return u.add(e),0===e?"uv":`uv${e}`}return{getParameters:function(s,o,c,g,_){const v=g.fog,x=_.geometry,y=s.isMeshStandardMaterial?g.environment:null,b=(s.isMeshStandardMaterial?i:t).get(s.envMap||y),T=b&&b.mapping===$?b.image.height:null,S=m[s.type];null!==s.precision&&(p=r.getMaxPrecision(s.precision),s.precision);const M=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,w=void 0!==M?M.length:0;let E,A,R,C,N=0;if(void 0!==x.morphAttributes.position&&(N=1),void 0!==x.morphAttributes.normal&&(N=2),void 0!==x.morphAttributes.color&&(N=3),S){const e=Vu[S];E=e.vertexShader,A=e.fragmentShader}else E=s.vertexShader,A=s.fragmentShader,l.update(s),R=l.getVertexShaderID(s),C=l.getFragmentShaderID(s);const P=e.getRenderTarget(),L=e.state.buffers.depth.getReversed(),I=!0===_.isInstancedMesh,D=!0===_.isBatchedMesh,U=!!s.map,F=!!s.matcap,O=!!b,B=!!s.aoMap,V=!!s.lightMap,z=!!s.bumpMap,k=!!s.normalMap,G=!!s.displacementMap,H=!!s.emissiveMap,W=!!s.metalnessMap,j=!!s.roughnessMap,X=s.anisotropy>0,q=s.clearcoat>0,Y=s.dispersion>0,K=s.iridescence>0,Z=s.sheen>0,Q=s.transmission>0,J=X&&!!s.anisotropyMap,ee=q&&!!s.clearcoatMap,te=q&&!!s.clearcoatNormalMap,ie=q&&!!s.clearcoatRoughnessMap,ne=K&&!!s.iridescenceMap,re=K&&!!s.iridescenceThicknessMap,se=Z&&!!s.sheenColorMap,ae=Z&&!!s.sheenRoughnessMap,oe=!!s.specularMap,le=!!s.specularColorMap,ue=!!s.specularIntensityMap,ce=Q&&!!s.transmissionMap,he=Q&&!!s.thicknessMap,de=!!s.gradientMap,pe=!!s.alphaMap,me=s.alphaTest>0,fe=!!s.alphaHash,ge=!!s.extensions;let _e=0;s.toneMapped&&(null!==P&&!0!==P.isXRRenderTarget||(_e=e.toneMapping));const ve={shaderID:S,shaderType:s.type,shaderName:s.name,vertexShader:E,fragmentShader:A,defines:s.defines,customVertexShaderID:R,customFragmentShaderID:C,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,batching:D,batchingColor:D&&null!==_._colorsTexture,instancing:I,instancingColor:I&&null!==_.instanceColor,instancingMorph:I&&null!==_.morphTexture,supportsVertexTextures:d,outputColorSpace:null===P?e.outputColorSpace:!0===P.isXRRenderTarget?P.texture.colorSpace:pt,alphaToCoverage:!!s.alphaToCoverage,map:U,matcap:F,envMap:O,envMapMode:O&&b.mapping,envMapCubeUVHeight:T,aoMap:B,lightMap:V,bumpMap:z,normalMap:k,displacementMap:d&&G,emissiveMap:H,normalMapObjectSpace:k&&1===s.normalMapType,normalMapTangentSpace:k&&0===s.normalMapType,metalnessMap:W,roughnessMap:j,anisotropy:X,anisotropyMap:J,clearcoat:q,clearcoatMap:ee,clearcoatNormalMap:te,clearcoatRoughnessMap:ie,dispersion:Y,iridescence:K,iridescenceMap:ne,iridescenceThicknessMap:re,sheen:Z,sheenColorMap:se,sheenRoughnessMap:ae,specularMap:oe,specularColorMap:le,specularIntensityMap:ue,transmission:Q,transmissionMap:ce,thicknessMap:he,gradientMap:de,opaque:!1===s.transparent&&1===s.blending&&!1===s.alphaToCoverage,alphaMap:pe,alphaTest:me,alphaHash:fe,combine:s.combine,mapUv:U&&f(s.map.channel),aoMapUv:B&&f(s.aoMap.channel),lightMapUv:V&&f(s.lightMap.channel),bumpMapUv:z&&f(s.bumpMap.channel),normalMapUv:k&&f(s.normalMap.channel),displacementMapUv:G&&f(s.displacementMap.channel),emissiveMapUv:H&&f(s.emissiveMap.channel),metalnessMapUv:W&&f(s.metalnessMap.channel),roughnessMapUv:j&&f(s.roughnessMap.channel),anisotropyMapUv:J&&f(s.anisotropyMap.channel),clearcoatMapUv:ee&&f(s.clearcoatMap.channel),clearcoatNormalMapUv:te&&f(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ie&&f(s.clearcoatRoughnessMap.channel),iridescenceMapUv:ne&&f(s.iridescenceMap.channel),iridescenceThicknessMapUv:re&&f(s.iridescenceThicknessMap.channel),sheenColorMapUv:se&&f(s.sheenColorMap.channel),sheenRoughnessMapUv:ae&&f(s.sheenRoughnessMap.channel),specularMapUv:oe&&f(s.specularMap.channel),specularColorMapUv:le&&f(s.specularColorMap.channel),specularIntensityMapUv:ue&&f(s.specularIntensityMap.channel),transmissionMapUv:ce&&f(s.transmissionMap.channel),thicknessMapUv:he&&f(s.thicknessMap.channel),alphaMapUv:pe&&f(s.alphaMap.channel),vertexTangents:!!x.attributes.tangent&&(k||X),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,pointsUvs:!0===_.isPoints&&!!x.attributes.uv&&(U||pe),fog:!!v,useFog:!0===s.fog,fogExp2:!!v&&v.isFogExp2,flatShading:!0===s.flatShading,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:h,reverseDepthBuffer:L,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:w,morphTextureStride:N,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:_e,decodeVideoTexture:U&&!0===s.map.isVideoTexture&&Jt.getTransfer(s.map.colorSpace)===ft,decodeVideoTextureEmissive:H&&!0===s.emissiveMap.isVideoTexture&&Jt.getTransfer(s.emissiveMap.colorSpace)===ft,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionClipCullDistance:ge&&!0===s.extensions.clipCullDistance&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ge&&!0===s.extensions.multiDraw||D)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:s.customProgramCacheKey()};return ve.vertexUv1s=u.has(1),ve.vertexUv2s=u.has(2),ve.vertexUv3s=u.has(3),u.clear(),ve},getProgramCacheKey:function(t){const i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.customVertexShaderID),i.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)i.push(e),i.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(!function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(i,t),function(e,t){o.disableAll(),t.supportsVertexTextures&&o.enable(0);t.instancing&&o.enable(1);t.instancingColor&&o.enable(2);t.instancingMorph&&o.enable(3);t.matcap&&o.enable(4);t.envMap&&o.enable(5);t.normalMapObjectSpace&&o.enable(6);t.normalMapTangentSpace&&o.enable(7);t.clearcoat&&o.enable(8);t.iridescence&&o.enable(9);t.alphaTest&&o.enable(10);t.vertexColors&&o.enable(11);t.vertexAlphas&&o.enable(12);t.vertexUv1s&&o.enable(13);t.vertexUv2s&&o.enable(14);t.vertexUv3s&&o.enable(15);t.vertexTangents&&o.enable(16);t.anisotropy&&o.enable(17);t.alphaHash&&o.enable(18);t.batching&&o.enable(19);t.dispersion&&o.enable(20);t.batchingColor&&o.enable(21);e.push(o.mask),o.disableAll(),t.fog&&o.enable(0);t.useFog&&o.enable(1);t.flatShading&&o.enable(2);t.logarithmicDepthBuffer&&o.enable(3);t.reverseDepthBuffer&&o.enable(4);t.skinning&&o.enable(5);t.morphTargets&&o.enable(6);t.morphNormals&&o.enable(7);t.morphColors&&o.enable(8);t.premultipliedAlpha&&o.enable(9);t.shadowMapEnabled&&o.enable(10);t.doubleSided&&o.enable(11);t.flipSided&&o.enable(12);t.useDepthPacking&&o.enable(13);t.dithering&&o.enable(14);t.transmission&&o.enable(15);t.sheen&&o.enable(16);t.opaque&&o.enable(17);t.pointsUvs&&o.enable(18);t.decodeVideoTexture&&o.enable(19);t.decodeVideoTextureEmissive&&o.enable(20);t.alphaToCoverage&&o.enable(21);e.push(o.mask)}(i,t),i.push(e.outputColorSpace)),i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){const t=m[e.type];let i;if(t){const e=Vu[t];i=Ar.clone(e.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let n;for(let e=0,r=c.length;e<r;e++){const t=c[e];if(t.cacheKey===i){n=t,++n.usedTimes;break}}return void 0===n&&(n=new Wh(e,i,t,s),c.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:c,dispose:function(){l.dispose()}}}function Yh(){let e=new WeakMap;return{has:function(t){return e.has(t)},get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function Kh(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Zh(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Qh(){const e=[];let t=0;const i=[],n=[],r=[];function s(i,n,r,s,a,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:s,renderOrder:i.renderOrder,z:a,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=s,l.renderOrder=i.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){t=0,i.length=0,n.length=0,r.length=0},push:function(e,t,a,o,l,u){const c=s(e,t,a,o,l,u);a.transmission>0?n.push(c):!0===a.transparent?r.push(c):i.push(c)},unshift:function(e,t,a,o,l,u){const c=s(e,t,a,o,l,u);a.transmission>0?n.unshift(c):!0===a.transparent?r.unshift(c):i.unshift(c)},finish:function(){for(let i=t,n=e.length;i<n;i++){const t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){i.length>1&&i.sort(e||Kh),n.length>1&&n.sort(t||Zh),r.length>1&&r.sort(t||Zh)}}}function Jh(){let e=new WeakMap;return{get:function(t,i){const n=e.get(t);let r;return void 0===n?(r=new Qh,e.set(t,[r])):i>=n.length?(r=new Qh,n.push(r)):r=n[i],r},dispose:function(){e=new WeakMap}}}function ed(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new fi,color:new Bn};break;case"SpotLight":i={position:new fi,direction:new fi,color:new Bn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new fi,color:new Bn,distance:0,decay:0};break;case"HemisphereLight":i={direction:new fi,skyColor:new Bn,groundColor:new Bn};break;case"RectAreaLight":i={color:new Bn,position:new fi,halfWidth:new fi,halfHeight:new fi}}return e[t.id]=i,i}}}let td=0;function id(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function nd(e){const t=new ed,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Gt};break;case"PointLight":i={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Gt,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let o=0;o<9;o++)n.probe.push(new fi);const r=new fi,s=new ji,a=new ji;return{setup:function(r){let s=0,a=0,o=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let l=0,u=0,c=0,h=0,d=0,p=0,m=0,f=0,g=0,_=0,v=0;r.sort(id);for(let e=0,y=r.length;e<y;e++){const x=r[e],y=x.color,b=x.intensity,T=x.distance,S=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)s+=y.r*b,a+=y.g*b,o+=y.b*b;else if(x.isLightProbe){for(let e=0;e<9;e++)n.probe[e].addScaledVector(x.sh.coefficients[e],b);v++}else if(x.isDirectionalLight){const e=t.get(x);if(e.color.copy(x.color).multiplyScalar(x.intensity),x.castShadow){const e=x.shadow,t=i.get(x);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,n.directionalShadow[l]=t,n.directionalShadowMap[l]=S,n.directionalShadowMatrix[l]=x.shadow.matrix,p++}n.directional[l]=e,l++}else if(x.isSpotLight){const e=t.get(x);e.position.setFromMatrixPosition(x.matrixWorld),e.color.copy(y).multiplyScalar(b),e.distance=T,e.coneCos=Math.cos(x.angle),e.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),e.decay=x.decay,n.spot[c]=e;const r=x.shadow;if(x.map&&(n.spotLightMap[g]=x.map,g++,r.updateMatrices(x),x.castShadow&&_++),n.spotLightMatrix[c]=r.matrix,x.castShadow){const e=i.get(x);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,n.spotShadow[c]=e,n.spotShadowMap[c]=S,f++}c++}else if(x.isRectAreaLight){const e=t.get(x);e.color.copy(y).multiplyScalar(b),e.halfWidth.set(.5*x.width,0,0),e.halfHeight.set(0,.5*x.height,0),n.rectArea[h]=e,h++}else if(x.isPointLight){const e=t.get(x);if(e.color.copy(x.color).multiplyScalar(x.intensity),e.distance=x.distance,e.decay=x.decay,x.castShadow){const e=x.shadow,t=i.get(x);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,n.pointShadow[u]=t,n.pointShadowMap[u]=S,n.pointShadowMatrix[u]=x.shadow.matrix,m++}n.point[u]=e,u++}else if(x.isHemisphereLight){const e=t.get(x);e.skyColor.copy(x.color).multiplyScalar(b),e.groundColor.copy(x.groundColor).multiplyScalar(b),n.hemi[d]=e,d++}}h>0&&(!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=Bu.LTC_FLOAT_1,n.rectAreaLTC2=Bu.LTC_FLOAT_2):(n.rectAreaLTC1=Bu.LTC_HALF_1,n.rectAreaLTC2=Bu.LTC_HALF_2)),n.ambient[0]=s,n.ambient[1]=a,n.ambient[2]=o;const x=n.hash;x.directionalLength===l&&x.pointLength===u&&x.spotLength===c&&x.rectAreaLength===h&&x.hemiLength===d&&x.numDirectionalShadows===p&&x.numPointShadows===m&&x.numSpotShadows===f&&x.numSpotMaps===g&&x.numLightProbes===v||(n.directional.length=l,n.spot.length=c,n.rectArea.length=h,n.point.length=u,n.hemi.length=d,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=m,n.pointShadowMap.length=m,n.spotShadow.length=f,n.spotShadowMap.length=f,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=m,n.spotLightMatrix.length=f+g-_,n.spotLightMap.length=g,n.numSpotLightShadowsWithMaps=_,n.numLightProbes=v,x.directionalLength=l,x.pointLength=u,x.spotLength=c,x.rectAreaLength=h,x.hemiLength=d,x.numDirectionalShadows=p,x.numPointShadows=m,x.numSpotShadows=f,x.numSpotMaps=g,x.numLightProbes=v,n.version=td++)},setupView:function(e,t){let i=0,o=0,l=0,u=0,c=0;const h=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){const t=e[d];if(t.isDirectionalLight){const e=n.directional[i];e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(h),i++}else if(t.isSpotLight){const e=n.spot[l];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(h),l++}else if(t.isRectAreaLight){const e=n.rectArea[u];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),a.identity(),s.copy(t.matrixWorld),s.premultiply(h),a.extractRotation(s),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(a),e.halfHeight.applyMatrix4(a),u++}else if(t.isPointLight){const e=n.point[o];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(h),o++}else if(t.isHemisphereLight){const e=n.hemi[c];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(h),c++}}},state:n}}function rd(e){const t=new nd(e),i=[],n=[];const r={lightsArray:i,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:function(e){r.camera=e,i.length=0,n.length=0},state:r,setupLights:function(){t.setup(i)},setupLightsView:function(e){t.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){n.push(e)}}}function sd(e){let t=new WeakMap;return{get:function(i,n=0){const r=t.get(i);let s;return void 0===r?(s=new rd(e),t.set(i,[s])):n>=r.length?(s=new rd(e),r.push(s)):s=r[n],s},dispose:function(){t=new WeakMap}}}function ad(e,t,i){let n=new Bs;const r=new Gt,s=new Gt,a=new ui,o=new Vo({depthPacking:3201}),l=new zo,u={},c=i.maxTextureSize,m={[h]:1,[d]:0,[p]:2},f=new Rr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Gt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=f.clone();g.defines.HORIZONTAL_PASS=1;const _=new ur;_.setAttribute("position",new Zn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new br(_,f),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let y=this.type;function b(i,n){const s=t.update(v);f.defines.VSM_SAMPLES!==i.blurSamples&&(f.defines.VSM_SAMPLES=i.blurSamples,g.defines.VSM_SAMPLES=i.blurSamples,f.needsUpdate=!0,g.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new hi(r.x,r.y)),f.uniforms.shadow_pass.value=i.map.texture,f.uniforms.resolution.value=i.mapSize,f.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,s,f,v,null),g.uniforms.shadow_pass.value=i.mapPass.texture,g.uniforms.resolution.value=i.mapSize,g.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,s,g,v,null)}function T(t,i,n,r){let s=null;const a=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===n.isPointLight?l:o,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0||!0===i.alphaToCoverage){const e=s.uuid,t=i.uuid;let n=u[e];void 0===n&&(n={},u[e]=n);let r=n[t];void 0===r&&(r=s.clone(),n[t]=r,i.addEventListener("dispose",M)),s=r}if(s.visible=i.visible,s.wireframe=i.wireframe,s.side=3===r?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:m[i.side],s.alphaMap=i.alphaMap,s.alphaTest=!0===i.alphaToCoverage?.5:i.alphaTest,s.map=i.map,s.clipShadows=i.clipShadows,s.clippingPlanes=i.clippingPlanes,s.clipIntersection=i.clipIntersection,s.displacementMap=i.displacementMap,s.displacementScale=i.displacementScale,s.displacementBias=i.displacementBias,s.wireframeLinewidth=i.wireframeLinewidth,s.linewidth=i.linewidth,!0===n.isPointLight&&!0===s.isMeshDistanceMaterial){e.properties.get(s).light=n}return s}function S(i,r,s,a,o){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const n=t.update(i),l=i.material;if(Array.isArray(l)){const t=n.groups;for(let u=0,c=t.length;u<c;u++){const c=t[u],h=l[c.materialIndex];if(h&&h.visible){const t=T(i,h,a,o);i.onBeforeShadow(e,i,r,s,n,t,c),e.renderBufferDirect(s,null,n,t,i,c),i.onAfterShadow(e,i,r,s,n,t,c)}}}else if(l.visible){const t=T(i,l,a,o);i.onBeforeShadow(e,i,r,s,n,t,null),e.renderBufferDirect(s,null,n,t,i,null),i.onAfterShadow(e,i,r,s,n,t,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)S(l[e],r,s,a,o)}function M(e){e.target.removeEventListener("dispose",M);for(const t in u){const i=u[t],n=e.target.uuid;if(n in i){i[n].dispose(),delete i[n]}}}this.render=function(t,i,o){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===t.length)return;const l=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=3!==y&&3===this.type,m=3===y&&3!==this.type;for(let f=0,g=t.length;f<g;f++){const l=t[f],u=l.shadow;if(void 0===u)continue;if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const h=u.getFrameExtents();if(r.multiply(h),s.copy(u.mapSize),(r.x>c||r.y>c)&&(r.x>c&&(s.x=Math.floor(c/h.x),r.x=s.x*h.x,u.mapSize.x=s.x),r.y>c&&(s.y=Math.floor(c/h.y),r.y=s.y*h.y,u.mapSize.y=s.y)),null===u.map||!0===p||!0===m){const e=3!==this.type?{minFilter:Z,magFilter:Z}:{};null!==u.map&&u.map.dispose(),u.map=new hi(r.x,r.y,e),u.map.texture.name=l.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const g=u.getViewportCount();for(let e=0;e<g;e++){const t=u.getViewport(e);a.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),d.viewport(a),u.updateMatrices(l,e),n=u.getFrustum(),S(i,o,u.camera,l,this.type)}!0!==u.isPointLightShadow&&3===this.type&&b(u,o),u.needsUpdate=!1}y=this.type,x.needsUpdate=!1,e.setRenderTarget(l,u,h)}}const od={[I]:1,[U]:6,[O]:7,[F]:5,[D]:0,[V]:2,[z]:4,[B]:3};function ld(e,t){const i=new function(){let t=!1;const i=new ui;let n=null;const r=new ui(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,s,a,o){!0===o&&(t*=a,n*=a,s*=a),i.set(t,n,s,a),!1===r.equals(i)&&(e.clearColor(t,n,s,a),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},n=new function(){let i=!1,n=!1,r=null,s=null,a=null;return{setReversed:function(e){if(n!==e){const i=t.get("EXT_clip_control");e?i.clipControlEXT(i.LOWER_LEFT_EXT,i.ZERO_TO_ONE_EXT):i.clipControlEXT(i.LOWER_LEFT_EXT,i.NEGATIVE_ONE_TO_ONE_EXT),n=e;const r=a;a=null,this.setClear(r)}},getReversed:function(){return n},setTest:function(t){t?re(e.DEPTH_TEST):se(e.DEPTH_TEST)},setMask:function(t){r===t||i||(e.depthMask(t),r=t)},setFunc:function(t){if(n&&(t=od[t]),s!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}s=t}},setLocked:function(e){i=e},setClear:function(t){a!==t&&(n&&(t=1-t),e.clearDepth(t),a=t)},reset:function(){i=!1,r=null,s=null,a=null,n=!1}}},r=new function(){let t=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(i){t||(i?re(e.STENCIL_TEST):se(e.STENCIL_TEST))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,a){n===t&&r===i&&s===a||(e.stencilFunc(t,i,a),n=t,r=i,s=a)},setOp:function(t,i,n){a===t&&o===i&&l===n||(e.stencilOp(t,i,n),a=t,o=i,l=n)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,u=null}}},s=new WeakMap,a=new WeakMap;let o={},l={},u=new WeakMap,c=[],h=null,d=!1,p=null,m=null,I=null,D=null,U=null,F=null,O=null,B=new Bn(0,0,0),V=0,z=!1,k=null,G=null,H=null,W=null,j=null;const X=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let $=!1,q=0;const Y=e.getParameter(e.VERSION);-1!==Y.indexOf("WebGL")?(q=parseFloat(/^WebGL (\d)/.exec(Y)[1]),$=q>=1):-1!==Y.indexOf("OpenGL ES")&&(q=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),$=q>=2);let K=null,Z={};const Q=e.getParameter(e.SCISSOR_BOX),J=e.getParameter(e.VIEWPORT),ee=(new ui).fromArray(Q),te=(new ui).fromArray(J);function ie(t,i,n,r){const s=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<n;o++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(i,0,e.RGBA,1,1,r,0,e.RGBA,e.UNSIGNED_BYTE,s):e.texImage2D(i+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,s);return a}const ne={};function re(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function se(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}ne[e.TEXTURE_2D]=ie(e.TEXTURE_2D,e.TEXTURE_2D,1),ne[e.TEXTURE_CUBE_MAP]=ie(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),ne[e.TEXTURE_2D_ARRAY]=ie(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),ne[e.TEXTURE_3D]=ie(e.TEXTURE_3D,e.TEXTURE_3D,1,1),i.setClear(0,0,0,1),n.setClear(1),r.setClear(0),re(e.DEPTH_TEST),n.setFunc(3),ue(!1),ce(1),re(e.CULL_FACE),le(0);const ae={[f]:e.FUNC_ADD,[g]:e.FUNC_SUBTRACT,[_]:e.FUNC_REVERSE_SUBTRACT};ae[103]=e.MIN,ae[104]=e.MAX;const oe={[v]:e.ZERO,[x]:e.ONE,[y]:e.SRC_COLOR,[T]:e.SRC_ALPHA,[R]:e.SRC_ALPHA_SATURATE,[E]:e.DST_COLOR,[M]:e.DST_ALPHA,[b]:e.ONE_MINUS_SRC_COLOR,[S]:e.ONE_MINUS_SRC_ALPHA,[A]:e.ONE_MINUS_DST_COLOR,[w]:e.ONE_MINUS_DST_ALPHA,[C]:e.CONSTANT_COLOR,[N]:e.ONE_MINUS_CONSTANT_COLOR,[P]:e.CONSTANT_ALPHA,[L]:e.ONE_MINUS_CONSTANT_ALPHA};function le(t,i,n,r,s,a,o,l,u,c){if(0!==t){if(!1===d&&(re(e.BLEND),d=!0),5===t)s=s||i,a=a||n,o=o||r,i===m&&s===U||(e.blendEquationSeparate(ae[i],ae[s]),m=i,U=s),n===I&&r===D&&a===F&&o===O||(e.blendFuncSeparate(oe[n],oe[r],oe[a],oe[o]),I=n,D=r,F=a,O=o),!1!==l.equals(B)&&u===V||(e.blendColor(l.r,l.g,l.b,u),B.copy(l),V=u),p=t,z=!1;else if(t!==p||c!==z){if(m===f&&U===f||(e.blendEquation(e.FUNC_ADD),m=f,U=f),c)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR)}I=null,D=null,F=null,O=null,B.set(0,0,0),V=0,p=t,z=c}}else!0===d&&(se(e.BLEND),d=!1)}function ue(t){k!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),k=t)}function ce(t){0!==t?(re(e.CULL_FACE),t!==G&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):se(e.CULL_FACE),G=t}function he(t,i,n){t?(re(e.POLYGON_OFFSET_FILL),W===i&&j===n||(e.polygonOffset(i,n),W=i,j=n)):se(e.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:n,stencil:r},enable:re,disable:se,bindFramebuffer:function(t,i){return l[t]!==i&&(e.bindFramebuffer(t,i),l[t]=i,t===e.DRAW_FRAMEBUFFER&&(l[e.FRAMEBUFFER]=i),t===e.FRAMEBUFFER&&(l[e.DRAW_FRAMEBUFFER]=i),!0)},drawBuffers:function(t,i){let n=c,r=!1;if(t){n=u.get(i),void 0===n&&(n=[],u.set(i,n));const s=t.textures;if(n.length!==s.length||n[0]!==e.COLOR_ATTACHMENT0){for(let t=0,i=s.length;t<i;t++)n[t]=e.COLOR_ATTACHMENT0+t;n.length=s.length,r=!0}}else n[0]!==e.BACK&&(n[0]=e.BACK,r=!0);r&&e.drawBuffers(n)},useProgram:function(t){return h!==t&&(e.useProgram(t),h=t,!0)},setBlending:le,setMaterial:function(t,s){2===t.side?se(e.CULL_FACE):re(e.CULL_FACE);let a=1===t.side;s&&(a=!a),ue(a),1===t.blending&&!1===t.transparent?le(0):le(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),n.setFunc(t.depthFunc),n.setTest(t.depthTest),n.setMask(t.depthWrite),i.setMask(t.colorWrite);const o=t.stencilWrite;r.setTest(o),o&&(r.setMask(t.stencilWriteMask),r.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),r.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),he(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?re(e.SAMPLE_ALPHA_TO_COVERAGE):se(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:ue,setCullFace:ce,setLineWidth:function(t){t!==H&&($&&e.lineWidth(t),H=t)},setPolygonOffset:he,setScissorTest:function(t){t?re(e.SCISSOR_TEST):se(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+X-1),K!==t&&(e.activeTexture(t),K=t)},bindTexture:function(t,i,n){void 0===n&&(n=null===K?e.TEXTURE0+X-1:K);let r=Z[n];void 0===r&&(r={type:void 0,texture:void 0},Z[n]=r),r.type===t&&r.texture===i||(K!==n&&(e.activeTexture(n),K=n),e.bindTexture(t,i||ne[t]),r.type=t,r.texture=i)},unbindTexture:function(){const t=Z[K];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D(...arguments)}catch(t){}},compressedTexImage3D:function(){try{e.compressedTexImage3D(...arguments)}catch(t){}},texImage2D:function(){try{e.texImage2D(...arguments)}catch(t){}},texImage3D:function(){try{e.texImage3D(...arguments)}catch(t){}},updateUBOMapping:function(t,i){let n=a.get(i);void 0===n&&(n=new WeakMap,a.set(i,n));let r=n.get(t);void 0===r&&(r=e.getUniformBlockIndex(i,t.name),n.set(t,r))},uniformBlockBinding:function(t,i){const n=a.get(i).get(t);s.get(i)!==n&&(e.uniformBlockBinding(i,n,t.__bindingPointIndex),s.set(i,n))},texStorage2D:function(){try{e.texStorage2D(...arguments)}catch(t){}},texStorage3D:function(){try{e.texStorage3D(...arguments)}catch(t){}},texSubImage2D:function(){try{e.texSubImage2D(...arguments)}catch(t){}},texSubImage3D:function(){try{e.texSubImage3D(...arguments)}catch(t){}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D(...arguments)}catch(t){}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D(...arguments)}catch(t){}},scissor:function(t){!1===ee.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ee.copy(t))},viewport:function(t){!1===te.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),te.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),n.setReversed(!1),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},K=null,Z={},l={},u=new WeakMap,c=[],h=null,d=!1,p=null,m=null,I=null,D=null,U=null,F=null,O=null,B=new Bn(0,0,0),V=0,z=!1,k=null,G=null,H=null,W=null,j=null,ee.set(0,0,e.canvas.width,e.canvas.height),te.set(0,0,e.canvas.width,e.canvas.height),i.reset(),n.reset(),r.reset()}}}function ud(e,t,i,n,r,s,a){const o=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),u=new Gt,c=new WeakMap;let h;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(H){}function m(e,t){return p?new OffscreenCanvas(e,t):Xt("canvas")}function f(e,t,i){let n=1;const r=G(e);if((r.width>i||r.height>i)&&(n=i/Math.max(r.width,r.height)),n<1){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){const i=Math.floor(n*r.width),s=Math.floor(n*r.height);void 0===h&&(h=m(i,s));const a=t?m(i,s):h;a.width=i,a.height=s;return a.getContext("2d").drawImage(e,0,0,i,s),a}return e}return e}function g(e){return e.generateMipmaps}function _(t){e.generateMipmap(t)}function v(t){return t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:t.isWebGL3DRenderTarget?e.TEXTURE_3D:t.isWebGLArrayRenderTarget||t.isCompressedArrayTexture?e.TEXTURE_2D_ARRAY:e.TEXTURE_2D}function x(i,n,r,s,a=!1){if(null!==i&&void 0!==e[i])return e[i];let o=n;if(n===e.RED&&(r===e.FLOAT&&(o=e.R32F),r===e.HALF_FLOAT&&(o=e.R16F),r===e.UNSIGNED_BYTE&&(o=e.R8)),n===e.RED_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.R8UI),r===e.UNSIGNED_SHORT&&(o=e.R16UI),r===e.UNSIGNED_INT&&(o=e.R32UI),r===e.BYTE&&(o=e.R8I),r===e.SHORT&&(o=e.R16I),r===e.INT&&(o=e.R32I)),n===e.RG&&(r===e.FLOAT&&(o=e.RG32F),r===e.HALF_FLOAT&&(o=e.RG16F),r===e.UNSIGNED_BYTE&&(o=e.RG8)),n===e.RG_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RG8UI),r===e.UNSIGNED_SHORT&&(o=e.RG16UI),r===e.UNSIGNED_INT&&(o=e.RG32UI),r===e.BYTE&&(o=e.RG8I),r===e.SHORT&&(o=e.RG16I),r===e.INT&&(o=e.RG32I)),n===e.RGB_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGB8UI),r===e.UNSIGNED_SHORT&&(o=e.RGB16UI),r===e.UNSIGNED_INT&&(o=e.RGB32UI),r===e.BYTE&&(o=e.RGB8I),r===e.SHORT&&(o=e.RGB16I),r===e.INT&&(o=e.RGB32I)),n===e.RGBA_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGBA8UI),r===e.UNSIGNED_SHORT&&(o=e.RGBA16UI),r===e.UNSIGNED_INT&&(o=e.RGBA32UI),r===e.BYTE&&(o=e.RGBA8I),r===e.SHORT&&(o=e.RGBA16I),r===e.INT&&(o=e.RGBA32I)),n===e.RGB&&r===e.UNSIGNED_INT_5_9_9_9_REV&&(o=e.RGB9_E5),n===e.RGBA){const t=a?mt:Jt.getTransfer(s);r===e.FLOAT&&(o=e.RGBA32F),r===e.HALF_FLOAT&&(o=e.RGBA16F),r===e.UNSIGNED_BYTE&&(o=t===ft?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return o!==e.R16F&&o!==e.R32F&&o!==e.RG16F&&o!==e.RG32F&&o!==e.RGBA16F&&o!==e.RGBA32F||t.get("EXT_color_buffer_float"),o}function y(t,i){let n;return t?null===i||i===le||i===pe?n=e.DEPTH24_STENCIL8:i===ue?n=e.DEPTH32F_STENCIL8:i===ae&&(n=e.DEPTH24_STENCIL8):null===i||i===le||i===pe?n=e.DEPTH_COMPONENT24:i===ue?n=e.DEPTH_COMPONENT32F:i===ae&&(n=e.DEPTH_COMPONENT16),n}function b(e,t){return!0===g(e)||e.isFramebufferTexture&&e.minFilter!==Z&&e.minFilter!==ee?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){const t=e.target;t.removeEventListener("dispose",T),function(e){const t=n.get(e);if(void 0===t.__webglInit)return;const i=e.source,r=d.get(i);if(r){const n=r[t.__cacheKey];n.usedTimes--,0===n.usedTimes&&M(e),0===Object.keys(r).length&&d.delete(i)}n.remove(e)}(t),t.isVideoTexture&&c.delete(t)}function S(t){const i=t.target;i.removeEventListener("dispose",S),function(t){const i=n.get(t);t.depthTexture&&(t.depthTexture.dispose(),n.remove(t.depthTexture));if(t.isWebGLCubeRenderTarget)for(let n=0;n<6;n++){if(Array.isArray(i.__webglFramebuffer[n]))for(let t=0;t<i.__webglFramebuffer[n].length;t++)e.deleteFramebuffer(i.__webglFramebuffer[n][t]);else e.deleteFramebuffer(i.__webglFramebuffer[n]);i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[n])}else{if(Array.isArray(i.__webglFramebuffer))for(let t=0;t<i.__webglFramebuffer.length;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}const r=t.textures;for(let s=0,o=r.length;s<o;s++){const t=n.get(r[s]);t.__webglTexture&&(e.deleteTexture(t.__webglTexture),a.memory.textures--),n.remove(r[s])}n.remove(t)}(i)}function M(t){const i=n.get(t);e.deleteTexture(i.__webglTexture);const r=t.source;delete d.get(r)[i.__cacheKey],a.memory.textures--}let w=0;function E(t,r){const s=n.get(t);if(t.isVideoTexture&&function(e){const t=a.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&s.__version!==t.version){const e=t.image;if(null===e);else if(!1!==e.complete)return void L(s,t,r)}i.bindTexture(e.TEXTURE_2D,s.__webglTexture,e.TEXTURE0+r)}const A={[q]:e.REPEAT,[Y]:e.CLAMP_TO_EDGE,[K]:e.MIRRORED_REPEAT},R={[Z]:e.NEAREST,[Q]:e.NEAREST_MIPMAP_NEAREST,[J]:e.NEAREST_MIPMAP_LINEAR,[ee]:e.LINEAR,[te]:e.LINEAR_MIPMAP_NEAREST,[ie]:e.LINEAR_MIPMAP_LINEAR},C={[_t]:e.NEVER,[Mt]:e.ALWAYS,[vt]:e.LESS,[yt]:e.LEQUAL,[xt]:e.EQUAL,[St]:e.GEQUAL,[bt]:e.GREATER,[Tt]:e.NOTEQUAL};function N(i,s){if(s.type===ue&&!1===t.has("OES_texture_float_linear")&&(s.magFilter===ee||s.magFilter===te||s.magFilter===J||s.magFilter===ie||s.minFilter===ee||s.minFilter===te||s.minFilter===J||s.minFilter),e.texParameteri(i,e.TEXTURE_WRAP_S,A[s.wrapS]),e.texParameteri(i,e.TEXTURE_WRAP_T,A[s.wrapT]),i!==e.TEXTURE_3D&&i!==e.TEXTURE_2D_ARRAY||e.texParameteri(i,e.TEXTURE_WRAP_R,A[s.wrapR]),e.texParameteri(i,e.TEXTURE_MAG_FILTER,R[s.magFilter]),e.texParameteri(i,e.TEXTURE_MIN_FILTER,R[s.minFilter]),s.compareFunction&&(e.texParameteri(i,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(i,e.TEXTURE_COMPARE_FUNC,C[s.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){if(s.magFilter===Z)return;if(s.minFilter!==J&&s.minFilter!==ie)return;if(s.type===ue&&!1===t.has("OES_texture_float_linear"))return;if(s.anisotropy>1||n.get(s).__currentAnisotropy){const a=t.get("EXT_texture_filter_anisotropic");e.texParameterf(i,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy}}}function P(t,i){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",T));const r=i.source;let s=d.get(r);void 0===s&&(s={},d.set(r,s));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(i);if(o!==t.__cacheKey){void 0===s[o]&&(s[o]={texture:e.createTexture(),usedTimes:0},a.memory.textures++,n=!0),s[o].usedTimes++;const r=s[t.__cacheKey];void 0!==r&&(s[t.__cacheKey].usedTimes--,0===r.usedTimes&&M(i)),t.__cacheKey=o,t.__webglTexture=s[o].texture}return n}function L(t,a,o){let l=e.TEXTURE_2D;(a.isDataArrayTexture||a.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),a.isData3DTexture&&(l=e.TEXTURE_3D);const u=P(t,a),c=a.source;i.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);const h=n.get(c);if(c.version!==h.__version||!0===u){i.activeTexture(e.TEXTURE0+o);const t=Jt.getPrimaries(Jt.workingColorSpace),n=a.colorSpace===ht?null:Jt.getPrimaries(a.colorSpace),d=a.colorSpace===ht||t===n?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,a.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,a.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=f(a.image,!1,r.maxTextureSize);p=k(a,p);const m=s.convert(a.format,a.colorSpace),v=s.convert(a.type);let T,S=x(a.internalFormat,m,v,a.colorSpace,a.isVideoTexture);N(l,a);const M=a.mipmaps,w=!0!==a.isVideoTexture,E=void 0===h.__version||!0===u,A=c.dataReady,R=b(a,p);if(a.isDepthTexture)S=y(a.format===xe,a.type),E&&(w?i.texStorage2D(e.TEXTURE_2D,1,S,p.width,p.height):i.texImage2D(e.TEXTURE_2D,0,S,p.width,p.height,0,m,v,null));else if(a.isDataTexture)if(M.length>0){w&&E&&i.texStorage2D(e.TEXTURE_2D,R,S,M[0].width,M[0].height);for(let t=0,n=M.length;t<n;t++)T=M[t],w?A&&i.texSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,v,T.data):i.texImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,m,v,T.data);a.generateMipmaps=!1}else w?(E&&i.texStorage2D(e.TEXTURE_2D,R,S,p.width,p.height),A&&i.texSubImage2D(e.TEXTURE_2D,0,0,0,p.width,p.height,m,v,p.data)):i.texImage2D(e.TEXTURE_2D,0,S,p.width,p.height,0,m,v,p.data);else if(a.isCompressedTexture)if(a.isCompressedArrayTexture){w&&E&&i.texStorage3D(e.TEXTURE_2D_ARRAY,R,S,M[0].width,M[0].height,p.depth);for(let t=0,n=M.length;t<n;t++)if(T=M[t],a.format!==_e){if(null!==m)if(w){if(A)if(a.layerUpdates.size>0){const n=Du(T.width,T.height,a.format,a.type);for(const r of a.layerUpdates){const s=T.data.subarray(r*n/T.data.BYTES_PER_ELEMENT,(r+1)*n/T.data.BYTES_PER_ELEMENT);i.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,r,T.width,T.height,1,m,s)}a.clearLayerUpdates()}else i.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,p.depth,m,T.data)}else i.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,S,T.width,T.height,p.depth,0,T.data,0,0)}else w?A&&i.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,T.width,T.height,p.depth,m,v,T.data):i.texImage3D(e.TEXTURE_2D_ARRAY,t,S,T.width,T.height,p.depth,0,m,v,T.data)}else{w&&E&&i.texStorage2D(e.TEXTURE_2D,R,S,M[0].width,M[0].height);for(let t=0,n=M.length;t<n;t++)T=M[t],a.format!==_e?null!==m&&(w?A&&i.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,T.data):i.compressedTexImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,T.data)):w?A&&i.texSubImage2D(e.TEXTURE_2D,t,0,0,T.width,T.height,m,v,T.data):i.texImage2D(e.TEXTURE_2D,t,S,T.width,T.height,0,m,v,T.data)}else if(a.isDataArrayTexture)if(w){if(E&&i.texStorage3D(e.TEXTURE_2D_ARRAY,R,S,p.width,p.height,p.depth),A)if(a.layerUpdates.size>0){const t=Du(p.width,p.height,a.format,a.type);for(const n of a.layerUpdates){const r=p.data.subarray(n*t/p.data.BYTES_PER_ELEMENT,(n+1)*t/p.data.BYTES_PER_ELEMENT);i.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,n,p.width,p.height,1,m,v,r)}a.clearLayerUpdates()}else i.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,m,v,p.data)}else i.texImage3D(e.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,m,v,p.data);else if(a.isData3DTexture)w?(E&&i.texStorage3D(e.TEXTURE_3D,R,S,p.width,p.height,p.depth),A&&i.texSubImage3D(e.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,m,v,p.data)):i.texImage3D(e.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,m,v,p.data);else if(a.isFramebufferTexture){if(E)if(w)i.texStorage2D(e.TEXTURE_2D,R,S,p.width,p.height);else{let t=p.width,n=p.height;for(let r=0;r<R;r++)i.texImage2D(e.TEXTURE_2D,r,S,t,n,0,m,v,null),t>>=1,n>>=1}}else if(M.length>0){if(w&&E){const t=G(M[0]);i.texStorage2D(e.TEXTURE_2D,R,S,t.width,t.height)}for(let t=0,n=M.length;t<n;t++)T=M[t],w?A&&i.texSubImage2D(e.TEXTURE_2D,t,0,0,m,v,T):i.texImage2D(e.TEXTURE_2D,t,S,m,v,T);a.generateMipmaps=!1}else if(w){if(E){const t=G(p);i.texStorage2D(e.TEXTURE_2D,R,S,t.width,t.height)}A&&i.texSubImage2D(e.TEXTURE_2D,0,0,0,m,v,p)}else i.texImage2D(e.TEXTURE_2D,0,S,m,v,p);g(a)&&_(l),h.__version=c.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}function I(t,r,a,l,u,c){const h=s.convert(a.format,a.colorSpace),d=s.convert(a.type),p=x(a.internalFormat,h,d,a.colorSpace),m=n.get(r),f=n.get(a);if(f.__renderTarget=r,!m.__hasExternalTextures){const t=Math.max(1,r.width>>c),n=Math.max(1,r.height>>c);u===e.TEXTURE_3D||u===e.TEXTURE_2D_ARRAY?i.texImage3D(u,c,p,t,n,r.depth,0,h,d,null):i.texImage2D(u,c,p,t,n,0,h,d,null)}i.bindFramebuffer(e.FRAMEBUFFER,t),z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,l,u,f.__webglTexture,0,V(r)):(u===e.TEXTURE_2D||u>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&u<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,l,u,f.__webglTexture,c),i.bindFramebuffer(e.FRAMEBUFFER,null)}function D(t,i,n){if(e.bindRenderbuffer(e.RENDERBUFFER,t),i.depthBuffer){const r=i.depthTexture,s=r&&r.isDepthTexture?r.type:null,a=y(i.stencilBuffer,s),l=i.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=V(i);z(i)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,a,i.width,i.height):n?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,a,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,a,i.width,i.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,l,e.RENDERBUFFER,t)}else{const t=i.textures;for(let r=0;r<t.length;r++){const a=t[r],l=s.convert(a.format,a.colorSpace),u=s.convert(a.type),c=x(a.internalFormat,l,u,a.colorSpace),h=V(i);n&&!1===z(i)?e.renderbufferStorageMultisample(e.RENDERBUFFER,h,c,i.width,i.height):z(i)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,h,c,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,c,i.width,i.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function U(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const s=n.get(r.depthTexture);s.__renderTarget=r,s.__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),E(r.depthTexture,0);const a=s.__webglTexture,l=V(r);if(r.depthTexture.format===ve)z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==xe)throw new Error("Unknown depthTexture format");z(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}function F(t){const r=n.get(t),s=!0===t.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==t.depthTexture){const e=t.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),e){const t=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,e.removeEventListener("dispose",t)};e.addEventListener("dispose",t),r.__depthDisposeCallback=t}r.__boundDepthTexture=e}if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");const e=t.texture.mipmaps;e&&e.length>0?U(r.__webglFramebuffer[0],t):U(r.__webglFramebuffer,t)}else if(s){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)if(i.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[n]),void 0===r.__webglDepthbuffer[n])r.__webglDepthbuffer[n]=e.createRenderbuffer(),D(r.__webglDepthbuffer[n],t,!1);else{const i=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,s=r.__webglDepthbuffer[n];e.bindRenderbuffer(e.RENDERBUFFER,s),e.framebufferRenderbuffer(e.FRAMEBUFFER,i,e.RENDERBUFFER,s)}}else{const n=t.texture.mipmaps;if(n&&n.length>0?i.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[0]):i.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=e.createRenderbuffer(),D(r.__webglDepthbuffer,t,!1);else{const i=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,n=r.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,n),e.framebufferRenderbuffer(e.FRAMEBUFFER,i,e.RENDERBUFFER,n)}}i.bindFramebuffer(e.FRAMEBUFFER,null)}const O=[],B=[];function V(e){return Math.min(r.maxSamples,e.samples)}function z(e){const i=n.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function k(e,t){const i=e.colorSpace;e.format,e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||i!==pt&&i!==ht&&Jt.getTransfer(i),t}function G(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(u.width=e.naturalWidth||e.width,u.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(u.width=e.displayWidth,u.height=e.displayHeight):(u.width=e.width,u.height=e.height),u}this.allocateTextureUnit=function(){const e=w;return r.maxTextures,w+=1,e},this.resetTextureUnits=function(){w=0},this.setTexture2D=E,this.setTexture2DArray=function(t,r){const s=n.get(t);t.version>0&&s.__version!==t.version?L(s,t,r):i.bindTexture(e.TEXTURE_2D_ARRAY,s.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){const s=n.get(t);t.version>0&&s.__version!==t.version?L(s,t,r):i.bindTexture(e.TEXTURE_3D,s.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,a){const o=n.get(t);t.version>0&&o.__version!==t.version?function(t,a,o){if(6!==a.image.length)return;const l=P(t,a),u=a.source;i.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);const c=n.get(u);if(u.version!==c.__version||!0===l){i.activeTexture(e.TEXTURE0+o);const t=Jt.getPrimaries(Jt.workingColorSpace),n=a.colorSpace===ht?null:Jt.getPrimaries(a.colorSpace),h=a.colorSpace===ht||t===n?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,a.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,a.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);const d=a.isCompressedTexture||a.image[0].isCompressedTexture,p=a.image[0]&&a.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)m[e]=d||p?p?a.image[e].image:a.image[e]:f(a.image[e],!0,r.maxCubemapSize),m[e]=k(a,m[e]);const v=m[0],y=s.convert(a.format,a.colorSpace),T=s.convert(a.type),S=x(a.internalFormat,y,T,a.colorSpace),M=!0!==a.isVideoTexture,w=void 0===c.__version||!0===l,E=u.dataReady;let A,R=b(a,v);if(N(e.TEXTURE_CUBE_MAP,a),d){M&&w&&i.texStorage2D(e.TEXTURE_CUBE_MAP,R,S,v.width,v.height);for(let t=0;t<6;t++){A=m[t].mipmaps;for(let n=0;n<A.length;n++){const r=A[n];a.format!==_e?null!==y&&(M?E&&i.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n,0,0,r.width,r.height,y,r.data):i.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n,S,r.width,r.height,0,r.data)):M?E&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n,0,0,r.width,r.height,y,T,r.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n,S,r.width,r.height,0,y,T,r.data)}}}else{if(A=a.mipmaps,M&&w){A.length>0&&R++;const t=G(m[0]);i.texStorage2D(e.TEXTURE_CUBE_MAP,R,S,t.width,t.height)}for(let t=0;t<6;t++)if(p){M?E&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m[t].width,m[t].height,y,T,m[t].data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,S,m[t].width,m[t].height,0,y,T,m[t].data);for(let n=0;n<A.length;n++){const r=A[n].image[t].image;M?E&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n+1,0,0,r.width,r.height,y,T,r.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n+1,S,r.width,r.height,0,y,T,r.data)}}else{M?E&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,y,T,m[t]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,S,y,T,m[t]);for(let n=0;n<A.length;n++){const r=A[n];M?E&&i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n+1,0,0,y,T,r.image[t]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,n+1,S,y,T,r.image[t])}}}g(a)&&_(e.TEXTURE_CUBE_MAP),c.__version=u.version,a.onUpdate&&a.onUpdate(a)}t.__version=a.version}(o,t,a):i.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+a)},this.rebindTextures=function(t,i,r){const s=n.get(t);void 0!==i&&I(s.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==r&&F(t)},this.setupRenderTarget=function(t){const r=t.texture,o=n.get(t),l=n.get(r);t.addEventListener("dispose",S);const u=t.textures,c=!0===t.isWebGLCubeRenderTarget,h=u.length>1;if(h||(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=r.version,a.memory.textures++),c){o.__webglFramebuffer=[];for(let t=0;t<6;t++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[t]=[];for(let i=0;i<r.mipmaps.length;i++)o.__webglFramebuffer[t][i]=e.createFramebuffer()}else o.__webglFramebuffer[t]=e.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let t=0;t<r.mipmaps.length;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else o.__webglFramebuffer=e.createFramebuffer();if(h)for(let t=0,i=u.length;t<i;t++){const i=n.get(u[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),a.memory.textures++)}if(t.samples>0&&!1===z(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=[],i.bindFramebuffer(e.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let i=0;i<u.length;i++){const n=u[i];o.__webglColorRenderbuffer[i]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,o.__webglColorRenderbuffer[i]);const r=s.convert(n.format,n.colorSpace),a=s.convert(n.type),l=x(n.internalFormat,r,a,n.colorSpace,!0===t.isXRRenderTarget),c=V(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,c,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+i,e.RENDERBUFFER,o.__webglColorRenderbuffer[i])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),D(o.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(e.FRAMEBUFFER,null)}}if(c){i.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture),N(e.TEXTURE_CUBE_MAP,r);for(let i=0;i<6;i++)if(r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)I(o.__webglFramebuffer[i][n],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i,n);else I(o.__webglFramebuffer[i],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0);g(r)&&_(e.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(h){for(let r=0,s=u.length;r<s;r++){const s=u[r],a=n.get(s);i.bindTexture(e.TEXTURE_2D,a.__webglTexture),N(e.TEXTURE_2D,s),I(o.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0+r,e.TEXTURE_2D,0),g(s)&&_(e.TEXTURE_2D)}i.unbindTexture()}else{let n=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(n=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),i.bindTexture(n,l.__webglTexture),N(n,r),r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)I(o.__webglFramebuffer[i],t,r,e.COLOR_ATTACHMENT0,n,i);else I(o.__webglFramebuffer,t,r,e.COLOR_ATTACHMENT0,n,0);g(r)&&_(n),i.unbindTexture()}t.depthBuffer&&F(t)},this.updateRenderTargetMipmap=function(e){const t=e.textures;for(let r=0,s=t.length;r<s;r++){const s=t[r];if(g(s)){const t=v(e),r=n.get(s).__webglTexture;i.bindTexture(t,r),_(t),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0)if(!1===z(t)){const r=t.textures,s=t.width,a=t.height;let o=e.COLOR_BUFFER_BIT;const u=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,c=n.get(t),h=r.length>1;if(h)for(let t=0;t<r.length;t++)i.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),i.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);i.bindFramebuffer(e.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer);const d=t.texture.mipmaps;d&&d.length>0?i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer[0]):i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let i=0;i<r.length;i++){if(t.resolveDepthBuffer&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&t.resolveStencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),h){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,c.__webglColorRenderbuffer[i]);const t=n.get(r[i]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,s,a,0,0,s,a,o,e.NEAREST),!0===l&&(O.length=0,B.length=0,O.push(e.COLOR_ATTACHMENT0+i),t.depthBuffer&&!1===t.resolveDepthBuffer&&(O.push(u),B.push(u),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,B)),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,O))}if(i.bindFramebuffer(e.READ_FRAMEBUFFER,null),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),h)for(let t=0;t<r.length;t++){i.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,c.__webglColorRenderbuffer[t]);const s=n.get(r[t]).__webglTexture;i.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,s,0)}i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(t.depthBuffer&&!1===t.resolveDepthBuffer&&l){const i=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[i])}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=I,this.useMultisampledRTT=z}function cd(e,t){return{convert:function(i,n=""){let r;const s=Jt.getTransfer(n);if(i===ne)return e.UNSIGNED_BYTE;if(i===he)return e.UNSIGNED_SHORT_4_4_4_4;if(i===de)return e.UNSIGNED_SHORT_5_5_5_1;if(i===me)return e.UNSIGNED_INT_5_9_9_9_REV;if(i===re)return e.BYTE;if(i===se)return e.SHORT;if(i===ae)return e.UNSIGNED_SHORT;if(i===oe)return e.INT;if(i===le)return e.UNSIGNED_INT;if(i===ue)return e.FLOAT;if(i===ce)return e.HALF_FLOAT;if(i===fe)return e.ALPHA;if(i===ge)return e.RGB;if(i===_e)return e.RGBA;if(i===ve)return e.DEPTH_COMPONENT;if(i===xe)return e.DEPTH_STENCIL;if(i===ye)return e.RED;if(i===be)return e.RED_INTEGER;if(i===Te)return e.RG;if(i===Se)return e.RG_INTEGER;if(i===Me)return e.RGBA_INTEGER;if(i===we||i===Ee||i===Ae||i===Re)if(s===ft){if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(i===we)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ee)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Ae)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Re)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=t.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(i===we)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ee)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ae)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Re)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===Ce||i===Ne||i===Pe||i===Le){if(r=t.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(i===Ce)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Ne)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Pe)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Le)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===Ie||i===De||i===Ue){if(r=t.get("WEBGL_compressed_texture_etc"),null===r)return null;if(i===Ie||i===De)return s===ft?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===Ue)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(i===Fe||i===Oe||i===Be||i===Ve||i===ze||i===ke||i===Ge||i===He||i===We||i===je||i===Xe||i===$e||i===qe||i===Ye){if(r=t.get("WEBGL_compressed_texture_astc"),null===r)return null;if(i===Fe)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Oe)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Be)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Ve)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===ze)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===ke)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ge)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===He)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===We)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===je)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Xe)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===$e)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===qe)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ye)return s===ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===Ke||i===Ze||i===Qe){if(r=t.get("EXT_texture_compression_bptc"),null===r)return null;if(i===Ke)return s===ft?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Ze)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Qe)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(i===Je||i===et||i===tt||i===it){if(r=t.get("EXT_texture_compression_rgtc"),null===r)return null;if(i===Ke)return r.COMPRESSED_RED_RGTC1_EXT;if(i===et)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===tt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===it)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return i===pe?e.UNSIGNED_INT_24_8:void 0!==e[i]?e[i]:null}}}class hd{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(null===this.texture){const n=new li;e.properties.get(n).__webglTexture=t.texture,t.depthNear===i.depthNear&&t.depthFar===i.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(null!==this.texture&&null===this.mesh){const t=e.cameras[0].viewport,i=new Rr({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new br(new wo(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class dd extends Nt{constructor(e,t){super();const i=this;let n=null,r=1,s=null,a="local-floor",o=1,l=null,u=null,c=null,h=null,d=null,p=null;const m=new hd,f=t.getContextAttributes();let g=null,_=null;const v=[],x=[],y=new Gt;let b=null;const T=new Ir;T.viewport=new ui;const S=new Ir;S.viewport=new ui;const M=[T,S],w=new Gl;let E=null,A=null;function R(e){const t=x.indexOf(e.inputSource);if(-1===t)return;const i=v[t];void 0!==i&&(i.update(e.inputSource,e.frame,l||s),i.dispatchEvent({type:e.type,data:e.inputSource}))}function C(){n.removeEventListener("select",R),n.removeEventListener("selectstart",R),n.removeEventListener("selectend",R),n.removeEventListener("squeeze",R),n.removeEventListener("squeezestart",R),n.removeEventListener("squeezeend",R),n.removeEventListener("end",C),n.removeEventListener("inputsourceschange",N);for(let e=0;e<v.length;e++){const t=x[e];null!==t&&(x[e]=null,v[e].disconnect(t))}E=null,A=null,m.reset(),e.setRenderTarget(g),d=null,h=null,c=null,n=null,_=null,U.stop(),i.isPresenting=!1,e.setPixelRatio(b),e.setSize(y.width,y.height,!1),i.dispatchEvent({type:"sessionend"})}function N(e){for(let t=0;t<e.removed.length;t++){const i=e.removed[t],n=x.indexOf(i);n>=0&&(x[n]=null,v[n].disconnect(i))}for(let t=0;t<e.added.length;t++){const i=e.added[t];let n=x.indexOf(i);if(-1===n){for(let e=0;e<v.length;e++){if(e>=x.length){x.push(i),n=e;break}if(null===x[e]){x[e]=i,n=e;break}}if(-1===n)break}const r=v[n];r&&r.connect(i)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=v[e];return void 0===t&&(t=new zr,v[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=v[e];return void 0===t&&(t=new zr,v[e]=t),t.getGripSpace()},this.getHand=function(e){let t=v[e];return void 0===t&&(t=new zr,v[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,i.isPresenting},this.setReferenceSpaceType=function(e){a=e,i.isPresenting},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(u){if(n=u,null!==n){g=e.getRenderTarget(),n.addEventListener("select",R),n.addEventListener("selectstart",R),n.addEventListener("selectend",R),n.addEventListener("squeeze",R),n.addEventListener("squeezestart",R),n.addEventListener("squeezeend",R),n.addEventListener("end",C),n.addEventListener("inputsourceschange",N),!0!==f.xrCompatible&&await t.makeXRCompatible(),b=e.getPixelRatio(),e.getSize(y);if("undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype){let i=null,s=null,a=null;f.depth&&(a=f.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,i=f.stencil?xe:ve,s=f.stencil?pe:le);const o={colorFormat:t.RGBA8,depthFormat:a,scaleFactor:r};c=new XRWebGLBinding(n,t),h=c.createProjectionLayer(o),n.updateRenderState({layers:[h]}),e.setPixelRatio(1),e.setSize(h.textureWidth,h.textureHeight,!1),_=new hi(h.textureWidth,h.textureHeight,{format:_e,type:ne,depthTexture:new da(h.textureWidth,h.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:f.stencil,colorSpace:e.outputColorSpace,samples:f.antialias?4:0,resolveDepthBuffer:!1===h.ignoreDepthValues,resolveStencilBuffer:!1===h.ignoreDepthValues})}else{const i={antialias:f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(n,t,i),n.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),_=new hi(d.framebufferWidth,d.framebufferHeight,{format:_e,type:ne,colorSpace:e.outputColorSpace,stencilBuffer:f.stencil,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}_.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await n.requestReferenceSpace(a),U.setContext(n),U.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};const P=new fi,L=new fi;function I(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;let t=e.near,i=e.far;null!==m.texture&&(m.depthNear>0&&(t=m.depthNear),m.depthFar>0&&(i=m.depthFar)),w.near=S.near=T.near=t,w.far=S.far=T.far=i,E===w.near&&A===w.far||(n.updateRenderState({depthNear:w.near,depthFar:w.far}),E=w.near,A=w.far),T.layers.mask=2|e.layers.mask,S.layers.mask=4|e.layers.mask,w.layers.mask=T.layers.mask|S.layers.mask;const r=e.parent,s=w.cameras;I(w,r);for(let n=0;n<s.length;n++)I(s[n],r);2===s.length?function(e,t,i){P.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(i.matrixWorld);const n=P.distanceTo(L),r=t.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],c=(r[8]-1)/r[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,m=n/(-c+h),f=m*-c;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+m,i=o+m,r=d-f,s=p+(n-f),c=l*o/i*t,h=u*o/i*t;e.projectionMatrix.makePerspective(r,s,c,h,t,i),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(w,T,S):w.projectionMatrix.copy(T.projectionMatrix),function(e,t,i){null===i?e.matrix.copy(t.matrixWorld):(e.matrix.copy(i.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Dt*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,w,r)},this.getCamera=function(){return w},this.getFoveation=function(){if(null!==h||null!==d)return o},this.setFoveation=function(e){o=e,null!==h&&(h.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==m.texture},this.getDepthSensingMesh=function(){return m.getMesh(w)};let D=null;const U=new Uu;U.setAnimationLoop((function(t,r){if(u=r.getViewerPose(l||s),p=r,null!==u){const t=u.views;null!==d&&(e.setRenderTargetFramebuffer(_,d.framebuffer),e.setRenderTarget(_));let i=!1;t.length!==w.cameras.length&&(w.cameras.length=0,i=!0);for(let n=0;n<t.length;n++){const r=t[n];let s=null;if(null!==d)s=d.getViewport(r);else{const t=c.getViewSubImage(h,r);s=t.viewport,0===n&&(e.setRenderTargetTextures(_,t.colorTexture,t.depthStencilTexture),e.setRenderTarget(_))}let a=M[n];void 0===a&&(a=new Ir,a.layers.enable(n),a.viewport=new ui,M[n]=a),a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(r.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===n&&(w.matrix.copy(a.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),!0===i&&w.cameras.push(a)}const r=n.enabledFeatures;if(r&&r.includes("depth-sensing")&&"gpu-optimized"==n.depthUsage&&c){const i=c.getDepthInformation(t[0]);i&&i.isValid&&i.texture&&m.init(e,i,n.renderState)}}for(let e=0;e<v.length;e++){const t=x[e],i=v[e];null!==t&&void 0!==i&&i.update(t,r,l||s)}D&&D(t,r),r.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:r}),p=null})),this.setAnimationLoop=function(e){D=e},this.dispose=function(){}}}const pd=new tn,md=new ji;function fd(e,t){function i(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function n(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map,i(n.map,e.mapTransform)),n.alphaMap&&(e.alphaMap.value=n.alphaMap,i(n.alphaMap,e.alphaMapTransform)),n.bumpMap&&(e.bumpMap.value=n.bumpMap,i(n.bumpMap,e.bumpMapTransform),e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,i(n.normalMap,e.normalMapTransform),e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,i(n.displacementMap,e.displacementMapTransform),e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap,i(n.emissiveMap,e.emissiveMapTransform)),n.specularMap&&(e.specularMap.value=n.specularMap,i(n.specularMap,e.specularMapTransform)),n.alphaTest>0&&(e.alphaTest.value=n.alphaTest);const r=t.get(n),s=r.envMap,a=r.envMapRotation;s&&(e.envMap.value=s,pd.copy(a),pd.x*=-1,pd.y*=-1,pd.z*=-1,s.isCubeTexture&&!1===s.isRenderTargetTexture&&(pd.y*=-1,pd.z*=-1),e.envMapRotation.value.setFromMatrix4(md.makeRotationFromEuler(pd)),e.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,e.reflectivity.value=n.reflectivity,e.ior.value=n.ior,e.refractionRatio.value=n.refractionRatio),n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity,i(n.lightMap,e.lightMapTransform)),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity,i(n.aoMap,e.aoMapTransform))}return{refreshFogUniforms:function(t,i){i.color.getRGB(t.fogColor.value,Er(e)),i.isFog?(t.fogNear.value=i.near,t.fogFar.value=i.far):i.isFogExp2&&(t.fogDensity.value=i.density)},refreshMaterialUniforms:function(e,r,s,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(e,r):r.isMeshToonMaterial?(n(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(n(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(n(e,r),function(e,t){e.metalness.value=t.metalness,t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap,i(t.metalnessMap,e.metalnessMapTransform));e.roughness.value=t.roughness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap,i(t.roughnessMap,e.roughnessMapTransform));t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,i(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,i(t.sheenRoughnessMap,e.sheenRoughnessMapTransform)));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,i(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,i(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,i(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate()));t.dispersion>0&&(e.dispersion.value=t.dispersion);t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,i(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,i(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform)));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,i(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,i(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,i(t.anisotropyMap,e.anisotropyMapTransform)));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,i(t.specularColorMap,e.specularColorMapTransform));t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,i(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,r,o)):r.isMeshMatcapMaterial?(n(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?n(e,r):r.isMeshDistanceMaterial?(n(e,r),function(e,i){const n=t.get(i).light;e.referencePosition.value.setFromMatrixPosition(n.matrixWorld),e.nearDistance.value=n.shadow.camera.near,e.farDistance.value=n.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?n(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,i(t.map,e.mapTransform))}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map,i(t.map,e.uvTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,i(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r,s,a):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,i(t.map,e.mapTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,i(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function gd(e,t,i,n){let r={},s={},a=[];const o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(e,t,i,n){const r=e.value,s=t+"_"+i;if(void 0===n[s])return n[s]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const e=n[s];if("number"==typeof r||"boolean"==typeof r){if(e!==r)return n[s]=r,!0}else if(!1===e.equals(r))return e.copy(r),!0}return!1}function u(e){const t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture,t}function c(t){const i=t.target;i.removeEventListener("dispose",c);const n=a.indexOf(i.__bindingPointIndex);a.splice(n,1),e.deleteBuffer(r[i.id]),delete r[i.id],delete s[i.id]}return{bind:function(e,t){const i=t.program;n.uniformBlockBinding(e,i)},update:function(i,h){let d=r[i.id];void 0===d&&(!function(e){const t=e.uniforms;let i=0;const n=16;for(let s=0,a=t.length;s<a;s++){const e=Array.isArray(t[s])?t[s]:[t[s]];for(let t=0,r=e.length;t<r;t++){const r=e[t],s=Array.isArray(r.value)?r.value:[r.value];for(let e=0,t=s.length;e<t;e++){const t=u(s[e]),a=i%n,o=a%t.boundary,l=a+o;i+=o,0!==l&&n-l<t.storage&&(i+=n-l),r.__data=new Float32Array(t.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=i,i+=t.storage}}}const r=i%n;r>0&&(i+=n-r);e.__size=i,e.__cache={}}(i),d=function(t){const i=function(){for(let e=0;e<o;e++)if(-1===a.indexOf(e))return a.push(e),e;return 0}();t.__bindingPointIndex=i;const n=e.createBuffer(),r=t.__size,s=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,n),e.bufferData(e.UNIFORM_BUFFER,r,s),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,i,n),n}(i),r[i.id]=d,i.addEventListener("dispose",c));const p=h.program;n.updateUBOMapping(i,p);const m=t.render.frame;s[i.id]!==m&&(!function(t){const i=r[t.id],n=t.uniforms,s=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,i);for(let r=0,a=n.length;r<a;r++){const t=Array.isArray(n[r])?n[r]:[n[r]];for(let i=0,n=t.length;i<n;i++){const n=t[i];if(!0===l(n,r,i,s)){const t=n.__offset,i=Array.isArray(n.value)?n.value:[n.value];let r=0;for(let s=0;s<i.length;s++){const a=i[s],o=u(a);"number"==typeof a||"boolean"==typeof a?(n.__data[0]=a,e.bufferSubData(e.UNIFORM_BUFFER,t+r,n.__data)):a.isMatrix3?(n.__data[0]=a.elements[0],n.__data[1]=a.elements[1],n.__data[2]=a.elements[2],n.__data[3]=0,n.__data[4]=a.elements[3],n.__data[5]=a.elements[4],n.__data[6]=a.elements[5],n.__data[7]=0,n.__data[8]=a.elements[6],n.__data[9]=a.elements[7],n.__data[10]=a.elements[8],n.__data[11]=0):(a.toArray(n.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(i),s[i.id]=m)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);a=[],r={},s={}}}}class _d{constructor(e={}){const{canvas:t=$t(),context:n=null,depth:r=!0,stencil:s=!1,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:d=!1}=e;let p;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");p=n.getContextAttributes().alpha}else p=a;const m=new Uint32Array(4),f=new Int32Array(4);let g=null,_=null;const v=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const y=this;let b=!1;this._outputColorSpace=dt;let T=0,S=0,M=null,w=-1,E=null;const A=new ui,R=new ui;let C=null;const N=new Bn(0);let P=0,L=t.width,I=t.height,D=1,U=null,F=null;const O=new ui(0,0,L,I),B=new ui(0,0,L,I);let V=!1;const z=new Bs;let k=!1,G=!1;const H=new ji,W=new ji,j=new fi,X=new ui,$={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let q=!1;function Y(){return null===M?D:1}let K,Z,Q,J,ee,te,re,se,oe,ue,me,fe,ge,_e,ve,xe,ye,Te,we,Ee,Ae,Re,Ce,Ne,Pe=n;function Le(e,i){return t.getContext(e,i)}try{const e={alpha:!0,depth:r,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${i}`),t.addEventListener("webglcontextlost",Ue,!1),t.addEventListener("webglcontextrestored",Fe,!1),t.addEventListener("webglcontextcreationerror",Oe,!1),null===Pe){const t="webgl2";if(Pe=Le(t,e),null===Pe)throw Le(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(tt){throw tt}function Ie(){K=new mc(Pe),K.init(),Re=new cd(Pe,K),Z=new Xu(Pe,K,e,Re),Q=new ld(Pe,K),Z.reverseDepthBuffer&&d&&Q.buffers.depth.setReversed(!0),J=new _c(Pe),ee=new Yh,te=new ud(Pe,K,Q,ee,Z,Re,J),re=new qu(y),se=new pc(y),oe=new Fu(Pe),Ce=new Wu(Pe,oe),ue=new fc(Pe,oe,J,Ce),me=new xc(Pe,ue,oe,J),we=new vc(Pe,Z,te),xe=new $u(ee),fe=new qh(y,re,se,K,Z,Ce,xe),ge=new fd(y,ee),_e=new Jh,ve=new sd(K),Te=new Hu(y,re,se,Q,me,p,l),ye=new ad(y,me,Z),Ne=new gd(Pe,J,Z,Q),Ee=new ju(Pe,K,J),Ae=new gc(Pe,K,J),J.programs=fe.programs,y.capabilities=Z,y.extensions=K,y.properties=ee,y.renderLists=_e,y.shadowMap=ye,y.state=Q,y.info=J}Ie();const De=new dd(y,Pe);function Ue(e){e.preventDefault(),b=!0}function Fe(){b=!1;const e=J.autoReset,t=ye.enabled,i=ye.autoUpdate,n=ye.needsUpdate,r=ye.type;Ie(),J.autoReset=e,ye.enabled=t,ye.autoUpdate=i,ye.needsUpdate=n,ye.type=r}function Oe(e){}function Be(e){const t=e.target;t.removeEventListener("dispose",Be),function(e){(function(e){const t=ee.get(e).programs;void 0!==t&&(t.forEach((function(e){fe.releaseProgram(e)})),e.isShaderMaterial&&fe.releaseShaderCache(e))})(e),ee.remove(e)}(t)}function Ve(e,t,i){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Ye(e,t,i),e.side=0,e.needsUpdate=!0,Ye(e,t,i),e.side=2):Ye(e,t,i)}this.xr=De,this.getContext=function(){return Pe},this.getContextAttributes=function(){return Pe.getContextAttributes()},this.forceContextLoss=function(){const e=K.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=K.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(e){void 0!==e&&(D=e,this.setSize(L,I,!1))},this.getSize=function(e){return e.set(L,I)},this.setSize=function(e,i,n=!0){De.isPresenting||(L=e,I=i,t.width=Math.floor(e*D),t.height=Math.floor(i*D),!0===n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i))},this.getDrawingBufferSize=function(e){return e.set(L*D,I*D).floor()},this.setDrawingBufferSize=function(e,i,n){L=e,I=i,D=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(A)},this.getViewport=function(e){return e.copy(O)},this.setViewport=function(e,t,i,n){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,i,n),Q.viewport(A.copy(O).multiplyScalar(D).round())},this.getScissor=function(e){return e.copy(B)},this.setScissor=function(e,t,i,n){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,i,n),Q.scissor(R.copy(B).multiplyScalar(D).round())},this.getScissorTest=function(){return V},this.setScissorTest=function(e){Q.setScissorTest(V=e)},this.setOpaqueSort=function(e){U=e},this.setTransparentSort=function(e){F=e},this.getClearColor=function(e){return e.copy(Te.getClearColor())},this.setClearColor=function(){Te.setClearColor(...arguments)},this.getClearAlpha=function(){return Te.getClearAlpha()},this.setClearAlpha=function(){Te.setClearAlpha(...arguments)},this.clear=function(e=!0,t=!0,i=!0){let n=0;if(e){let e=!1;if(null!==M){const t=M.texture.format;e=t===Me||t===Se||t===be}if(e){const e=M.texture.type,t=e===ne||e===le||e===ae||e===pe||e===he||e===de,i=Te.getClearColor(),n=Te.getClearAlpha(),r=i.r,s=i.g,a=i.b;t?(m[0]=r,m[1]=s,m[2]=a,m[3]=n,Pe.clearBufferuiv(Pe.COLOR,0,m)):(f[0]=r,f[1]=s,f[2]=a,f[3]=n,Pe.clearBufferiv(Pe.COLOR,0,f))}else n|=Pe.COLOR_BUFFER_BIT}t&&(n|=Pe.DEPTH_BUFFER_BIT),i&&(n|=Pe.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Pe.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ue,!1),t.removeEventListener("webglcontextrestored",Fe,!1),t.removeEventListener("webglcontextcreationerror",Oe,!1),Te.dispose(),_e.dispose(),ve.dispose(),ee.dispose(),re.dispose(),se.dispose(),me.dispose(),Ce.dispose(),Ne.dispose(),fe.dispose(),De.dispose(),De.removeEventListener("sessionstart",ke),De.removeEventListener("sessionend",Ge),He.stop()},this.renderBufferDirect=function(e,t,i,n,r,s){null===t&&(t=$);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(e,t,i,n,r){!0!==t.isScene&&(t=$);te.resetTextureUnits();const s=t.fog,a=n.isMeshStandardMaterial?t.environment:null,o=null===M?y.outputColorSpace:!0===M.isXRRenderTarget?M.texture.colorSpace:pt,l=(n.isMeshStandardMaterial?se:re).get(n.envMap||a),u=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,c=!!i.attributes.tangent&&(!!n.normalMap||n.anisotropy>0),h=!!i.morphAttributes.position,d=!!i.morphAttributes.normal,p=!!i.morphAttributes.color;let m=0;n.toneMapped&&(null!==M&&!0!==M.isXRRenderTarget||(m=y.toneMapping));const f=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,g=void 0!==f?f.length:0,v=ee.get(n),x=_.state.lights;if(!0===k&&(!0===G||e!==E)){const t=e===E&&n.id===w;xe.setState(n,e,t)}let b=!1;n.version===v.__version?v.needsLights&&v.lightsStateVersion!==x.state.version||v.outputColorSpace!==o||r.isBatchedMesh&&!1===v.batching?b=!0:r.isBatchedMesh||!0!==v.batching?r.isBatchedMesh&&!0===v.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===v.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===v.instancing?b=!0:r.isInstancedMesh||!0!==v.instancing?r.isSkinnedMesh&&!1===v.skinning?b=!0:r.isSkinnedMesh||!0!==v.skinning?r.isInstancedMesh&&!0===v.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===v.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===v.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===v.instancingMorph&&null!==r.morphTexture||v.envMap!==l||!0===n.fog&&v.fog!==s?b=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===xe.numPlanes&&v.numIntersection===xe.numIntersection?(v.vertexAlphas!==u||v.vertexTangents!==c||v.morphTargets!==h||v.morphNormals!==d||v.morphColors!==p||v.toneMapping!==m||v.morphTargetsCount!==g)&&(b=!0):b=!0:b=!0:b=!0:b=!0:(b=!0,v.__version=n.version);let T=v.currentProgram;!0===b&&(T=Ye(n,t,r));let S=!1,A=!1,R=!1;const C=T.getUniforms(),N=v.uniforms;Q.useProgram(T.program)&&(S=!0,A=!0,R=!0);n.id!==w&&(w=n.id,A=!0);if(S||E!==e){Q.buffers.depth.getReversed()?(H.copy(e.projectionMatrix),function(e){const t=e.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}(H),function(e){const t=e.elements;-1===t[11]?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=1-t[14])}(H),C.setValue(Pe,"projectionMatrix",H)):C.setValue(Pe,"projectionMatrix",e.projectionMatrix),C.setValue(Pe,"viewMatrix",e.matrixWorldInverse);const t=C.map.cameraPosition;void 0!==t&&t.setValue(Pe,j.setFromMatrixPosition(e.matrixWorld)),Z.logarithmicDepthBuffer&&C.setValue(Pe,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&C.setValue(Pe,"isOrthographic",!0===e.isOrthographicCamera),E!==e&&(E=e,A=!0,R=!0)}if(r.isSkinnedMesh){C.setOptional(Pe,r,"bindMatrix"),C.setOptional(Pe,r,"bindMatrixInverse");const e=r.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),C.setValue(Pe,"boneTexture",e.boneTexture,te))}r.isBatchedMesh&&(C.setOptional(Pe,r,"batchingTexture"),C.setValue(Pe,"batchingTexture",r._matricesTexture,te),C.setOptional(Pe,r,"batchingIdTexture"),C.setValue(Pe,"batchingIdTexture",r._indirectTexture,te),C.setOptional(Pe,r,"batchingColorTexture"),null!==r._colorsTexture&&C.setValue(Pe,"batchingColorTexture",r._colorsTexture,te));const P=i.morphAttributes;void 0===P.position&&void 0===P.normal&&void 0===P.color||we.update(r,i,T);(A||v.receiveShadow!==r.receiveShadow)&&(v.receiveShadow=r.receiveShadow,C.setValue(Pe,"receiveShadow",r.receiveShadow));n.isMeshGouraudMaterial&&null!==n.envMap&&(N.envMap.value=l,N.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);n.isMeshStandardMaterial&&null===n.envMap&&null!==t.environment&&(N.envMapIntensity.value=t.environmentIntensity);A&&(C.setValue(Pe,"toneMappingExposure",y.toneMappingExposure),v.needsLights&&(U=R,(L=N).ambientLightColor.needsUpdate=U,L.lightProbe.needsUpdate=U,L.directionalLights.needsUpdate=U,L.directionalLightShadows.needsUpdate=U,L.pointLights.needsUpdate=U,L.pointLightShadows.needsUpdate=U,L.spotLights.needsUpdate=U,L.spotLightShadows.needsUpdate=U,L.rectAreaLights.needsUpdate=U,L.hemisphereLights.needsUpdate=U),s&&!0===n.fog&&ge.refreshFogUniforms(N,s),ge.refreshMaterialUniforms(N,n,D,I,_.state.transmissionRenderTarget[e.id]),Mh.upload(Pe,Ke(v),N,te));var L,U;n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Mh.upload(Pe,Ke(v),N,te),n.uniformsNeedUpdate=!1);n.isSpriteMaterial&&C.setValue(Pe,"center",r.center);if(C.setValue(Pe,"modelViewMatrix",r.modelViewMatrix),C.setValue(Pe,"normalMatrix",r.normalMatrix),C.setValue(Pe,"modelMatrix",r.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){const e=n.uniformsGroups;for(let t=0,i=e.length;t<i;t++){const i=e[t];Ne.update(i,T),Ne.bind(i,T)}}return T}(e,t,i,n,r);Q.setMaterial(n,a);let l=i.index,u=1;if(!0===n.wireframe){if(l=ue.getWireframeAttribute(i),void 0===l)return;u=2}const c=i.drawRange,h=i.attributes.position;let d=c.start*u,p=(c.start+c.count)*u;null!==s&&(d=Math.max(d,s.start*u),p=Math.min(p,(s.start+s.count)*u)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=h&&(d=Math.max(d,0),p=Math.min(p,h.count));const m=p-d;if(m<0||m===1/0)return;let f;Ce.setup(r,n,o,i,l);let g=Ee;if(null!==l&&(f=oe.get(l),g=Ae,g.setIndex(f)),r.isMesh)!0===n.wireframe?(Q.setLineWidth(n.wireframeLinewidth*Y()),g.setMode(Pe.LINES)):g.setMode(Pe.TRIANGLES);else if(r.isLine){let e=n.linewidth;void 0===e&&(e=1),Q.setLineWidth(e*Y()),r.isLineSegments?g.setMode(Pe.LINES):r.isLineLoop?g.setMode(Pe.LINE_LOOP):g.setMode(Pe.LINE_STRIP)}else r.isPoints?g.setMode(Pe.POINTS):r.isSprite&&g.setMode(Pe.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)Yt("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),g.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(K.get("WEBGL_multi_draw"))g.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const e=r._multiDrawStarts,t=r._multiDrawCounts,i=r._multiDrawCount,s=l?oe.get(l).bytesPerElement:1,a=ee.get(n).currentProgram.getUniforms();for(let n=0;n<i;n++)a.setValue(Pe,"_gl_DrawID",n),g.render(e[n]/s,t[n])}else if(r.isInstancedMesh)g.renderInstances(d,m,r.count);else if(i.isInstancedBufferGeometry){const e=void 0!==i._maxInstanceCount?i._maxInstanceCount:1/0,t=Math.min(i.instanceCount,e);g.renderInstances(d,m,t)}else g.render(d,m)},this.compile=function(e,t,i=null){null===i&&(i=e),_=ve.get(i),_.init(t),x.push(_),i.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(_.pushLight(e),e.castShadow&&_.pushShadow(e))})),e!==i&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(_.pushLight(e),e.castShadow&&_.pushShadow(e))})),_.setupLights();const n=new Set;return e.traverse((function(e){if(!(e.isMesh||e.isPoints||e.isLine||e.isSprite))return;const t=e.material;if(t)if(Array.isArray(t))for(let r=0;r<t.length;r++){const s=t[r];Ve(s,i,e),n.add(s)}else Ve(t,i,e),n.add(t)})),_=x.pop(),n},this.compileAsync=function(e,t,i=null){const n=this.compile(e,t,i);return new Promise((t=>{function i(){n.forEach((function(e){ee.get(e).currentProgram.isReady()&&n.delete(e)})),0!==n.size?setTimeout(i,10):t(e)}null!==K.get("KHR_parallel_shader_compile")?i():setTimeout(i,10)}))};let ze=null;function ke(){He.stop()}function Ge(){He.start()}const He=new Uu;function We(e,t,i,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)i=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)_.pushLight(e),e.castShadow&&_.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||z.intersectsSprite(e)){n&&X.setFromMatrixPosition(e.matrixWorld).applyMatrix4(W);const t=me.update(e),r=e.material;r.visible&&g.push(e,t,r,i,X.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||z.intersectsObject(e))){const t=me.update(e),r=e.material;if(n&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),X.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),X.copy(t.boundingSphere.center)),X.applyMatrix4(e.matrixWorld).applyMatrix4(W)),Array.isArray(r)){const n=t.groups;for(let s=0,a=n.length;s<a;s++){const a=n[s],o=r[a.materialIndex];o&&o.visible&&g.push(e,t,o,i,X.z,a)}}else r.visible&&g.push(e,t,r,i,X.z,null)}const r=e.children;for(let s=0,a=r.length;s<a;s++)We(r[s],t,i,n)}function je(e,t,i,n){const r=e.opaque,s=e.transmissive,a=e.transparent;_.setupLightsView(i),!0===k&&xe.setGlobalState(y.clippingPlanes,i),n&&Q.viewport(A.copy(n)),r.length>0&&$e(r,t,i),s.length>0&&$e(s,t,i),a.length>0&&$e(a,t,i),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function Xe(e,t,i,n){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;void 0===_.state.transmissionRenderTarget[n.id]&&(_.state.transmissionRenderTarget[n.id]=new hi(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")||K.has("EXT_color_buffer_float")?ce:ne,minFilter:ie,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Jt.workingColorSpace}));const r=_.state.transmissionRenderTarget[n.id],a=n.viewport||A;r.setSize(a.z*y.transmissionResolutionScale,a.w*y.transmissionResolutionScale);const o=y.getRenderTarget();y.setRenderTarget(r),y.getClearColor(N),P=y.getClearAlpha(),P<1&&y.setClearColor(16777215,.5),y.clear(),q&&Te.render(i);const l=y.toneMapping;y.toneMapping=0;const u=n.viewport;if(void 0!==n.viewport&&(n.viewport=void 0),_.setupLightsView(n),!0===k&&xe.setGlobalState(y.clippingPlanes,n),$e(e,i,n),te.updateMultisampleRenderTarget(r),te.updateRenderTargetMipmap(r),!1===K.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=s.material,u=s.group;if(2===l.side&&a.layers.test(n.layers)){const t=l.side;l.side=1,l.needsUpdate=!0,qe(a,i,n,o,l,u),l.side=t,l.needsUpdate=!0,e=!0}}!0===e&&(te.updateMultisampleRenderTarget(r),te.updateRenderTargetMipmap(r))}y.setRenderTarget(o),y.setClearColor(N,P),void 0!==u&&(n.viewport=u),y.toneMapping=l}function $e(e,t,i){const n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){const s=e[r],a=s.object,o=s.geometry,l=s.group;let u=s.material;!0===u.allowOverride&&null!==n&&(u=n),a.layers.test(i.layers)&&qe(a,t,i,o,u,l)}}function qe(e,t,i,n,r,s){e.onBeforeRender(y,t,i,n,r,s),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(y,t,i,n,e,s),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,y.renderBufferDirect(i,t,n,r,e,s),r.side=0,r.needsUpdate=!0,y.renderBufferDirect(i,t,n,r,e,s),r.side=2):y.renderBufferDirect(i,t,n,r,e,s),e.onAfterRender(y,t,i,n,r,s)}function Ye(e,t,i){!0!==t.isScene&&(t=$);const n=ee.get(e),r=_.state.lights,s=_.state.shadowsArray,a=r.state.version,o=fe.getParameters(e,r.state,s,t,i),l=fe.getProgramCacheKey(o);let u=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?se:re).get(e.envMap||n.environment),n.envMapRotation=null!==n.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===u&&(e.addEventListener("dispose",Be),u=new Map,n.programs=u);let c=u.get(l);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===a)return Ze(e,o),c}else o.uniforms=fe.getUniforms(e),e.onBeforeCompile(o,y),c=fe.acquireProgram(o,l),u.set(l,c),n.uniforms=o.uniforms;const h=n.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=xe.uniform),Ze(e,o),n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=a,n.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotLightMatrix.value=r.state.spotLightMatrix,h.spotLightMap.value=r.state.spotLightMap,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix),n.currentProgram=c,n.uniformsList=null,c}function Ke(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=Mh.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function Ze(e,t){const i=ee.get(e);i.outputColorSpace=t.outputColorSpace,i.batching=t.batching,i.batchingColor=t.batchingColor,i.instancing=t.instancing,i.instancingColor=t.instancingColor,i.instancingMorph=t.instancingMorph,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}He.setAnimationLoop((function(e){ze&&ze(e)})),"undefined"!=typeof self&&He.setContext(self),this.setAnimationLoop=function(e){ze=e,De.setAnimationLoop(e),null===e?He.stop():He.start()},De.addEventListener("sessionstart",ke),De.addEventListener("sessionend",Ge),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return;if(!0===b)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===De.enabled&&!0===De.isPresenting&&(!0===De.cameraAutoUpdate&&De.updateCamera(t),t=De.getCamera()),!0===e.isScene&&e.onBeforeRender(y,e,t,M),_=ve.get(e,x.length),_.init(t),x.push(_),W.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),z.setFromProjectionMatrix(W),G=this.localClippingEnabled,k=xe.init(this.clippingPlanes,G),g=_e.get(e,v.length),g.init(),v.push(g),!0===De.enabled&&!0===De.isPresenting){const e=y.xr.getDepthSensingMesh();null!==e&&We(e,t,-1/0,y.sortObjects)}We(e,t,0,y.sortObjects),g.finish(),!0===y.sortObjects&&g.sort(U,F),q=!1===De.enabled||!1===De.isPresenting||!1===De.hasDepthSensing(),q&&Te.addToRenderList(g,e),this.info.render.frame++,!0===k&&xe.beginShadows();const i=_.state.shadowsArray;ye.render(i,e,t),!0===k&&xe.endShadows(),!0===this.info.autoReset&&this.info.reset();const n=g.opaque,r=g.transmissive;if(_.setupLights(),t.isArrayCamera){const i=t.cameras;if(r.length>0)for(let t=0,s=i.length;t<s;t++){Xe(n,r,e,i[t])}q&&Te.render(e);for(let t=0,n=i.length;t<n;t++){const n=i[t];je(g,e,n,n.viewport)}}else r.length>0&&Xe(n,r,e,t),q&&Te.render(e),je(g,e,t);null!==M&&0===S&&(te.updateMultisampleRenderTarget(M),te.updateRenderTargetMipmap(M)),!0===e.isScene&&e.onAfterRender(y,e,t),Ce.resetDefaultState(),w=-1,E=null,x.pop(),x.length>0?(_=x[x.length-1],!0===k&&xe.setGlobalState(y.clippingPlanes,_.state.camera)):_=null,v.pop(),g=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(e,t,i){const n=ee.get(e);n.__autoAllocateDepthBuffer=!1===e.resolveDepthBuffer,!1===n.__autoAllocateDepthBuffer&&(n.__useRenderToTexture=!1),ee.get(e.texture).__webglTexture=t,ee.get(e.depthTexture).__webglTexture=n.__autoAllocateDepthBuffer?void 0:i,n.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(e,t){const i=ee.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t};const Qe=Pe.createFramebuffer();this.setRenderTarget=function(e,t=0,i=0){M=e,T=t,S=i;let n=!0,r=null,s=!1,a=!1;if(e){const o=ee.get(e);if(void 0!==o.__useDefaultFramebuffer)Q.bindFramebuffer(Pe.FRAMEBUFFER,null),n=!1;else if(void 0===o.__webglFramebuffer)te.setupRenderTarget(e);else if(o.__hasExternalTextures)te.rebindTextures(e,ee.get(e.texture).__webglTexture,ee.get(e.depthTexture).__webglTexture);else if(e.depthBuffer){const t=e.depthTexture;if(o.__boundDepthTexture!==t){if(null!==t&&ee.has(t)&&(e.width!==t.image.width||e.height!==t.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");te.setupDepthRenderbuffer(e)}}const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(a=!0);const u=ee.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=Array.isArray(u[t])?u[t][i]:u[t],s=!0):r=e.samples>0&&!1===te.useMultisampledRTT(e)?ee.get(e).__webglMultisampledFramebuffer:Array.isArray(u)?u[i]:u,A.copy(e.viewport),R.copy(e.scissor),C=e.scissorTest}else A.copy(O).multiplyScalar(D).floor(),R.copy(B).multiplyScalar(D).floor(),C=V;0!==i&&(r=Qe);if(Q.bindFramebuffer(Pe.FRAMEBUFFER,r)&&n&&Q.drawBuffers(e,r),Q.viewport(A),Q.scissor(R),Q.setScissorTest(C),s){const n=ee.get(e.texture);Pe.framebufferTexture2D(Pe.FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,Pe.TEXTURE_CUBE_MAP_POSITIVE_X+t,n.__webglTexture,i)}else if(a){const n=ee.get(e.texture),r=t;Pe.framebufferTextureLayer(Pe.FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,n.__webglTexture,i,r)}else if(null!==e&&0!==i){const t=ee.get(e.texture);Pe.framebufferTexture2D(Pe.FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,Pe.TEXTURE_2D,t.__webglTexture,i)}w=-1},this.readRenderTargetPixels=function(e,t,i,n,r,s,a){if(!e||!e.isWebGLRenderTarget)return;let o=ee.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Q.bindFramebuffer(Pe.FRAMEBUFFER,o);try{const a=e.texture,o=a.format,l=a.type;if(!Z.textureFormatReadable(o))return;if(!Z.textureTypeReadable(l))return;t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&Pe.readPixels(t,i,n,r,Re.convert(o),Re.convert(l),s)}finally{const e=null!==M?ee.get(M).__webglFramebuffer:null;Q.bindFramebuffer(Pe.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,i,n,r,s,a){if(!e||!e.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=ee.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){if(t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r){Q.bindFramebuffer(Pe.FRAMEBUFFER,o);const a=e.texture,l=a.format,u=a.type;if(!Z.textureFormatReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Z.textureTypeReadable(u))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const c=Pe.createBuffer();Pe.bindBuffer(Pe.PIXEL_PACK_BUFFER,c),Pe.bufferData(Pe.PIXEL_PACK_BUFFER,s.byteLength,Pe.STREAM_READ),Pe.readPixels(t,i,n,r,Re.convert(l),Re.convert(u),0);const h=null!==M?ee.get(M).__webglFramebuffer:null;Q.bindFramebuffer(Pe.FRAMEBUFFER,h);const d=Pe.fenceSync(Pe.SYNC_GPU_COMMANDS_COMPLETE,0);return Pe.flush(),await function(e,t,i){return new Promise((function(n,r){setTimeout((function s(){switch(e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0)){case e.WAIT_FAILED:r();break;case e.TIMEOUT_EXPIRED:setTimeout(s,i);break;default:n()}}),i)}))}(Pe,d,4),Pe.bindBuffer(Pe.PIXEL_PACK_BUFFER,c),Pe.getBufferSubData(Pe.PIXEL_PACK_BUFFER,0,s),Pe.deleteBuffer(c),Pe.deleteSync(d),s}throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(e,t=null,i=0){const n=Math.pow(2,-i),r=Math.floor(e.image.width*n),s=Math.floor(e.image.height*n),a=null!==t?t.x:0,o=null!==t?t.y:0;te.setTexture2D(e,0),Pe.copyTexSubImage2D(Pe.TEXTURE_2D,i,0,0,a,o,r,s),Q.unbindTexture()};const Je=Pe.createFramebuffer(),et=Pe.createFramebuffer();this.copyTextureToTexture=function(e,t,i=null,n=null,r=0,s=null){let a,o,l,u,c,h,d,p,m;null===s&&(0!==r?(Yt("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),s=r,r=0):s=0);const f=e.isCompressedTexture?e.mipmaps[s]:e.image;if(null!==i)a=i.max.x-i.min.x,o=i.max.y-i.min.y,l=i.isBox3?i.max.z-i.min.z:1,u=i.min.x,c=i.min.y,h=i.isBox3?i.min.z:0;else{const t=Math.pow(2,-r);a=Math.floor(f.width*t),o=Math.floor(f.height*t),l=e.isDataArrayTexture?f.depth:e.isData3DTexture?Math.floor(f.depth*t):1,u=0,c=0,h=0}null!==n?(d=n.x,p=n.y,m=n.z):(d=0,p=0,m=0);const g=Re.convert(t.format),_=Re.convert(t.type);let v;t.isData3DTexture?(te.setTexture3D(t,0),v=Pe.TEXTURE_3D):t.isDataArrayTexture||t.isCompressedArrayTexture?(te.setTexture2DArray(t,0),v=Pe.TEXTURE_2D_ARRAY):(te.setTexture2D(t,0),v=Pe.TEXTURE_2D),Pe.pixelStorei(Pe.UNPACK_FLIP_Y_WEBGL,t.flipY),Pe.pixelStorei(Pe.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Pe.pixelStorei(Pe.UNPACK_ALIGNMENT,t.unpackAlignment);const x=Pe.getParameter(Pe.UNPACK_ROW_LENGTH),y=Pe.getParameter(Pe.UNPACK_IMAGE_HEIGHT),b=Pe.getParameter(Pe.UNPACK_SKIP_PIXELS),T=Pe.getParameter(Pe.UNPACK_SKIP_ROWS),S=Pe.getParameter(Pe.UNPACK_SKIP_IMAGES);Pe.pixelStorei(Pe.UNPACK_ROW_LENGTH,f.width),Pe.pixelStorei(Pe.UNPACK_IMAGE_HEIGHT,f.height),Pe.pixelStorei(Pe.UNPACK_SKIP_PIXELS,u),Pe.pixelStorei(Pe.UNPACK_SKIP_ROWS,c),Pe.pixelStorei(Pe.UNPACK_SKIP_IMAGES,h);const M=e.isDataArrayTexture||e.isData3DTexture,w=t.isDataArrayTexture||t.isData3DTexture;if(e.isDepthTexture){const i=ee.get(e),n=ee.get(t),f=ee.get(i.__renderTarget),g=ee.get(n.__renderTarget);Q.bindFramebuffer(Pe.READ_FRAMEBUFFER,f.__webglFramebuffer),Q.bindFramebuffer(Pe.DRAW_FRAMEBUFFER,g.__webglFramebuffer);for(let _=0;_<l;_++)M&&(Pe.framebufferTextureLayer(Pe.READ_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,ee.get(e).__webglTexture,r,h+_),Pe.framebufferTextureLayer(Pe.DRAW_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,ee.get(t).__webglTexture,s,m+_)),Pe.blitFramebuffer(u,c,a,o,d,p,a,o,Pe.DEPTH_BUFFER_BIT,Pe.NEAREST);Q.bindFramebuffer(Pe.READ_FRAMEBUFFER,null),Q.bindFramebuffer(Pe.DRAW_FRAMEBUFFER,null)}else if(0!==r||e.isRenderTargetTexture||ee.has(e)){const i=ee.get(e),n=ee.get(t);Q.bindFramebuffer(Pe.READ_FRAMEBUFFER,Je),Q.bindFramebuffer(Pe.DRAW_FRAMEBUFFER,et);for(let e=0;e<l;e++)M?Pe.framebufferTextureLayer(Pe.READ_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,i.__webglTexture,r,h+e):Pe.framebufferTexture2D(Pe.READ_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,Pe.TEXTURE_2D,i.__webglTexture,r),w?Pe.framebufferTextureLayer(Pe.DRAW_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,n.__webglTexture,s,m+e):Pe.framebufferTexture2D(Pe.DRAW_FRAMEBUFFER,Pe.COLOR_ATTACHMENT0,Pe.TEXTURE_2D,n.__webglTexture,s),0!==r?Pe.blitFramebuffer(u,c,a,o,d,p,a,o,Pe.COLOR_BUFFER_BIT,Pe.NEAREST):w?Pe.copyTexSubImage3D(v,s,d,p,m+e,u,c,a,o):Pe.copyTexSubImage2D(v,s,d,p,u,c,a,o);Q.bindFramebuffer(Pe.READ_FRAMEBUFFER,null),Q.bindFramebuffer(Pe.DRAW_FRAMEBUFFER,null)}else w?e.isDataTexture||e.isData3DTexture?Pe.texSubImage3D(v,s,d,p,m,a,o,l,g,_,f.data):t.isCompressedArrayTexture?Pe.compressedTexSubImage3D(v,s,d,p,m,a,o,l,g,f.data):Pe.texSubImage3D(v,s,d,p,m,a,o,l,g,_,f):e.isDataTexture?Pe.texSubImage2D(Pe.TEXTURE_2D,s,d,p,a,o,g,_,f.data):e.isCompressedTexture?Pe.compressedTexSubImage2D(Pe.TEXTURE_2D,s,d,p,f.width,f.height,g,f.data):Pe.texSubImage2D(Pe.TEXTURE_2D,s,d,p,a,o,g,_,f);Pe.pixelStorei(Pe.UNPACK_ROW_LENGTH,x),Pe.pixelStorei(Pe.UNPACK_IMAGE_HEIGHT,y),Pe.pixelStorei(Pe.UNPACK_SKIP_PIXELS,b),Pe.pixelStorei(Pe.UNPACK_SKIP_ROWS,T),Pe.pixelStorei(Pe.UNPACK_SKIP_IMAGES,S),0===s&&t.generateMipmaps&&Pe.generateMipmap(v),Q.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i=null,n=null,r=0){return Yt('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(e,t,i,n,r)},this.initRenderTarget=function(e){void 0===ee.get(e).__webglFramebuffer&&te.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?te.setTextureCube(e,0):e.isData3DTexture?te.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?te.setTexture2DArray(e,0):te.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){T=0,S=0,M=null,Q.reset(),Ce.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Rt}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Jt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Jt._getUnpackColorSpace()}}const vd={type:"change"},xd={type:"start"},yd={type:"end"},bd=new Wi,Td=new Us,Sd=Math.cos(70*kt.DEG2RAD),Md=new fi,wd=2*Math.PI,Ed=-1,Ad=0,Rd=1,Cd=2,Nd=3,Pd=4,Ld=5,Id=6,Dd=1e-6;class Ud extends Iu{constructor(e,t=null){super(e,t),this.state=Ed,this.target=new fi,this.cursor=new fi,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n,MIDDLE:r,RIGHT:s},this.touches={ONE:a,TWO:l},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new fi,this._lastQuaternion=new mi,this._lastTargetPosition=new fi,this._quat=(new mi).setFromUnitVectors(e.up,new fi(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new fu,this._sphericalDelta=new fu,this._scale=1,this._panOffset=new fi,this._rotateStart=new Gt,this._rotateEnd=new Gt,this._rotateDelta=new Gt,this._panStart=new Gt,this._panEnd=new Gt,this._panDelta=new Gt,this._dollyStart=new Gt,this._dollyEnd=new Gt,this._dollyDelta=new Gt,this._dollyDirection=new fi,this._mouse=new Gt,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Od.bind(this),this._onPointerDown=Fd.bind(this),this._onPointerUp=Bd.bind(this),this._onContextMenu=jd.bind(this),this._onMouseWheel=kd.bind(this),this._onKeyDown=Gd.bind(this),this._onTouchStart=Hd.bind(this),this._onTouchMove=Wd.bind(this),this._onMouseDown=Vd.bind(this),this._onMouseMove=zd.bind(this),this._interceptControlDown=Xd.bind(this),this._interceptControlUp=$d.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(vd),this.update(),this.state=Ed}update(e=null){const t=this.object.position;Md.copy(t).sub(this.target),Md.applyQuaternion(this._quat),this._spherical.setFromVector3(Md),this.autoRotate&&this.state===Ed&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=wd:i>Math.PI&&(i-=wd),n<-Math.PI?n+=wd:n>Math.PI&&(n-=wd),this._spherical.theta=i<=n?Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const e=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=e!=this._spherical.radius}if(Md.setFromSpherical(this._spherical),Md.applyQuaternion(this._quatInverse),t.copy(this.target).add(Md),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let e=null;if(this.object.isPerspectiveCamera){const t=Md.length();e=this._clampDistance(t*this._scale);const i=t-e;this.object.position.addScaledVector(this._dollyDirection,i),this.object.updateMatrixWorld(),r=!!i}else if(this.object.isOrthographicCamera){const t=new fi(this._mouse.x,this._mouse.y,0);t.unproject(this.object);const i=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=i!==this.object.zoom;const n=new fi(this._mouse.x,this._mouse.y,0);n.unproject(this.object),this.object.position.sub(n).add(t),this.object.updateMatrixWorld(),e=Md.length()}else this.zoomToCursor=!1;null!==e&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(e).add(this.object.position):(bd.origin.copy(this.object.position),bd.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(bd.direction))<Sd?this.object.lookAt(this.target):(Td.setFromNormalAndCoplanarPoint(this.object.up,this.target),bd.intersectPlane(Td,this.target))))}else if(this.object.isOrthographicCamera){const e=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),e!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,!!(r||this._lastPosition.distanceToSquared(this.object.position)>Dd||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Dd||this._lastTargetPosition.distanceToSquared(this.target)>Dd)&&(this.dispatchEvent(vd),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(e){return null!==e?wd/60*this.autoRotateSpeed*e:wd/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(.01*e);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Md.setFromMatrixColumn(t,0),Md.multiplyScalar(-e),this._panOffset.add(Md)}_panUp(e,t){!0===this.screenSpacePanning?Md.setFromMatrixColumn(t,1):(Md.setFromMatrixColumn(t,0),Md.crossVectors(this.object.up,Md)),Md.multiplyScalar(e),this._panOffset.add(Md)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;Md.copy(n).sub(this.target);let r=Md.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/i.clientHeight,this.object.matrix),this._panUp(2*t*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):this.enablePan=!1}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:this.enableZoom=!1}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:this.enableZoom=!1}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,r=t-i.top,s=i.width,a=i.height;this._mouse.x=n/s*2-1,this._mouse.y=-r/a*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(wd*this._rotateDelta.x/t.clientHeight),this._rotateUp(wd*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(wd*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-wd*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(wd*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-wd*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(1===this._pointers.length)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(1===this._pointers.length)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(1==this._pointers.length)this._rotateEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateEnd.set(i,n)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(wd*this._rotateDelta.x/t.clientHeight),this._rotateUp(wd*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(1===this._pointers.length)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const s=.5*(e.pageX+t.x),a=.5*(e.pageY+t.y);this._updateZoomParameters(s,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return void this._pointers.splice(t,1)}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];void 0===t&&(t=new Gt,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function Fd(e){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(e)||(this._addPointer(e),"touch"===e.pointerType?this._onTouchStart(e):this._onMouseDown(e)))}function Od(e){!1!==this.enabled&&("touch"===e.pointerType?this._onTouchMove(e):this._onMouseMove(e))}function Bd(e){switch(this._removePointer(e),this._pointers.length){case 0:this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(yd),this.state=Ed;break;case 1:const t=this._pointers[0],i=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:i.x,pageY:i.y})}}function Vd(e){let t;switch(e.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case r:if(!1===this.enableZoom)return;this._handleMouseDownDolly(e),this.state=Rd;break;case n:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=Cd}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=Ad}break;case s:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=Ad}else{if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=Cd}break;default:this.state=Ed}this.state!==Ed&&this.dispatchEvent(xd)}function zd(e){switch(this.state){case Ad:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(e);break;case Rd:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(e);break;case Cd:if(!1===this.enablePan)return;this._handleMouseMovePan(e)}}function kd(e){!1!==this.enabled&&!1!==this.enableZoom&&this.state===Ed&&(e.preventDefault(),this.dispatchEvent(xd),this._handleMouseWheel(this._customWheelEvent(e)),this.dispatchEvent(yd))}function Gd(e){!1!==this.enabled&&this._handleKeyDown(e)}function Hd(e){switch(this._trackPointer(e),this._pointers.length){case 1:switch(this.touches.ONE){case a:if(!1===this.enableRotate)return;this._handleTouchStartRotate(e),this.state=Nd;break;case o:if(!1===this.enablePan)return;this._handleTouchStartPan(e),this.state=Pd;break;default:this.state=Ed}break;case 2:switch(this.touches.TWO){case l:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(e),this.state=Ld;break;case u:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(e),this.state=Id;break;default:this.state=Ed}break;default:this.state=Ed}this.state!==Ed&&this.dispatchEvent(xd)}function Wd(e){switch(this._trackPointer(e),this.state){case Nd:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(e),this.update();break;case Pd:if(!1===this.enablePan)return;this._handleTouchMovePan(e),this.update();break;case Ld:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(e),this.update();break;case Id:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(e),this.update();break;default:this.state=Ed}}function jd(e){!1!==this.enabled&&e.preventDefault()}function Xd(e){if("Control"===e.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function $d(e){if("Control"===e.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}var qd=function(){var e=0,t=document.createElement("div");function i(e){return t.appendChild(e.dom),e}function n(i){for(var n=0;n<t.children.length;n++)t.children[n].style.display=n===i?"block":"none";e=i}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",(function(i){i.preventDefault(),n(++e%t.children.length)}),!1);var r=(performance||Date).now(),s=r,a=0,o=i(new qd.Panel("FPS","#0ff","#002")),l=i(new qd.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var u=i(new qd.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:t,addPanel:i,showPanel:n,begin:function(){r=(performance||Date).now()},end:function(){a++;var e=(performance||Date).now();if(l.update(e-r,200),e>=s+1e3&&(o.update(1e3*a/(e-s),100),s=e,a=0,u)){var t=performance.memory;u.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){r=this.end()},domElement:t,setMode:n}};qd.Panel=function(e,t,i){var n=1/0,r=0,s=Math.round,a=s(window.devicePixelRatio||1),o=80*a,l=48*a,u=3*a,c=2*a,h=3*a,d=15*a,p=74*a,m=30*a,f=document.createElement("canvas");f.width=o,f.height=l,f.style.cssText="width:80px;height:48px";var g=f.getContext("2d");return g.font="bold "+9*a+"px Helvetica,Arial,sans-serif",g.textBaseline="top",g.fillStyle=i,g.fillRect(0,0,o,l),g.fillStyle=t,g.fillText(e,u,c),g.fillRect(h,d,p,m),g.fillStyle=i,g.globalAlpha=.9,g.fillRect(h,d,p,m),{dom:f,update:function(l,_){n=Math.min(n,l),r=Math.max(r,l),g.fillStyle=i,g.globalAlpha=1,g.fillRect(0,0,o,d),g.fillStyle=t,g.fillText(s(l)+" "+e+" ("+s(n)+"-"+s(r)+")",u,c),g.drawImage(f,h+a,d,p-a,m,h,d,p-a,m),g.fillRect(h+p-a,d,a,m),g.fillStyle=i,g.globalAlpha=.9,g.fillRect(h+p-a,d,a,s((1-l/_)*m))}}};
/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */
class Yd{constructor(e,t,i,n,r="div"){this.parent=e,this.object=t,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(n),this.$name=document.createElement("div"),this.$name.classList.add("name"),Yd.nextNameID=Yd.nextNameID||0,this.$name.id="lil-gui-name-"+ ++Yd.nextNameID,this.$widget=document.createElement(r),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(e){return this._name=e,this.$name.innerHTML=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),void 0!==this._onChange&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),void 0!==this._onFinishChange&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled||(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e)),this}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,void 0!==this._listenCallbackID&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.object[this.property]=e,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class Kd extends Yd{constructor(e,t,i){super(e,t,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",(()=>{this.setValue(this.$input.checked),this._callOnFinishChange()})),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function Zd(e){let t,i;return(t=e.match(/(#|0x)?([a-f0-9]{6})/i))?i=t[2]:(t=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?i=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(i=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!i&&"#"+i}const Qd={isPrimitive:!0,match:e=>"string"==typeof e,fromHexString:Zd,toHexString:Zd},Jd={isPrimitive:!0,match:e=>"number"==typeof e,fromHexString:e=>parseInt(e.substring(1),16),toHexString:e=>"#"+e.toString(16).padStart(6,0)},ep={isPrimitive:!1,match:Array.isArray,fromHexString(e,t,i=1){const n=Jd.fromHexString(e);t[0]=(n>>16&255)/255*i,t[1]=(n>>8&255)/255*i,t[2]=(255&n)/255*i},toHexString:([e,t,i],n=1)=>Jd.toHexString(e*(n=255/n)<<16^t*n<<8^i*n)},tp={isPrimitive:!1,match:e=>Object(e)===e,fromHexString(e,t,i=1){const n=Jd.fromHexString(e);t.r=(n>>16&255)/255*i,t.g=(n>>8&255)/255*i,t.b=(255&n)/255*i},toHexString:({r:e,g:t,b:i},n=1)=>Jd.toHexString(e*(n=255/n)<<16^t*n<<8^i*n)},ip=[Qd,Jd,ep,tp];class np extends Yd{constructor(e,t,i,n){var r;super(e,t,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(r=this.initialValue,ip.find((e=>e.match(r)))),this._rgbScale=n,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",(()=>{this._setValueFromHexString(this.$input.value)})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$text.addEventListener("input",(()=>{const e=Zd(this.$text.value);e&&this._setValueFromHexString(e)})),this.$text.addEventListener("focus",(()=>{this._textFocused=!0,this.$text.select()})),this.$text.addEventListener("blur",(()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()})),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class rp extends Yd{constructor(e,t,i){super(e,t,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",(e=>{e.preventDefault(),this.getValue().call(this.object)})),this.$button.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$disable=this.$button}}class sp extends Yd{constructor(e,t,i,n,r,s){super(e,t,i,"number"),this._initInput(),this.min(n),this.max(r);const a=void 0!==s;this.step(a?s:this._getImplicitStep(),a),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=100*t+"%"}return this._inputFocused||(this.$input.value=void 0===this._decimals?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=e=>{const t=parseFloat(this.$input.value);isNaN(t)||(this._snapClampSetValue(t+e),this.$input.value=this.getValue())};let t,i,n,r,s,a=!1;const o=e=>{if(a){const n=e.clientX-t,r=e.clientY-i;Math.abs(r)>5?(e.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(n)>5&&l()}if(!a){const t=e.clientY-n;s-=t*this._step*this._arrowKeyMultiplier(e),r+s>this._max?s=this._max-r:r+s<this._min&&(s=this._min-r),this._snapClampSetValue(r+s)}n=e.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",o),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",(()=>{let e=parseFloat(this.$input.value);isNaN(e)||(this._stepExplicit&&(e=this._snap(e)),this.setValue(this._clamp(e)))})),this.$input.addEventListener("keydown",(t=>{"Enter"===t.code&&this.$input.blur(),"ArrowUp"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t))),"ArrowDown"===t.code&&(t.preventDefault(),e(this._step*this._arrowKeyMultiplier(t)*-1))})),this.$input.addEventListener("wheel",(t=>{this._inputFocused&&(t.preventDefault(),e(this._step*this._normalizeMouseWheel(t)))}),{passive:!1}),this.$input.addEventListener("mousedown",(e=>{t=e.clientX,i=n=e.clientY,a=!0,r=this.getValue(),s=0,window.addEventListener("mousemove",o),window.addEventListener("mouseup",l)})),this.$input.addEventListener("focus",(()=>{this._inputFocused=!0})),this.$input.addEventListener("blur",(()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()}))}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=e=>{const t=this.$slider.getBoundingClientRect();let i=(n=e,r=t.left,s=t.right,a=this._min,(n-r)/(s-r)*(this._max-a)+a);var n,r,s,a;this._snapClampSetValue(i)},t=t=>{e(t.clientX)},i=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",t),window.removeEventListener("mouseup",i)};let n,r,s=!1;const a=t=>{t.preventDefault(),this._setDraggingStyle(!0),e(t.touches[0].clientX),s=!1},o=t=>{if(s){const e=t.touches[0].clientX-n,i=t.touches[0].clientY-r;Math.abs(e)>Math.abs(i)?a(t):(window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l))}else t.preventDefault(),e(t.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",o),window.removeEventListener("touchend",l)},u=this._callOnFinishChange.bind(this);let c;this.$slider.addEventListener("mousedown",(n=>{this._setDraggingStyle(!0),e(n.clientX),window.addEventListener("mousemove",t),window.addEventListener("mouseup",i)})),this.$slider.addEventListener("touchstart",(e=>{e.touches.length>1||(this._hasScrollBar?(n=e.touches[0].clientX,r=e.touches[0].clientY,s=!0):a(e),window.addEventListener("touchmove",o,{passive:!1}),window.addEventListener("touchend",l))}),{passive:!1}),this.$slider.addEventListener("wheel",(e=>{if(Math.abs(e.deltaX)<Math.abs(e.deltaY)&&this._hasScrollBar)return;e.preventDefault();const t=this._normalizeMouseWheel(e)*this._step;this._snapClampSetValue(this.getValue()+t),this.$input.value=this.getValue(),clearTimeout(c),c=setTimeout(u,400)}),{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle("lil-gui-"+t,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:i}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,i=-e.wheelDelta/120,i*=this._stepExplicit?1:10),t+-i}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return void 0!==this._min}get _hasMax(){return void 0!==this._max}}class ap extends Yd{constructor(e,t,i,n){super(e,t,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(n)?n:Object.values(n),this._names=Array.isArray(n)?n:Object.keys(n),this._names.forEach((e=>{const t=document.createElement("option");t.innerHTML=e,this.$select.appendChild(t)})),this.$select.addEventListener("change",(()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()})),this.$select.addEventListener("focus",(()=>{this.$display.classList.add("focus")})),this.$select.addEventListener("blur",(()=>{this.$display.classList.remove("focus")})),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.innerHTML=-1===t?e:this._names[t],this}}class op extends Yd{constructor(e,t,i){super(e,t,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",(()=>{this.setValue(this.$input.value)})),this.$input.addEventListener("keydown",(e=>{"Enter"===e.code&&this.$input.blur()})),this.$input.addEventListener("blur",(()=>{this._callOnFinishChange()})),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let lp=!1;class up{constructor({parent:e,autoPlace:t=void 0===e,container:i,width:n,title:r="Controls",injectStyles:s=!0,touchStyles:a=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",(()=>this.openAnimated(this._closed))),this.$title.addEventListener("keydown",(e=>{"Enter"!==e.code&&"Space"!==e.code||(e.preventDefault(),this.$title.click())})),this.$title.addEventListener("touchstart",(()=>{}),{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),a&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!lp&&s&&(function(){const e=document.createElement("style");e.innerHTML='.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}';const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}(),lp=!0),i?i.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),n&&this.domElement.style.setProperty("--width",n+"px"),this.domElement.addEventListener("keydown",(e=>e.stopPropagation())),this.domElement.addEventListener("keyup",(e=>e.stopPropagation()))}add(e,t,i,n,r){if(Object(i)===i)return new ap(this,e,t,i);switch(typeof e[t]){case"number":return new sp(this,e,t,i,n,r);case"boolean":return new Kd(this,e,t);case"string":return new op(this,e,t);case"function":return new rp(this,e,t)}}addColor(e,t,i=1){return new np(this,e,t,i)}addFolder(e){return new up({parent:this,title:e})}load(e,t=!0){return e.controllers&&this.controllers.forEach((t=>{t instanceof rp||t._name in e.controllers&&t.load(e.controllers[t._name])})),t&&e.folders&&this.folders.forEach((t=>{t._title in e.folders&&t.load(e.folders[t._title])})),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach((e=>{if(!(e instanceof rp)){if(e._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${e._name}"`);t.controllers[e._name]=e.save()}})),e&&this.folders.forEach((e=>{if(e._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${e._title}"`);t.folders[e._title]=e.save()})),t}open(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._closed=!e,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame((()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const i=e=>{e.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const n=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame((()=>{this.$children.style.height=n+"px"}))})),this}title(e){return this._title=e,this.$title.innerHTML=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach((e=>e.reset())),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),void 0!==this._onChange&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),void 0!==this._onFinishChange&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach((e=>e.destroy()))}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach((t=>{e=e.concat(t.controllersRecursive())})),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach((t=>{e=e.concat(t.foldersRecursive())})),e}}class cp extends fl{constructor(e){super(e),this.type=ce}parse(e){const t=function(e,t){switch(e){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(t||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(t||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(t||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(t||""))}},i=function(e,t,i){t=t||1024;let n=e.pos,r=-1,s=0,a="",o=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));for(;0>(r=o.indexOf("\n"))&&s<t&&n<e.byteLength;)a+=o,s+=o.length,n+=128,o+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));return-1<r&&(e.pos+=s+r+1,a+o.slice(0,r))},n=function(e,t,i,n){const r=e[t+3],s=Math.pow(2,r-128)/255;i[n+0]=e[t+0]*s,i[n+1]=e[t+1]*s,i[n+2]=e[t+2]*s,i[n+3]=1},r=function(e,t,i,n){const r=e[t+3],s=Math.pow(2,r-128)/255;i[n+0]=$n.toHalfFloat(Math.min(e[t+0]*s,65504)),i[n+1]=$n.toHalfFloat(Math.min(e[t+1]*s,65504)),i[n+2]=$n.toHalfFloat(Math.min(e[t+2]*s,65504)),i[n+3]=$n.toHalfFloat(1)},s=new Uint8Array(e);s.pos=0;const a=function(e){const n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,a=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,u;for((e.pos>=e.byteLength||!(l=i(e)))&&t(1,"no header found"),(u=l.match(/^#\?(\S+)/))||t(3,"bad initial token"),o.valid|=1,o.programtype=u[1],o.string+=l+"\n";l=i(e),!1!==l;)if(o.string+=l+"\n","#"!==l.charAt(0)){if((u=l.match(n))&&(o.gamma=parseFloat(u[1])),(u=l.match(r))&&(o.exposure=parseFloat(u[1])),(u=l.match(s))&&(o.valid|=2,o.format=u[1]),(u=l.match(a))&&(o.valid|=4,o.height=parseInt(u[1],10),o.width=parseInt(u[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=l+"\n";return 2&o.valid||t(3,"missing format specifier"),4&o.valid||t(3,"missing image size specifier"),o}(s),o=a.width,l=a.height,u=function(e,i,n){const r=i;if(r<8||r>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);r!==(e[2]<<8|e[3])&&t(3,"wrong scanline width");const s=new Uint8Array(4*i*n);s.length||t(4,"unable to allocate buffer space");let a=0,o=0;const l=4*r,u=new Uint8Array(4),c=new Uint8Array(l);let h=n;for(;h>0&&o<e.byteLength;){o+4>e.byteLength&&t(1),u[0]=e[o++],u[1]=e[o++],u[2]=e[o++],u[3]=e[o++],2==u[0]&&2==u[1]&&(u[2]<<8|u[3])==r||t(3,"bad rgbe scanline format");let i,n=0;for(;n<l&&o<e.byteLength;){i=e[o++];const r=i>128;if(r&&(i-=128),(0===i||n+i>l)&&t(3,"bad scanline data"),r){const t=e[o++];for(let e=0;e<i;e++)c[n++]=t}else c.set(e.subarray(o,o+i),n),n+=i,o+=i}const d=r;for(let e=0;e<d;e++){let t=0;s[a]=c[e+t],t+=r,s[a+1]=c[e+t],t+=r,s[a+2]=c[e+t],t+=r,s[a+3]=c[e+t],a+=4}h--}return s}(s.subarray(s.pos),o,l);let c,h,d;switch(this.type){case ue:d=u.length/4;const e=new Float32Array(4*d);for(let i=0;i<d;i++)n(u,4*i,e,4*i);c=e,h=ue;break;case ce:d=u.length/4;const t=new Uint16Array(4*d);for(let i=0;i<d;i++)r(u,4*i,t,4*i);c=t,h=ce;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:o,height:l,data:c,header:a.string,gamma:a.gamma,exposure:a.exposure,type:h}}setDataType(e){return this.type=e,this}load(e,t,i,n){return super.load(e,(function(e,i){switch(e.type){case ue:case ce:e.colorSpace=pt,e.minFilter=ee,e.magFilter=ee,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,i)}),i,n)}}const hp=/^[og]\s*(.+)?/,dp=/^mtllib /,pp=/^usemtl /,mp=/^usemap /,fp=/\s+/,gp=new fi,_p=new fi,vp=new fi,xp=new fi,yp=new fi,bp=new Bn;function Tp(){const e={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=!1!==t);const i=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:!1!==t,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(e,t){const i=this._finalize(!1);i&&(i.inherited||i.groupCount<=0)&&this.materials.splice(i.index,1);const n={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==i?i.smooth:this.smooth,groupStart:void 0!==i?i.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){const t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(n),n},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let i=this.materials.length-1;i>=0;i--)this.materials[i].groupCount<=0&&this.materials.splice(i,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},i&&i.name&&"function"==typeof i.clone){const e=i.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const i=parseInt(e,10);return 3*(i>=0?i-1:i+t/3)},parseNormalIndex:function(e,t){const i=parseInt(e,10);return 3*(i>=0?i-1:i+t/3)},parseUVIndex:function(e,t){const i=parseInt(e,10);return 2*(i>=0?i-1:i+t/2)},addVertex:function(e,t,i){const n=this.vertices,r=this.object.geometry.vertices;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,i){const n=this.normals,r=this.object.geometry.normals;r.push(n[e+0],n[e+1],n[e+2]),r.push(n[t+0],n[t+1],n[t+2]),r.push(n[i+0],n[i+1],n[i+2])},addFaceNormal:function(e,t,i){const n=this.vertices,r=this.object.geometry.normals;gp.fromArray(n,e),_p.fromArray(n,t),vp.fromArray(n,i),yp.subVectors(vp,_p),xp.subVectors(gp,_p),yp.cross(xp),yp.normalize(),r.push(yp.x,yp.y,yp.z),r.push(yp.x,yp.y,yp.z),r.push(yp.x,yp.y,yp.z)},addColor:function(e,t,i){const n=this.colors,r=this.object.geometry.colors;void 0!==n[e]&&r.push(n[e+0],n[e+1],n[e+2]),void 0!==n[t]&&r.push(n[t+0],n[t+1],n[t+2]),void 0!==n[i]&&r.push(n[i+0],n[i+1],n[i+2])},addUV:function(e,t,i){const n=this.uvs,r=this.object.geometry.uvs;r.push(n[e+0],n[e+1]),r.push(n[t+0],n[t+1]),r.push(n[i+0],n[i+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,i,n,r,s,a,o,l){const u=this.vertices.length;let c=this.parseVertexIndex(e,u),h=this.parseVertexIndex(t,u),d=this.parseVertexIndex(i,u);if(this.addVertex(c,h,d),this.addColor(c,h,d),void 0!==a&&""!==a){const e=this.normals.length;c=this.parseNormalIndex(a,e),h=this.parseNormalIndex(o,e),d=this.parseNormalIndex(l,e),this.addNormal(c,h,d)}else this.addFaceNormal(c,h,d);if(void 0!==n&&""!==n){const e=this.uvs.length;c=this.parseUVIndex(n,e),h=this.parseUVIndex(r,e),d=this.parseUVIndex(s,e),this.addUV(c,h,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let i=0,n=e.length;i<n;i++){const n=this.parseVertexIndex(e[i],t);this.addVertexPoint(n),this.addColor(n)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const i=this.vertices.length,n=this.uvs.length;for(let r=0,s=e.length;r<s;r++)this.addVertexLine(this.parseVertexIndex(e[r],i));for(let r=0,s=t.length;r<s;r++)this.addUVLine(this.parseUVIndex(t[r],n))}};return e.startObject("",!1),e}class Sp extends cl{constructor(e){super(e),this.materials=null}load(e,t,i,n){const r=this,s=new pl(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(i){try{t(r.parse(i))}catch(s){n&&n(s),r.manager.itemError(e)}}),i,n)}setMaterials(e){return this.materials=e,this}parse(e){const t=new Tp;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const i=e.split("\n");let n=[];for(let s=0,a=i.length;s<a;s++){const e=i[s].trimStart();if(0===e.length)continue;const r=e.charAt(0);if("#"!==r)if("v"===r){const i=e.split(fp);switch(i[0]){case"v":t.vertices.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3])),i.length>=7?(bp.setRGB(parseFloat(i[4]),parseFloat(i[5]),parseFloat(i[6]),dt),t.colors.push(bp.r,bp.g,bp.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));break;case"vt":t.uvs.push(parseFloat(i[1]),parseFloat(i[2]))}}else if("f"===r){const i=e.slice(1).trim().split(fp),n=[];for(let e=0,t=i.length;e<t;e++){const t=i[e];if(t.length>0){const e=t.split("/");n.push(e)}}const r=n[0];for(let e=1,s=n.length-1;e<s;e++){const i=n[e],s=n[e+1];t.addFace(r[0],i[0],s[0],r[1],i[1],s[1],r[2],i[2],s[2])}}else if("l"===r){const i=e.substring(1).trim().split(" ");let n=[];const r=[];if(-1===e.indexOf("/"))n=i;else for(let e=0,t=i.length;e<t;e++){const t=i[e].split("/");""!==t[0]&&n.push(t[0]),""!==t[1]&&r.push(t[1])}t.addLineGeometry(n,r)}else if("p"===r){const i=e.slice(1).trim().split(" ");t.addPointGeometry(i)}else if(null!==(n=hp.exec(e))){const e=(" "+n[0].slice(1).trim()).slice(1);t.startObject(e)}else if(pp.test(e))t.object.startMaterial(e.substring(7).trim(),t.materialLibraries);else if(dp.test(e))t.materialLibraries.push(e.substring(7).trim());else if(mp.test(e));else if("s"===r){if(n=e.split(" "),n.length>1){const e=n[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const i=t.object.currentMaterial();i&&(i.smooth=t.object.smooth)}else if("\0"===e)continue}t.finalize();const r=new Br;r.materialLibraries=[].concat(t.materialLibraries);if(!0===!(1===t.objects.length&&0===t.objects[0].geometry.vertices.length))for(let s=0,a=t.objects.length;s<a;s++){const e=t.objects[s],i=e.geometry,n=e.materials,a="Line"===i.type,o="Points"===i.type;let l=!1;if(0===i.vertices.length)continue;const u=new ur;u.setAttribute("position",new tr(i.vertices,3)),i.normals.length>0&&u.setAttribute("normal",new tr(i.normals,3)),i.colors.length>0&&(l=!0,u.setAttribute("color",new tr(i.colors,3))),!0===i.hasUVIndices&&u.setAttribute("uv",new tr(i.uvs,2));const c=[];for(let r=0,s=n.length;r<s;r++){const e=n[r],i=e.name+"_"+e.smooth+"_"+l;let s=t.materials[i];if(null!==this.materials)if(s=this.materials.create(e.name),!a||!s||s instanceof Gs){if(o&&s&&!(s instanceof ia)){const e=new ia({size:10,sizeAttenuation:!1});kn.prototype.copy.call(e,s),e.color.copy(s.color),e.map=s.map,s=e}}else{const e=new Gs;kn.prototype.copy.call(e,s),e.color.copy(s.color),s=e}void 0===s&&(s=a?new Gs:o?new ia({size:1,sizeAttenuation:!1}):new Uo,s.name=e.name,s.flatShading=!e.smooth,s.vertexColors=l,t.materials[i]=s),c.push(s)}let h;if(c.length>1){for(let e=0,t=n.length;e<t;e++){const t=n[e];u.addGroup(t.groupStart,t.groupCount,e)}h=a?new ea(u,c):o?new oa(u,c):new br(u,c)}else h=a?new ea(u,c[0]):o?new oa(u,c[0]):new br(u,c[0]);h.name=e.name,r.add(h)}else if(t.vertices.length>0){const e=new ia({size:1,sizeAttenuation:!1}),i=new ur;i.setAttribute("position",new tr(t.vertices,3)),t.colors.length>0&&void 0!==t.colors[0]&&(i.setAttribute("color",new tr(t.colors,3)),e.vertexColors=!0);const n=new oa(i,e);r.add(n)}return r}}function Mp(e,t=!1){const i=null!==e[0].index,n=new Set(Object.keys(e[0].attributes)),r=new Set(Object.keys(e[0].morphAttributes)),s={},a={},o=e[0].morphTargetsRelative,l=new ur;let u=0;for(let c=0;c<e.length;++c){const h=e[c];let d=0;if(i!==(null!==h.index))return null;for(const e in h.attributes){if(!n.has(e))return null;void 0===s[e]&&(s[e]=[]),s[e].push(h.attributes[e]),d++}if(d!==n.size)return null;if(o!==h.morphTargetsRelative)return null;for(const e in h.morphAttributes){if(!r.has(e))return null;void 0===a[e]&&(a[e]=[]),a[e].push(h.morphAttributes[e])}if(t){let e;if(i)e=h.index.count;else{if(void 0===h.attributes.position)return null;e=h.attributes.position.count}l.addGroup(u,e,c),u+=e}}if(i){let t=0;const i=[];for(let n=0;n<e.length;++n){const r=e[n].index;for(let e=0;e<r.count;++e)i.push(r.getX(e)+t);t+=e[n].attributes.position.count}l.setIndex(i)}for(const c in s){const e=wp(s[c]);if(!e)return null;l.setAttribute(c,e)}for(const c in a){const e=a[c][0].length;if(0===e)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[c]=[];for(let t=0;t<e;++t){const e=[];for(let n=0;n<a[c].length;++n)e.push(a[c][n][t]);const i=wp(e);if(!i)return null;l.morphAttributes[c].push(i)}}return l}function wp(e){let t,i,n,r=-1,s=0;for(let u=0;u<e.length;++u){const a=e[u];if(void 0===t&&(t=a.array.constructor),t!==a.array.constructor)return null;if(void 0===i&&(i=a.itemSize),i!==a.itemSize)return null;if(void 0===n&&(n=a.normalized),n!==a.normalized)return null;if(-1===r&&(r=a.gpuType),r!==a.gpuType)return null;s+=a.count*i}const a=new t(s),o=new Zn(a,i,n);let l=0;for(let u=0;u<e.length;++u){const t=e[u];if(t.isInterleavedBufferAttribute){const e=l/i;for(let n=0,r=t.count;n<r;n++)for(let s=0;s<i;s++){const i=t.getComponent(n,s);o.setComponent(n+e,s,i)}}else a.set(t.array,l);l+=t.count*i}return void 0!==r&&(o.gpuType=r),o}function Ep(e,t){if(0===t)return e;if(2===t||1===t){let i=e.getIndex();if(null===i){const t=[],n=e.getAttribute("position");if(void 0===n)return e;for(let e=0;e<n.count;e++)t.push(e);e.setIndex(t),i=e.getIndex()}const n=i.count-2,r=[];if(2===t)for(let e=1;e<=n;e++)r.push(i.getX(0)),r.push(i.getX(e)),r.push(i.getX(e+1));else for(let e=0;e<n;e++)e%2==0?(r.push(i.getX(e)),r.push(i.getX(e+1)),r.push(i.getX(e+2))):(r.push(i.getX(e+2)),r.push(i.getX(e+1)),r.push(i.getX(e)));r.length;const s=e.clone();return s.setIndex(r),s.clearGroups(),s}return e}class Ap extends cl{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register((function(e){return new Ip(e)})),this.register((function(e){return new Dp(e)})),this.register((function(e){return new Hp(e)})),this.register((function(e){return new Wp(e)})),this.register((function(e){return new jp(e)})),this.register((function(e){return new Fp(e)})),this.register((function(e){return new Op(e)})),this.register((function(e){return new Bp(e)})),this.register((function(e){return new Vp(e)})),this.register((function(e){return new Lp(e)})),this.register((function(e){return new zp(e)})),this.register((function(e){return new Up(e)})),this.register((function(e){return new Gp(e)})),this.register((function(e){return new kp(e)})),this.register((function(e){return new Np(e)})),this.register((function(e){return new Xp(e)})),this.register((function(e){return new $p(e)}))}load(e,t,i,n){const r=this;let s;if(""!==this.resourcePath)s=this.resourcePath;else if(""!==this.path){const t=Ol.extractUrlBase(e);s=Ol.resolveURL(t,this.path)}else s=Ol.extractUrlBase(e);this.manager.itemStart(e);const a=function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)},o=new pl(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(i){try{r.parse(i,s,(function(i){t(i),r.manager.itemEnd(e)}),a)}catch(n){a(n)}}),i,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return-1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return-1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i,n){let r;const s={},a={},o=new TextDecoder;if("string"==typeof e)r=JSON.parse(e);else if(e instanceof ArrayBuffer){if(o.decode(new Uint8Array(e,0,4))===qp){try{s[Cp.KHR_BINARY_GLTF]=new Zp(e)}catch(u){return void(n&&n(u))}r=JSON.parse(s[Cp.KHR_BINARY_GLTF].content)}else r=JSON.parse(o.decode(e))}else r=e;if(void 0===r.asset||r.asset.version[0]<2)return void(n&&n(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.")));const l=new Tm(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let c=0;c<this.pluginCallbacks.length;c++){const e=this.pluginCallbacks[c](l);e.name,a[e.name]=e,s[e.name]=!0}if(r.extensionsUsed)for(let c=0;c<r.extensionsUsed.length;++c){const e=r.extensionsUsed[c],t=r.extensionsRequired||[];switch(e){case Cp.KHR_MATERIALS_UNLIT:s[e]=new Pp;break;case Cp.KHR_DRACO_MESH_COMPRESSION:s[e]=new Qp(r,this.dracoLoader);break;case Cp.KHR_TEXTURE_TRANSFORM:s[e]=new Jp;break;case Cp.KHR_MESH_QUANTIZATION:s[e]=new em;break;default:t.indexOf(e)>=0&&a[e]}}l.setExtensions(s),l.setPlugins(a),l.parse(i,n)}parseAsync(e,t){const i=this;return new Promise((function(n,r){i.parse(e,t,n,r)}))}}function Rp(){let e={};return{get:function(t){return e[t]},add:function(t,i){e[t]=i},remove:function(t){delete e[t]},removeAll:function(){e={}}}}const Cp={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class Np{constructor(e){this.parser=e,this.name=Cp.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let i=0,n=t.length;i<n;i++){const n=t[i];n.extensions&&n.extensions[this.name]&&void 0!==n.extensions[this.name].light&&e._addNodeRef(this.cache,n.extensions[this.name].light)}}_loadLight(e){const t=this.parser,i="light:"+e;let n=t.cache.get(i);if(n)return n;const r=t.json,s=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let a;const o=new Bn(16777215);void 0!==s.color&&o.setRGB(s.color[0],s.color[1],s.color[2],pt);const l=void 0!==s.range?s.range:0;switch(s.type){case"directional":a=new Ll(o),a.target.position.set(0,0,-1),a.add(a.target);break;case"point":a=new Cl(o),a.distance=l;break;case"spot":a=new Ml(o),a.distance=l,s.spot=s.spot||{},s.spot.innerConeAngle=void 0!==s.spot.innerConeAngle?s.spot.innerConeAngle:0,s.spot.outerConeAngle=void 0!==s.spot.outerConeAngle?s.spot.outerConeAngle:Math.PI/4,a.angle=s.spot.outerConeAngle,a.penumbra=1-s.spot.innerConeAngle/s.spot.outerConeAngle,a.target.position.set(0,0,-1),a.add(a.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+s.type)}return a.position.set(0,0,0),gm(a,s),void 0!==s.intensity&&(a.intensity=s.intensity),a.name=t.createUniqueName(s.name||"light_"+e),n=Promise.resolve(a),t.cache.add(i,n),n}getDependency(e,t){if("light"===e)return this._loadLight(t)}createNodeAttachment(e){const t=this,i=this.parser,n=i.json.nodes[e],r=(n.extensions&&n.extensions[this.name]||{}).light;return void 0===r?null:this._loadLight(r).then((function(e){return i._getNodeRef(t.cache,r,e)}))}}class Pp{constructor(){this.name=Cp.KHR_MATERIALS_UNLIT}getMaterialType(){return Gn}extendParams(e,t,i){const n=[];e.color=new Bn(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const t=r.baseColorFactor;e.color.setRGB(t[0],t[1],t[2],pt),e.opacity=t[3]}void 0!==r.baseColorTexture&&n.push(i.assignTexture(e,"map",r.baseColorTexture,dt))}return Promise.all(n)}}class Lp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const n=i.extensions[this.name].emissiveStrength;return void 0!==n&&(t.emissiveIntensity=n),Promise.resolve()}}class Ip{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];if(void 0!==s.clearcoatFactor&&(t.clearcoat=s.clearcoatFactor),void 0!==s.clearcoatTexture&&r.push(i.assignTexture(t,"clearcoatMap",s.clearcoatTexture)),void 0!==s.clearcoatRoughnessFactor&&(t.clearcoatRoughness=s.clearcoatRoughnessFactor),void 0!==s.clearcoatRoughnessTexture&&r.push(i.assignTexture(t,"clearcoatRoughnessMap",s.clearcoatRoughnessTexture)),void 0!==s.clearcoatNormalTexture&&(r.push(i.assignTexture(t,"clearcoatNormalMap",s.clearcoatNormalTexture)),void 0!==s.clearcoatNormalTexture.scale)){const e=s.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new Gt(e,e)}return Promise.all(r)}}class Dp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_DISPERSION}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const n=i.extensions[this.name];return t.dispersion=void 0!==n.dispersion?n.dispersion:0,Promise.resolve()}}class Up{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return void 0!==s.iridescenceFactor&&(t.iridescence=s.iridescenceFactor),void 0!==s.iridescenceTexture&&r.push(i.assignTexture(t,"iridescenceMap",s.iridescenceTexture)),void 0!==s.iridescenceIor&&(t.iridescenceIOR=s.iridescenceIor),void 0===t.iridescenceThicknessRange&&(t.iridescenceThicknessRange=[100,400]),void 0!==s.iridescenceThicknessMinimum&&(t.iridescenceThicknessRange[0]=s.iridescenceThicknessMinimum),void 0!==s.iridescenceThicknessMaximum&&(t.iridescenceThicknessRange[1]=s.iridescenceThicknessMaximum),void 0!==s.iridescenceThicknessTexture&&r.push(i.assignTexture(t,"iridescenceThicknessMap",s.iridescenceThicknessTexture)),Promise.all(r)}}class Fp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_SHEEN}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new Bn(0,0,0),t.sheenRoughness=0,t.sheen=1;const s=n.extensions[this.name];if(void 0!==s.sheenColorFactor){const e=s.sheenColorFactor;t.sheenColor.setRGB(e[0],e[1],e[2],pt)}return void 0!==s.sheenRoughnessFactor&&(t.sheenRoughness=s.sheenRoughnessFactor),void 0!==s.sheenColorTexture&&r.push(i.assignTexture(t,"sheenColorMap",s.sheenColorTexture,dt)),void 0!==s.sheenRoughnessTexture&&r.push(i.assignTexture(t,"sheenRoughnessMap",s.sheenRoughnessTexture)),Promise.all(r)}}class Op{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return void 0!==s.transmissionFactor&&(t.transmission=s.transmissionFactor),void 0!==s.transmissionTexture&&r.push(i.assignTexture(t,"transmissionMap",s.transmissionTexture)),Promise.all(r)}}class Bp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_VOLUME}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];t.thickness=void 0!==s.thicknessFactor?s.thicknessFactor:0,void 0!==s.thicknessTexture&&r.push(i.assignTexture(t,"thicknessMap",s.thicknessTexture)),t.attenuationDistance=s.attenuationDistance||1/0;const a=s.attenuationColor||[1,1,1];return t.attenuationColor=(new Bn).setRGB(a[0],a[1],a[2],pt),Promise.all(r)}}class Vp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_IOR}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const n=i.extensions[this.name];return t.ior=void 0!==n.ior?n.ior:1.5,Promise.resolve()}}class zp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_SPECULAR}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];t.specularIntensity=void 0!==s.specularFactor?s.specularFactor:1,void 0!==s.specularTexture&&r.push(i.assignTexture(t,"specularIntensityMap",s.specularTexture));const a=s.specularColorFactor||[1,1,1];return t.specularColor=(new Bn).setRGB(a[0],a[1],a[2],pt),void 0!==s.specularColorTexture&&r.push(i.assignTexture(t,"specularColorMap",s.specularColorTexture,dt)),Promise.all(r)}}class kp{constructor(e){this.parser=e,this.name=Cp.EXT_MATERIALS_BUMP}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return t.bumpScale=void 0!==s.bumpFactor?s.bumpFactor:1,void 0!==s.bumpTexture&&r.push(i.assignTexture(t,"bumpMap",s.bumpTexture)),Promise.all(r)}}class Gp{constructor(e){this.parser=e,this.name=Cp.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?Do:null}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return void 0!==s.anisotropyStrength&&(t.anisotropy=s.anisotropyStrength),void 0!==s.anisotropyRotation&&(t.anisotropyRotation=s.anisotropyRotation),void 0!==s.anisotropyTexture&&r.push(i.assignTexture(t,"anisotropyMap",s.anisotropyTexture)),Promise.all(r)}}class Hp{constructor(e){this.parser=e,this.name=Cp.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,i=t.json,n=i.textures[e];if(!n.extensions||!n.extensions[this.name])return null;const r=n.extensions[this.name],s=t.options.ktx2Loader;if(!s){if(i.extensionsRequired&&i.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,s)}}class Wp{constructor(e){this.parser=e,this.name=Cp.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,i=this.parser,n=i.json,r=n.textures[e];if(!r.extensions||!r.extensions[t])return null;const s=r.extensions[t],a=n.images[s.source];let o=i.textureLoader;if(a.uri){const e=i.options.manager.getHandler(a.uri);null!==e&&(o=e)}return i.loadTextureImage(e,s.source,o)}}class jp{constructor(e){this.parser=e,this.name=Cp.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,i=this.parser,n=i.json,r=n.textures[e];if(!r.extensions||!r.extensions[t])return null;const s=r.extensions[t],a=n.images[s.source];let o=i.textureLoader;if(a.uri){const e=i.options.manager.getHandler(a.uri);null!==e&&(o=e)}return i.loadTextureImage(e,s.source,o)}}class Xp{constructor(e){this.name=Cp.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,i=t.bufferViews[e];if(i.extensions&&i.extensions[this.name]){const e=i.extensions[this.name],n=this.parser.getDependency("buffer",e.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return n.then((function(t){const i=e.byteOffset||0,n=e.byteLength||0,s=e.count,a=e.byteStride,o=new Uint8Array(t,i,n);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(s,a,o,e.mode,e.filter).then((function(e){return e.buffer})):r.ready.then((function(){const t=new ArrayBuffer(s*a);return r.decodeGltfBuffer(new Uint8Array(t),s,a,o,e.mode,e.filter),t}))}))}return null}}class $p{constructor(e){this.name=Cp.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,i=t.nodes[e];if(!i.extensions||!i.extensions[this.name]||void 0===i.mesh)return null;const n=t.meshes[i.mesh];for(const o of n.primitives)if(o.mode!==rm.TRIANGLES&&o.mode!==rm.TRIANGLE_STRIP&&o.mode!==rm.TRIANGLE_FAN&&void 0!==o.mode)return null;const r=i.extensions[this.name].attributes,s=[],a={};for(const o in r)s.push(this.parser.getDependency("accessor",r[o]).then((e=>(a[o]=e,a[o]))));return s.length<1?null:(s.push(this.parser.createNodeMesh(e)),Promise.all(s).then((e=>{const t=e.pop(),i=t.isGroup?t.children:[t],n=e[0].count,r=[];for(const s of i){const e=new ji,t=new fi,i=new mi,o=new fi(1,1,1),l=new Ps(s.geometry,s.material,n);for(let r=0;r<n;r++)a.TRANSLATION&&t.fromBufferAttribute(a.TRANSLATION,r),a.ROTATION&&i.fromBufferAttribute(a.ROTATION,r),a.SCALE&&o.fromBufferAttribute(a.SCALE,r),l.setMatrixAt(r,e.compose(t,i,o));for(const n in a)if("_COLOR_0"===n){const e=a[n];l.instanceColor=new Ss(e.array,e.itemSize,e.normalized)}else"TRANSLATION"!==n&&"ROTATION"!==n&&"SCALE"!==n&&s.geometry.setAttribute(n,a[n]);xn.prototype.copy.call(l,s),this.parser.assignFinalMaterial(l),r.push(l)}return t.isGroup?(t.clear(),t.add(...r),t):r[0]})))}}const qp="glTF",Yp=1313821514,Kp=5130562;class Zp{constructor(e){this.name=Cp.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,12),i=new TextDecoder;if(this.header={magic:i.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==qp)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const n=this.header.length-12,r=new DataView(e,12);let s=0;for(;s<n;){const t=r.getUint32(s,!0);s+=4;const n=r.getUint32(s,!0);if(s+=4,n===Yp){const n=new Uint8Array(e,12+s,t);this.content=i.decode(n)}else if(n===Kp){const i=12+s;this.body=e.slice(i,i+t)}s+=t}if(null===this.content)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class Qp{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=Cp.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const i=this.json,n=this.dracoLoader,r=e.extensions[this.name].bufferView,s=e.extensions[this.name].attributes,a={},o={},l={};for(const u in s){const e=um[u]||u.toLowerCase();a[e]=s[u]}for(const u in e.attributes){const t=um[u]||u.toLowerCase();if(void 0!==s[u]){const n=i.accessors[e.attributes[u]],r=sm[n.componentType];l[t]=r.name,o[t]=!0===n.normalized}}return t.getDependency("bufferView",r).then((function(e){return new Promise((function(t,i){n.decodeDracoFile(e,(function(e){for(const t in e.attributes){const i=e.attributes[t],n=o[t];void 0!==n&&(i.normalized=n)}t(e)}),a,l,pt,i)}))}))}}class Jp{constructor(){this.name=Cp.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return void 0!==t.texCoord&&t.texCoord!==e.channel||void 0!==t.offset||void 0!==t.rotation||void 0!==t.scale?(e=e.clone(),void 0!==t.texCoord&&(e.channel=t.texCoord),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.scale&&e.repeat.fromArray(t.scale),e.needsUpdate=!0,e):e}}class em{constructor(){this.name=Cp.KHR_MESH_QUANTIZATION}}class tm extends $o{constructor(e,t,i,n){super(e,t,i,n)}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n*3+n;for(let s=0;s!==n;s++)t[s]=i[r+s];return t}interpolate_(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=2*a,l=3*a,u=n-t,c=(i-t)/u,h=c*c,d=h*c,p=e*l,m=p-l,f=-2*d+3*h,g=d-h,_=1-f,v=g-h+c;for(let x=0;x!==a;x++){const e=s[m+x+a],t=s[m+x+o]*u,i=s[p+x+a],n=s[p+x]*u;r[x]=_*e+v*t+f*i+g*n}return r}}const im=new mi;class nm extends tm{interpolate_(e,t,i,n){const r=super.interpolate_(e,t,i,n);return im.fromArray(r).normalize().toArray(r),r}}const rm={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},sm={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},am={9728:Z,9729:ee,9984:Q,9985:te,9986:J,9987:ie},om={33071:Y,33648:K,10497:q},lm={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},um={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},cm={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},hm={CUBICSPLINE:void 0,LINEAR:st,STEP:rt},dm="OPAQUE",pm="MASK",mm="BLEND";function fm(e,t,i){for(const n in i.extensions)void 0===e[n]&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[n]=i.extensions[n])}function gm(e,t){void 0!==t.extras&&"object"==typeof t.extras&&Object.assign(e.userData,t.extras)}function _m(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(let i=0,n=t.weights.length;i<n;i++)e.morphTargetInfluences[i]=t.weights[i];if(t.extras&&Array.isArray(t.extras.targetNames)){const i=t.extras.targetNames;if(e.morphTargetInfluences.length===i.length){e.morphTargetDictionary={};for(let t=0,n=i.length;t<n;t++)e.morphTargetDictionary[i[t]]=t}}}function vm(e){let t;const i=e.extensions&&e.extensions[Cp.KHR_DRACO_MESH_COMPRESSION];if(t=i?"draco:"+i.bufferView+":"+i.indices+":"+xm(i.attributes):e.indices+":"+xm(e.attributes)+":"+e.mode,void 0!==e.targets)for(let n=0,r=e.targets.length;n<r;n++)t+=":"+xm(e.targets[n]);return t}function xm(e){let t="";const i=Object.keys(e).sort();for(let n=0,r=i.length;n<r;n++)t+=i[n]+":"+e[i[n]]+";";return t}function ym(e){switch(e){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}const bm=new ji;class Tm{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new Rp,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let i=!1,n=-1,r=!1,s=-1;if("undefined"!=typeof navigator){const e=navigator.userAgent;i=!0===/^((?!chrome|android).)*safari/i.test(e);const t=e.match(/Version\/(\d+)/);n=i&&t?parseInt(t[1],10):-1,r=e.indexOf("Firefox")>-1,s=r?e.match(/Firefox\/([0-9]+)\./)[1]:-1}"undefined"==typeof createImageBitmap||i&&n<17||r&&s<98?this.textureLoader=new gl(this.options.manager):this.textureLoader=new Bl(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new pl(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const i=this,n=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll((function(e){return e._markDefs&&e._markDefs()})),Promise.all(this._invokeAll((function(e){return e.beforeRoot&&e.beforeRoot()}))).then((function(){return Promise.all([i.getDependencies("scene"),i.getDependencies("animation"),i.getDependencies("camera")])})).then((function(t){const s={scene:t[0][n.scene||0],scenes:t[0],animations:t[1],cameras:t[2],asset:n.asset,parser:i,userData:{}};return fm(r,s,n),gm(s,n),Promise.all(i._invokeAll((function(e){return e.afterRoot&&e.afterRoot(s)}))).then((function(){for(const e of s.scenes)e.updateMatrixWorld();e(s)}))})).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],i=this.json.meshes||[];for(let n=0,r=t.length;n<r;n++){const i=t[n].joints;for(let t=0,n=i.length;t<n;t++)e[i[t]].isBone=!0}for(let n=0,r=e.length;n<r;n++){const t=e[n];void 0!==t.mesh&&(this._addNodeRef(this.meshCache,t.mesh),void 0!==t.skin&&(i[t.mesh].isSkinnedMesh=!0)),void 0!==t.camera&&this._addNodeRef(this.cameraCache,t.camera)}}_addNodeRef(e,t){void 0!==t&&(void 0===e.refs[t]&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,i){if(e.refs[t]<=1)return i;const n=i.clone(),r=(e,t)=>{const i=this.associations.get(e);null!=i&&this.associations.set(t,i);for(const[n,s]of e.children.entries())r(s,t.children[n])};return r(i,n),n.name+="_instance_"+e.uses[t]++,n}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let i=0;i<t.length;i++){const n=e(t[i]);if(n)return n}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const i=[];for(let n=0;n<t.length;n++){const r=e(t[n]);r&&i.push(r)}return i}getDependency(e,t){const i=e+":"+t;let n=this.cache.get(i);if(!n){switch(e){case"scene":n=this.loadScene(t);break;case"node":n=this._invokeOne((function(e){return e.loadNode&&e.loadNode(t)}));break;case"mesh":n=this._invokeOne((function(e){return e.loadMesh&&e.loadMesh(t)}));break;case"accessor":n=this.loadAccessor(t);break;case"bufferView":n=this._invokeOne((function(e){return e.loadBufferView&&e.loadBufferView(t)}));break;case"buffer":n=this.loadBuffer(t);break;case"material":n=this._invokeOne((function(e){return e.loadMaterial&&e.loadMaterial(t)}));break;case"texture":n=this._invokeOne((function(e){return e.loadTexture&&e.loadTexture(t)}));break;case"skin":n=this.loadSkin(t);break;case"animation":n=this._invokeOne((function(e){return e.loadAnimation&&e.loadAnimation(t)}));break;case"camera":n=this.loadCamera(t);break;default:if(n=this._invokeOne((function(i){return i!=this&&i.getDependency&&i.getDependency(e,t)})),!n)throw new Error("Unknown type: "+e)}this.cache.add(i,n)}return n}getDependencies(e){let t=this.cache.get(e);if(!t){const i=this,n=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(n.map((function(t,n){return i.getDependency(e,n)}))),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],i=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[Cp.KHR_BINARY_GLTF].body);const n=this.options;return new Promise((function(e,r){i.load(Ol.resolveURL(t.uri,n.path),e,void 0,(function(){r(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))}))}))}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then((function(e){const i=t.byteLength||0,n=t.byteOffset||0;return e.slice(n,n+i)}))}loadAccessor(e){const t=this,i=this.json,n=this.json.accessors[e];if(void 0===n.bufferView&&void 0===n.sparse){const e=lm[n.type],t=sm[n.componentType],i=!0===n.normalized,r=new t(n.count*e);return Promise.resolve(new Zn(r,e,i))}const r=[];return void 0!==n.bufferView?r.push(this.getDependency("bufferView",n.bufferView)):r.push(null),void 0!==n.sparse&&(r.push(this.getDependency("bufferView",n.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",n.sparse.values.bufferView))),Promise.all(r).then((function(e){const r=e[0],s=lm[n.type],a=sm[n.componentType],o=a.BYTES_PER_ELEMENT,l=o*s,u=n.byteOffset||0,c=void 0!==n.bufferView?i.bufferViews[n.bufferView].byteStride:void 0,h=!0===n.normalized;let d,p;if(c&&c!==l){const e=Math.floor(u/c),i="InterleavedBuffer:"+n.bufferView+":"+n.componentType+":"+e+":"+n.count;let l=t.cache.get(i);l||(d=new a(r,e*c,n.count*c/o),l=new Hr(d,c/o),t.cache.add(i,l)),p=new jr(l,s,u%c/o,h)}else d=null===r?new a(n.count*s):new a(r,u,n.count*s),p=new Zn(d,s,h);if(void 0!==n.sparse){const t=lm.SCALAR,i=sm[n.sparse.indices.componentType],o=n.sparse.indices.byteOffset||0,l=n.sparse.values.byteOffset||0,u=new i(e[1],o,n.sparse.count*t),c=new a(e[2],l,n.sparse.count*s);null!==r&&(p=new Zn(p.array.slice(),p.itemSize,p.normalized)),p.normalized=!1;for(let e=0,n=u.length;e<n;e++){const t=u[e];if(p.setX(t,c[e*s]),s>=2&&p.setY(t,c[e*s+1]),s>=3&&p.setZ(t,c[e*s+2]),s>=4&&p.setW(t,c[e*s+3]),s>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}p.normalized=h}return p}))}loadTexture(e){const t=this.json,i=this.options,n=t.textures[e].source,r=t.images[n];let s=this.textureLoader;if(r.uri){const e=i.manager.getHandler(r.uri);null!==e&&(s=e)}return this.loadTextureImage(e,n,s)}loadTextureImage(e,t,i){const n=this,r=this.json,s=r.textures[e],a=r.images[t],o=(a.uri||a.bufferView)+":"+s.sampler;if(this.textureCache[o])return this.textureCache[o];const l=this.loadImageSource(t,i).then((function(t){t.flipY=!1,t.name=s.name||a.name||"",""===t.name&&"string"==typeof a.uri&&!1===a.uri.startsWith("data:image/")&&(t.name=a.uri);const i=(r.samplers||{})[s.sampler]||{};return t.magFilter=am[i.magFilter]||ee,t.minFilter=am[i.minFilter]||ie,t.wrapS=om[i.wrapS]||q,t.wrapT=om[i.wrapT]||q,t.generateMipmaps=!t.isCompressedTexture&&t.minFilter!==Z&&t.minFilter!==ee,n.associations.set(t,{textures:e}),t})).catch((function(){return null}));return this.textureCache[o]=l,l}loadImageSource(e,t){const i=this,n=this.json,r=this.options;if(void 0!==this.sourceCache[e])return this.sourceCache[e].then((e=>e.clone()));const s=n.images[e],a=self.URL||self.webkitURL;let o=s.uri||"",l=!1;if(void 0!==s.bufferView)o=i.getDependency("bufferView",s.bufferView).then((function(e){l=!0;const t=new Blob([e],{type:s.mimeType});return o=a.createObjectURL(t),o}));else if(void 0===s.uri)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const u=Promise.resolve(o).then((function(e){return new Promise((function(i,n){let s=i;!0===t.isImageBitmapLoader&&(s=function(e){const t=new li(e);t.needsUpdate=!0,i(t)}),t.load(Ol.resolveURL(e,r.path),s,void 0,n)}))})).then((function(e){var t;return!0===l&&a.revokeObjectURL(o),gm(e,s),e.userData.mimeType=s.mimeType||((t=s.uri).search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/)?"image/jpeg":t.search(/\.webp($|\?)/i)>0||0===t.search(/^data\:image\/webp/)?"image/webp":t.search(/\.ktx2($|\?)/i)>0||0===t.search(/^data\:image\/ktx2/)?"image/ktx2":"image/png"),e})).catch((function(e){throw e}));return this.sourceCache[e]=u,u}assignTexture(e,t,i,n){const r=this;return this.getDependency("texture",i.index).then((function(s){if(!s)return null;if(void 0!==i.texCoord&&i.texCoord>0&&((s=s.clone()).channel=i.texCoord),r.extensions[Cp.KHR_TEXTURE_TRANSFORM]){const e=void 0!==i.extensions?i.extensions[Cp.KHR_TEXTURE_TRANSFORM]:void 0;if(e){const t=r.associations.get(s);s=r.extensions[Cp.KHR_TEXTURE_TRANSFORM].extendTexture(s,e),r.associations.set(s,t)}}return void 0!==n&&(s.colorSpace=n),e[t]=s,s}))}assignFinalMaterial(e){const t=e.geometry;let i=e.material;const n=void 0===t.attributes.tangent,r=void 0!==t.attributes.color,s=void 0===t.attributes.normal;if(e.isPoints){const e="PointsMaterial:"+i.uuid;let t=this.cache.get(e);t||(t=new ia,kn.prototype.copy.call(t,i),t.color.copy(i.color),t.map=i.map,t.sizeAttenuation=!1,this.cache.add(e,t)),i=t}else if(e.isLine){const e="LineBasicMaterial:"+i.uuid;let t=this.cache.get(e);t||(t=new Gs,kn.prototype.copy.call(t,i),t.color.copy(i.color),t.map=i.map,this.cache.add(e,t)),i=t}if(n||r||s){let e="ClonedMaterial:"+i.uuid+":";n&&(e+="derivative-tangents:"),r&&(e+="vertex-colors:"),s&&(e+="flat-shading:");let t=this.cache.get(e);t||(t=i.clone(),r&&(t.vertexColors=!0),s&&(t.flatShading=!0),n&&(t.normalScale&&(t.normalScale.y*=-1),t.clearcoatNormalScale&&(t.clearcoatNormalScale.y*=-1)),this.cache.add(e,t),this.associations.set(t,this.associations.get(i))),i=t}e.material=i}getMaterialType(){return Io}loadMaterial(e){const t=this,i=this.json,n=this.extensions,r=i.materials[e];let s;const a={},o=[];if((r.extensions||{})[Cp.KHR_MATERIALS_UNLIT]){const e=n[Cp.KHR_MATERIALS_UNLIT];s=e.getMaterialType(),o.push(e.extendParams(a,r,t))}else{const i=r.pbrMetallicRoughness||{};if(a.color=new Bn(1,1,1),a.opacity=1,Array.isArray(i.baseColorFactor)){const e=i.baseColorFactor;a.color.setRGB(e[0],e[1],e[2],pt),a.opacity=e[3]}void 0!==i.baseColorTexture&&o.push(t.assignTexture(a,"map",i.baseColorTexture,dt)),a.metalness=void 0!==i.metallicFactor?i.metallicFactor:1,a.roughness=void 0!==i.roughnessFactor?i.roughnessFactor:1,void 0!==i.metallicRoughnessTexture&&(o.push(t.assignTexture(a,"metalnessMap",i.metallicRoughnessTexture)),o.push(t.assignTexture(a,"roughnessMap",i.metallicRoughnessTexture))),s=this._invokeOne((function(t){return t.getMaterialType&&t.getMaterialType(e)})),o.push(Promise.all(this._invokeAll((function(t){return t.extendMaterialParams&&t.extendMaterialParams(e,a)}))))}!0===r.doubleSided&&(a.side=2);const l=r.alphaMode||dm;if(l===mm?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,l===pm&&(a.alphaTest=void 0!==r.alphaCutoff?r.alphaCutoff:.5)),void 0!==r.normalTexture&&s!==Gn&&(o.push(t.assignTexture(a,"normalMap",r.normalTexture)),a.normalScale=new Gt(1,1),void 0!==r.normalTexture.scale)){const e=r.normalTexture.scale;a.normalScale.set(e,e)}if(void 0!==r.occlusionTexture&&s!==Gn&&(o.push(t.assignTexture(a,"aoMap",r.occlusionTexture)),void 0!==r.occlusionTexture.strength&&(a.aoMapIntensity=r.occlusionTexture.strength)),void 0!==r.emissiveFactor&&s!==Gn){const e=r.emissiveFactor;a.emissive=(new Bn).setRGB(e[0],e[1],e[2],pt)}return void 0!==r.emissiveTexture&&s!==Gn&&o.push(t.assignTexture(a,"emissiveMap",r.emissiveTexture,dt)),Promise.all(o).then((function(){const i=new s(a);return r.name&&(i.name=r.name),gm(i,r),t.associations.set(i,{materials:e}),r.extensions&&fm(n,i,r),i}))}createUniqueName(e){const t=su.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,i=this.extensions,n=this.primitiveCache;function r(e){return i[Cp.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e,t).then((function(i){return Sm(i,e,t)}))}const s=[];for(let a=0,o=e.length;a<o;a++){const i=e[a],o=vm(i),l=n[o];if(l)s.push(l.promise);else{let e;e=i.extensions&&i.extensions[Cp.KHR_DRACO_MESH_COMPRESSION]?r(i):Sm(new ur,i,t),n[o]={primitive:i,promise:e},s.push(e)}}return Promise.all(s)}loadMesh(e){const t=this,i=this.json,n=this.extensions,r=i.meshes[e],s=r.primitives,a=[];for(let l=0,u=s.length;l<u;l++){const e=void 0===s[l].material?(void 0===(o=this.cache).DefaultMaterial&&(o.DefaultMaterial=new Io({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:0})),o.DefaultMaterial):this.getDependency("material",s[l].material);a.push(e)}var o;return a.push(t.loadGeometries(s)),Promise.all(a).then((function(i){const a=i.slice(0,i.length-1),o=i[i.length-1],l=[];for(let c=0,h=o.length;c<h;c++){const i=o[c],u=s[c];let h;const d=a[c];if(u.mode===rm.TRIANGLES||u.mode===rm.TRIANGLE_STRIP||u.mode===rm.TRIANGLE_FAN||void 0===u.mode)h=!0===r.isSkinnedMesh?new _s(i,d):new br(i,d),!0===h.isSkinnedMesh&&h.normalizeSkinWeights(),u.mode===rm.TRIANGLE_STRIP?h.geometry=Ep(h.geometry,1):u.mode===rm.TRIANGLE_FAN&&(h.geometry=Ep(h.geometry,2));else if(u.mode===rm.LINES)h=new ea(i,d);else if(u.mode===rm.LINE_STRIP)h=new Ks(i,d);else if(u.mode===rm.LINE_LOOP)h=new ta(i,d);else{if(u.mode!==rm.POINTS)throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+u.mode);h=new oa(i,d)}Object.keys(h.geometry.morphAttributes).length>0&&_m(h,r),h.name=t.createUniqueName(r.name||"mesh_"+e),gm(h,r),u.extensions&&fm(n,h,u),t.assignFinalMaterial(h),l.push(h)}for(let n=0,r=l.length;n<r;n++)t.associations.set(l[n],{meshes:e,primitives:n});if(1===l.length)return r.extensions&&fm(n,l[0],r),l[0];const u=new Br;r.extensions&&fm(n,u,r),t.associations.set(u,{meshes:e});for(let e=0,t=l.length;e<t;e++)u.add(l[e]);return u}))}loadCamera(e){let t;const i=this.json.cameras[e],n=i[i.type];if(n)return"perspective"===i.type?t=new Ir(kt.radToDeg(n.yfov),n.aspectRatio||1,n.znear||1,n.zfar||2e6):"orthographic"===i.type&&(t=new Nl(-n.xmag,n.xmag,n.ymag,-n.ymag,n.znear,n.zfar)),i.name&&(t.name=this.createUniqueName(i.name)),gm(t,i),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],i=[];for(let n=0,r=t.joints.length;n<r;n++)i.push(this._loadNodeShallow(t.joints[n]));return void 0!==t.inverseBindMatrices?i.push(this.getDependency("accessor",t.inverseBindMatrices)):i.push(null),Promise.all(i).then((function(e){const t=e.pop(),i=e,n=[],r=[];for(let s=0,a=i.length;s<a;s++){const e=i[s];if(e){n.push(e);const i=new ji;null!==t&&i.fromArray(t.array,16*s),r.push(i)}}return new Ts(n,r)}))}loadAnimation(e){const t=this.json,i=this,n=t.animations[e],r=n.name?n.name:"animation_"+e,s=[],a=[],o=[],l=[],u=[];for(let c=0,h=n.channels.length;c<h;c++){const e=n.channels[c],t=n.samplers[e.sampler],i=e.target,r=i.node,h=void 0!==n.parameters?n.parameters[t.input]:t.input,d=void 0!==n.parameters?n.parameters[t.output]:t.output;void 0!==i.node&&(s.push(this.getDependency("node",r)),a.push(this.getDependency("accessor",h)),o.push(this.getDependency("accessor",d)),l.push(t),u.push(i))}return Promise.all([Promise.all(s),Promise.all(a),Promise.all(o),Promise.all(l),Promise.all(u)]).then((function(e){const t=e[0],n=e[1],s=e[2],a=e[3],o=e[4],l=[];for(let r=0,u=t.length;r<u;r++){const e=t[r],u=n[r],c=s[r],h=a[r],d=o[r];if(void 0===e)continue;e.updateMatrix&&e.updateMatrix();const p=i._createAnimationTracks(e,u,c,h,d);if(p)for(let t=0;t<p.length;t++)l.push(p[t])}return new sl(r,void 0,l)}))}createNodeMesh(e){const t=this.json,i=this,n=t.nodes[e];return void 0===n.mesh?null:i.getDependency("mesh",n.mesh).then((function(e){const t=i._getNodeRef(i.meshCache,n.mesh,e);return void 0!==n.weights&&t.traverse((function(e){if(e.isMesh)for(let t=0,i=n.weights.length;t<i;t++)e.morphTargetInfluences[t]=n.weights[t]})),t}))}loadNode(e){const t=this,i=this.json.nodes[e],n=t._loadNodeShallow(e),r=[],s=i.children||[];for(let o=0,l=s.length;o<l;o++)r.push(t.getDependency("node",s[o]));const a=void 0===i.skin?Promise.resolve(null):t.getDependency("skin",i.skin);return Promise.all([n,Promise.all(r),a]).then((function(e){const t=e[0],i=e[1],n=e[2];null!==n&&t.traverse((function(e){e.isSkinnedMesh&&e.bind(n,bm)}));for(let r=0,s=i.length;r<s;r++)t.add(i[r]);return t}))}_loadNodeShallow(e){const t=this.json,i=this.extensions,n=this;if(void 0!==this.nodeCache[e])return this.nodeCache[e];const r=t.nodes[e],s=r.name?n.createUniqueName(r.name):"",a=[],o=n._invokeOne((function(t){return t.createNodeMesh&&t.createNodeMesh(e)}));return o&&a.push(o),void 0!==r.camera&&a.push(n.getDependency("camera",r.camera).then((function(e){return n._getNodeRef(n.cameraCache,r.camera,e)}))),n._invokeAll((function(t){return t.createNodeAttachment&&t.createNodeAttachment(e)})).forEach((function(e){a.push(e)})),this.nodeCache[e]=Promise.all(a).then((function(t){let a;if(a=!0===r.isBone?new vs:t.length>1?new Br:1===t.length?t[0]:new xn,a!==t[0])for(let e=0,i=t.length;e<i;e++)a.add(t[e]);if(r.name&&(a.userData.name=r.name,a.name=s),gm(a,r),r.extensions&&fm(i,a,r),void 0!==r.matrix){const e=new ji;e.fromArray(r.matrix),a.applyMatrix4(e)}else void 0!==r.translation&&a.position.fromArray(r.translation),void 0!==r.rotation&&a.quaternion.fromArray(r.rotation),void 0!==r.scale&&a.scale.fromArray(r.scale);return n.associations.has(a)||n.associations.set(a,{}),n.associations.get(a).nodes=e,a})),this.nodeCache[e]}loadScene(e){const t=this.extensions,i=this.json.scenes[e],n=this,r=new Br;i.name&&(r.name=n.createUniqueName(i.name)),gm(r,i),i.extensions&&fm(t,r,i);const s=i.nodes||[],a=[];for(let o=0,l=s.length;o<l;o++)a.push(n.getDependency("node",s[o]));return Promise.all(a).then((function(e){for(let t=0,i=e.length;t<i;t++)r.add(e[t]);return n.associations=(e=>{const t=new Map;for(const[i,r]of n.associations)(i instanceof kn||i instanceof li)&&t.set(i,r);return e.traverse((e=>{const i=n.associations.get(e);null!=i&&t.set(e,i)})),t})(r),r}))}_createAnimationTracks(e,t,i,n,r){const s=[],a=e.name?e.name:e.uuid,o=[];let l;switch(cm[r.path]===cm.weights?e.traverse((function(e){e.morphTargetInfluences&&o.push(e.name?e.name:e.uuid)})):o.push(a),cm[r.path]){case cm.weights:l=el;break;case cm.rotation:l=il;break;case cm.translation:case cm.scale:l=rl;break;default:if(1===i.itemSize)l=el;else l=rl}const u=void 0!==n.interpolation?hm[n.interpolation]:st,c=this._getArrayFromAccessor(i);for(let h=0,d=o.length;h<d;h++){const e=new l(o[h]+"."+cm[r.path],t.array,c,u);"CUBICSPLINE"===n.interpolation&&this._createCubicSplineTrackInterpolant(e),s.push(e)}return s}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const e=ym(t.constructor),i=new Float32Array(t.length);for(let n=0,r=t.length;n<r;n++)i[n]=t[n]*e;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(e){return new(this instanceof il?nm:tm)(this.times,this.values,this.getValueSize()/3,e)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function Sm(e,t,i){const n=t.attributes,r=[];function s(t,n){return i.getDependency("accessor",t).then((function(t){e.setAttribute(n,t)}))}for(const a in n){const t=um[a]||a.toLowerCase();t in e.attributes||r.push(s(n[a],t))}if(void 0!==t.indices&&!e.index){const n=i.getDependency("accessor",t.indices).then((function(t){e.setIndex(t)}));r.push(n)}return Jt.workingColorSpace,gm(e,t),function(e,t,i){const n=t.attributes,r=new vi;if(void 0===n.POSITION)return;{const e=i.json.accessors[n.POSITION],t=e.min,s=e.max;if(void 0===t||void 0===s)return;if(r.set(new fi(t[0],t[1],t[2]),new fi(s[0],s[1],s[2])),e.normalized){const t=ym(sm[e.componentType]);r.min.multiplyScalar(t),r.max.multiplyScalar(t)}}const s=t.targets;if(void 0!==s){const e=new fi,t=new fi;for(let n=0,r=s.length;n<r;n++){const r=s[n];if(void 0!==r.POSITION){const n=i.json.accessors[r.POSITION],s=n.min,a=n.max;if(void 0!==s&&void 0!==a){if(t.setX(Math.max(Math.abs(s[0]),Math.abs(a[0]))),t.setY(Math.max(Math.abs(s[1]),Math.abs(a[1]))),t.setZ(Math.max(Math.abs(s[2]),Math.abs(a[2]))),n.normalized){const e=ym(sm[n.componentType]);t.multiplyScalar(e)}e.max(t)}}}r.expandByVector(e)}e.boundingBox=r;const a=new Fi;r.getCenter(a.center),a.radius=r.min.distanceTo(r.max)/2,e.boundingSphere=a}(e,t,i),Promise.all(r).then((function(){return void 0!==t.targets?function(e,t,i){let n=!1,r=!1,s=!1;for(let u=0,c=t.length;u<c;u++){const e=t[u];if(void 0!==e.POSITION&&(n=!0),void 0!==e.NORMAL&&(r=!0),void 0!==e.COLOR_0&&(s=!0),n&&r&&s)break}if(!n&&!r&&!s)return Promise.resolve(e);const a=[],o=[],l=[];for(let u=0,c=t.length;u<c;u++){const c=t[u];if(n){const t=void 0!==c.POSITION?i.getDependency("accessor",c.POSITION):e.attributes.position;a.push(t)}if(r){const t=void 0!==c.NORMAL?i.getDependency("accessor",c.NORMAL):e.attributes.normal;o.push(t)}if(s){const t=void 0!==c.COLOR_0?i.getDependency("accessor",c.COLOR_0):e.attributes.color;l.push(t)}}return Promise.all([Promise.all(a),Promise.all(o),Promise.all(l)]).then((function(t){const i=t[0],a=t[1],o=t[2];return n&&(e.morphAttributes.position=i),r&&(e.morphAttributes.normal=a),s&&(e.morphAttributes.color=o),e.morphTargetsRelative=!0,e}))}(e,t.targets,i):e}))}class Mm{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){}dispose(){}}const wm=new Nl(-1,1,1,-1,0,1);const Em=new class extends ur{constructor(){super(),this.setAttribute("position",new tr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new tr([0,2,0,0,2,0],2))}};class Am{constructor(e){this._mesh=new br(Em,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,wm)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Rm extends ur{constructor(e=(e,t,i)=>i.set(e,t,Math.cos(e)*Math.sin(t)),t=8,i=8){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:i};const n=[],r=[],s=[],a=[],o=1e-5,l=new fi,u=new fi,c=new fi,h=new fi,d=new fi,p=t+1;for(let m=0;m<=i;m++){const n=m/i;for(let i=0;i<=t;i++){const p=i/t;e(p,n,u),r.push(u.x,u.y,u.z),p-o>=0?(e(p-o,n,c),h.subVectors(u,c)):(e(p+o,n,c),h.subVectors(c,u)),n-o>=0?(e(p,n-o,c),d.subVectors(u,c)):(e(p,n+o,c),d.subVectors(c,u)),l.crossVectors(h,d).normalize(),s.push(l.x,l.y,l.z),a.push(p,n)}}for(let m=0;m<i;m++)for(let e=0;e<t;e++){const t=m*p+e,i=m*p+e+1,r=(m+1)*p+e+1,s=(m+1)*p+e;n.push(t,i,s),n.push(i,r,s)}this.setIndex(n),this.setAttribute("position",new tr(r,3)),this.setAttribute("normal",new tr(s,3)),this.setAttribute("uv",new tr(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Cm extends To{constructor(e,t={}){const i=t.font;if(void 0===i)super();else{const n=i.generateShapes(e,t.size);void 0===t.depth&&(t.depth=50),void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t)}this.type="TextGeometry"}}const Nm=new WeakMap;class Pm extends cl{constructor(e){super(e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(e){return this.decoderPath=e,this}setDecoderConfig(e){return this.decoderConfig=e,this}setWorkerLimit(e){return this.workerLimit=e,this}load(e,t,i,n){const r=new pl(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(e=>{this.parse(e,t,n)}),i,n)}parse(e,t,i=()=>{}){this.decodeDracoFile(e,t,null,null,dt,i).catch(i)}decodeDracoFile(e,t,i,n,r=pt,s=()=>{}){const a={attributeIDs:i||this.defaultAttributeIDs,attributeTypes:n||this.defaultAttributeTypes,useUniqueIDs:!!i,vertexColorSpace:r};return this.decodeGeometry(e,a).then(t).catch(s)}decodeGeometry(e,t){const i=JSON.stringify(t);if(Nm.has(e)){const t=Nm.get(e);if(t.key===i)return t.promise;if(0===e.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let n;const r=this.workerNextTaskID++,s=e.byteLength,a=this._getWorker(r,s).then((i=>(n=i,new Promise(((i,s)=>{n._callbacks[r]={resolve:i,reject:s},n.postMessage({type:"decode",id:r,taskConfig:t,buffer:e},[e])}))))).then((e=>this._createGeometry(e.geometry)));return a.catch((()=>!0)).then((()=>{n&&r&&this._releaseTask(n,r)})),Nm.set(e,{key:i,promise:a}),a}_createGeometry(e){const t=new ur;e.index&&t.setIndex(new Zn(e.index.array,1));for(let i=0;i<e.attributes.length;i++){const n=e.attributes[i],r=n.name,s=n.array,a=n.itemSize,o=new Zn(s,a);"color"===r&&(this._assignVertexColorSpace(o,n.vertexColorSpace),o.normalized=s instanceof Float32Array==!1),t.setAttribute(r,o)}return t}_assignVertexColorSpace(e,t){if(t!==dt)return;const i=new Bn;for(let n=0,r=e.count;n<r;n++)i.fromBufferAttribute(e,n),Jt.toWorkingColorSpace(i,dt),e.setXYZ(n,i.r,i.g,i.b)}_loadLibrary(e,t){const i=new pl(this.manager);return i.setPath(this.decoderPath),i.setResponseType(t),i.setWithCredentials(this.withCredentials),new Promise(((t,n)=>{i.load(e,t,void 0,n)}))}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const e="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then((t=>{const i=t[0];e||(this.decoderConfig.wasmBinary=t[1]);const n=Lm.toString(),r=["/* draco decoder */",i,"","/* worker */",n.substring(n.indexOf("{")+1,n.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([r]))})),this.decoderPending}_getWorker(e,t){return this._initDecoder().then((()=>{if(this.workerPool.length<this.workerLimit){const e=new Worker(this.workerSourceURL);e._callbacks={},e._taskCosts={},e._taskLoad=0,e.postMessage({type:"init",decoderConfig:this.decoderConfig}),e.onmessage=function(t){const i=t.data;switch(i.type){case"decode":e._callbacks[i.id].resolve(i);break;case"error":e._callbacks[i.id].reject(i)}},this.workerPool.push(e)}else this.workerPool.sort((function(e,t){return e._taskLoad>t._taskLoad?-1:1}));const i=this.workerPool[this.workerPool.length-1];return i._taskCosts[e]=t,i._taskLoad+=t,i}))}_releaseTask(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]}debug(){}dispose(){for(let e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,""!==this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),this}}function Lm(){let e,t;function i(e,t,i,n,r,s){const a=s.num_components(),o=i.num_points()*a,l=o*r.BYTES_PER_ELEMENT,u=function(e,t){switch(t){case Float32Array:return e.DT_FLOAT32;case Int8Array:return e.DT_INT8;case Int16Array:return e.DT_INT16;case Int32Array:return e.DT_INT32;case Uint8Array:return e.DT_UINT8;case Uint16Array:return e.DT_UINT16;case Uint32Array:return e.DT_UINT32}}(e,r),c=e._malloc(l);t.GetAttributeDataArrayForAllPoints(i,s,u,l,c);const h=new r(e.HEAPF32.buffer,c,o).slice();return e._free(c),{name:n,array:h,itemSize:a}}onmessage=function(n){const r=n.data;switch(r.type){case"init":e=r.decoderConfig,t=new Promise((function(t){e.onModuleLoaded=function(e){t({draco:e})},DracoDecoderModule(e)}));break;case"decode":const n=r.buffer,s=r.taskConfig;t.then((e=>{const t=e.draco,a=new t.Decoder;try{const e=function(e,t,n,r){const s=r.attributeIDs,a=r.attributeTypes;let o,l;const u=t.GetEncodedGeometryType(n);if(u===e.TRIANGULAR_MESH)o=new e.Mesh,l=t.DecodeArrayToMesh(n,n.byteLength,o);else{if(u!==e.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");o=new e.PointCloud,l=t.DecodeArrayToPointCloud(n,n.byteLength,o)}if(!l.ok()||0===o.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+l.error_msg());const c={index:null,attributes:[]};for(const h in s){const n=self[a[h]];let l,u;if(r.useUniqueIDs)u=s[h],l=t.GetAttributeByUniqueId(o,u);else{if(u=t.GetAttributeId(o,e[s[h]]),-1===u)continue;l=t.GetAttribute(o,u)}const d=i(e,t,o,h,n,l);"color"===h&&(d.vertexColorSpace=r.vertexColorSpace),c.attributes.push(d)}u===e.TRIANGULAR_MESH&&(c.index=function(e,t,i){const n=i.num_faces(),r=3*n,s=4*r,a=e._malloc(s);t.GetTrianglesUInt32Array(i,s,a);const o=new Uint32Array(e.HEAPF32.buffer,a,r).slice();return e._free(a),{array:o,itemSize:1}}(e,t,o));return e.destroy(o),c}(t,a,new Int8Array(n),s),o=e.attributes.map((e=>e.array.buffer));e.index&&o.push(e.index.array.buffer),self.postMessage({type:"decode",id:r.id,geometry:e},o)}catch(o){self.postMessage({type:"error",id:r.id,error:o.message})}finally{t.destroy(a)}}))}}}class Im extends cl{constructor(e){super(e)}load(e,t,i,n){const r=this,s=new pl(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(e){const i=r.parse(JSON.parse(e));t&&t(i)}),i,n)}parse(e){return new Dm(e)}}class Dm{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],n=function(e,t,i){const n=Array.from(e),r=t/i.resolution,s=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,a=[];let o=0,l=0;for(let u=0;u<n.length;u++){const e=n[u];if("\n"===e)o=0,l-=s;else{const t=Um(e,r,o,l,i);o+=t.offsetX,a.push(t.path)}}return a}(e,t,this.data);for(let r=0,s=n.length;r<s;r++)i.push(...n[r].toShapes());return i}}function Um(e,t,i,n,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s)return;const a=new Lu;let o,l,u,c,h,d,p,m;if(s.o){const e=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=e.length;r<s;){switch(e[r++]){case"m":o=e[r++]*t+i,l=e[r++]*t+n,a.moveTo(o,l);break;case"l":o=e[r++]*t+i,l=e[r++]*t+n,a.lineTo(o,l);break;case"q":u=e[r++]*t+i,c=e[r++]*t+n,h=e[r++]*t+i,d=e[r++]*t+n,a.quadraticCurveTo(h,d,u,c);break;case"b":u=e[r++]*t+i,c=e[r++]*t+n,h=e[r++]*t+i,d=e[r++]*t+n,p=e[r++]*t+i,m=e[r++]*t+n,a.bezierCurveTo(h,d,p,m,u,c)}}}return{offsetX:s.ha*t,path:a}}class Fm{constructor(e,t,i){this.variables=[],this.currentTextureIndex=0;let n=ue;const r={passThruTexture:{value:null}},s=l("uniform sampler2D passThruTexture;\n\nvoid main() {\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor = texture2D( passThruTexture, uv );\n\n}\n",r),a=new Am(s);function o(i){i.defines.resolution="vec2( "+e.toFixed(1)+", "+t.toFixed(1)+" )"}function l(e,t){const i=new Rr({name:"GPUComputationShader",uniforms:t=t||{},vertexShader:"void main()\t{\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:e});return o(i),i}this.setDataType=function(e){return n=e,this},this.addVariable=function(e,t,i){const n={name:e,initialValueTexture:i,material:this.createShaderMaterial(t),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:Z,magFilter:Z};return this.variables.push(n),n},this.setVariableDependencies=function(e,t){e.dependencies=t},this.init=function(){if(0===i.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(let i=0;i<this.variables.length;i++){const n=this.variables[i];n.renderTargets[0]=this.createRenderTarget(e,t,n.wrapS,n.wrapT,n.minFilter,n.magFilter),n.renderTargets[1]=this.createRenderTarget(e,t,n.wrapS,n.wrapT,n.minFilter,n.magFilter),this.renderTexture(n.initialValueTexture,n.renderTargets[0]),this.renderTexture(n.initialValueTexture,n.renderTargets[1]);const r=n.material,s=r.uniforms;if(null!==n.dependencies)for(let e=0;e<n.dependencies.length;e++){const t=n.dependencies[e];if(t.name!==n.name){let e=!1;for(let i=0;i<this.variables.length;i++)if(t.name===this.variables[i].name){e=!0;break}if(!e)return"Variable dependency not found. Variable="+n.name+", dependency="+t.name}s[t.name]={value:null},r.fragmentShader="\nuniform sampler2D "+t.name+";\n"+r.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){const e=this.currentTextureIndex,t=0===this.currentTextureIndex?1:0;for(let i=0,n=this.variables.length;i<n;i++){const n=this.variables[i];if(null!==n.dependencies){const t=n.material.uniforms;for(let i=0,r=n.dependencies.length;i<r;i++){const r=n.dependencies[i];t[r.name].value=r.renderTargets[e].texture}}this.doRenderTarget(n.material,n.renderTargets[t])}this.currentTextureIndex=t},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.dispose=function(){a.dispose();const e=this.variables;for(let t=0;t<e.length;t++){const i=e[t];i.initialValueTexture&&i.initialValueTexture.dispose();const n=i.renderTargets;for(let e=0;e<n.length;e++){n[e].dispose()}}},this.addResolutionDefine=o,this.createShaderMaterial=l,this.createRenderTarget=function(i,r,s,a,o,l){return new hi(i=i||e,r=r||t,{wrapS:s=s||Y,wrapT:a=a||Y,minFilter:o=o||Z,magFilter:l=l||Z,format:_e,type:n,depthBuffer:!1})},this.createTexture=function(){const i=new Float32Array(e*t*4),n=new xs(i,e,t,_e,ue);return n.needsUpdate=!0,n},this.renderTexture=function(e,t){r.passThruTexture.value=e,this.doRenderTarget(s,t),r.passThruTexture.value=null},this.doRenderTarget=function(e,t){const n=i.getRenderTarget(),r=i.xr.enabled,o=i.shadowMap.autoUpdate;i.xr.enabled=!1,i.shadowMap.autoUpdate=!1,a.material=e,i.setRenderTarget(t),a.render(i),a.material=s,i.xr.enabled=r,i.shadowMap.autoUpdate=o,i.setRenderTarget(n)}}}class Om extends br{constructor(e,t={}){super(e),this.isReflectorForSSRPass=!0,this.type="ReflectorForSSRPass";const i=this,n=void 0!==t.color?new Bn(t.color):new Bn(8355711),r=t.textureWidth||512,s=t.textureHeight||512,a=t.clipBias||0,o=t.shader||Om.ReflectorShader,l=!0===t.useDepthTexture,u=new fi(0,1,0),c=new fi,h=new fi;i.needsUpdate=!1,i.maxDistance=Om.ReflectorShader.uniforms.maxDistance.value,i.opacity=Om.ReflectorShader.uniforms.opacity.value,i.color=n,i.resolution=t.resolution||new Gt(window.innerWidth,window.innerHeight),i._distanceAttenuation=Om.ReflectorShader.defines.DISTANCE_ATTENUATION,Object.defineProperty(i,"distanceAttenuation",{get:()=>i._distanceAttenuation,set(e){i._distanceAttenuation!==e&&(i._distanceAttenuation=e,i.material.defines.DISTANCE_ATTENUATION=e,i.material.needsUpdate=!0)}}),i._fresnel=Om.ReflectorShader.defines.FRESNEL,Object.defineProperty(i,"fresnel",{get:()=>i._fresnel,set(e){i._fresnel!==e&&(i._fresnel=e,i.material.defines.FRESNEL=e,i.material.needsUpdate=!0)}});const d=new fi,p=new fi,m=new fi,f=new ji,g=new fi(0,0,-1),_=new fi,v=new fi,x=new ji,y=new Ir;let b;l&&(b=new da,b.type=ae,b.minFilter=Z,b.magFilter=Z);const T=new hi(r,s,{depthTexture:l?b:null,type:ce}),S=new Rr({name:void 0!==o.name?o.name:"unspecified",transparent:l,defines:Object.assign({},Om.ReflectorShader.defines,{useDepthTexture:l}),uniforms:Ar.clone(o.uniforms),fragmentShader:o.fragmentShader,vertexShader:o.vertexShader});S.uniforms.tDiffuse.value=T.texture,S.uniforms.color.value=i.color,S.uniforms.textureMatrix.value=x,l&&(S.uniforms.tDepth.value=T.depthTexture),this.material=S;const M=[new Us(new fi(0,1,0),a)];this.doRender=function(e,t,n){if(S.uniforms.maxDistance.value=i.maxDistance,S.uniforms.color.value=i.color,S.uniforms.opacity.value=i.opacity,c.copy(n.position).normalize(),h.copy(c).reflect(u),S.uniforms.fresnelCoe.value=(c.dot(h)+1)/2,p.setFromMatrixPosition(i.matrixWorld),m.setFromMatrixPosition(n.matrixWorld),f.extractRotation(i.matrixWorld),d.set(0,0,1),d.applyMatrix4(f),_.subVectors(p,m),_.dot(d)>0)return;_.reflect(d).negate(),_.add(p),f.extractRotation(n.matrixWorld),g.set(0,0,-1),g.applyMatrix4(f),g.add(m),v.subVectors(p,g),v.reflect(d).negate(),v.add(p),y.position.copy(_),y.up.set(0,1,0),y.up.applyMatrix4(f),y.up.reflect(d),y.lookAt(v),y.far=n.far,y.updateMatrixWorld(),y.projectionMatrix.copy(n.projectionMatrix),S.uniforms.virtualCameraNear.value=n.near,S.uniforms.virtualCameraFar.value=n.far,S.uniforms.virtualCameraMatrixWorld.value=y.matrixWorld,S.uniforms.virtualCameraProjectionMatrix.value=n.projectionMatrix,S.uniforms.virtualCameraProjectionMatrixInverse.value=n.projectionMatrixInverse,S.uniforms.resolution.value=i.resolution,x.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),x.multiply(y.projectionMatrix),x.multiply(y.matrixWorldInverse),x.multiply(i.matrixWorld);const r=e.getRenderTarget(),s=e.xr.enabled,a=e.shadowMap.autoUpdate,o=e.clippingPlanes;e.xr.enabled=!1,e.shadowMap.autoUpdate=!1,e.clippingPlanes=M,e.setRenderTarget(T),e.state.buffers.depth.setMask(!0),!1===e.autoClear&&e.clear(),e.render(t,y),e.xr.enabled=s,e.shadowMap.autoUpdate=a,e.clippingPlanes=o,e.setRenderTarget(r);const l=n.viewport;void 0!==l&&e.state.viewport(l)},this.getRenderTarget=function(){return T},this.dispose=function(){T.dispose(),i.material.dispose()}}}Om.ReflectorShader={name:"ReflectorShader",defines:{DISTANCE_ATTENUATION:!0,FRESNEL:!0},uniforms:{color:{value:null},tDiffuse:{value:null},tDepth:{value:null},textureMatrix:{value:new ji},maxDistance:{value:180},opacity:{value:.5},fresnelCoe:{value:null},virtualCameraNear:{value:null},virtualCameraFar:{value:null},virtualCameraProjectionMatrix:{value:new ji},virtualCameraMatrixWorld:{value:new ji},virtualCameraProjectionMatrixInverse:{value:new ji},resolution:{value:new Gt}},vertexShader:"\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDepth;\n\t\tuniform float maxDistance;\n\t\tuniform float opacity;\n\t\tuniform float fresnelCoe;\n\t\tuniform float virtualCameraNear;\n\t\tuniform float virtualCameraFar;\n\t\tuniform mat4 virtualCameraProjectionMatrix;\n\t\tuniform mat4 virtualCameraProjectionMatrixInverse;\n\t\tuniform mat4 virtualCameraMatrixWorld;\n\t\tuniform vec2 resolution;\n\t\tvarying vec4 vUv;\n\t\t#include <packing>\n\t\tfloat blendOverlay( float base, float blend ) {\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\t\t}\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\treturn perspectiveDepthToViewZ( depth, virtualCameraNear, virtualCameraFar );\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( virtualCameraProjectionMatrixInverse * clipPosition ).xyz;//view\n\t\t}\n\t\tvoid main() {\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\t#ifdef useDepthTexture\n\t\t\t\tvec2 uv=(gl_FragCoord.xy-.5)/resolution.xy;\n\t\t\t\tuv.x=1.-uv.x;\n\t\t\t\tfloat depth = texture2DProj( tDepth, vUv ).r;\n\t\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\t\tfloat clipW = virtualCameraProjectionMatrix[2][3] * viewZ+virtualCameraProjectionMatrix[3][3];\n\t\t\t\tvec3 viewPosition=getViewPosition( uv, depth, clipW );\n\t\t\t\tvec3 worldPosition=(virtualCameraMatrixWorld*vec4(viewPosition,1)).xyz;\n\t\t\t\tif(worldPosition.y>maxDistance) discard;\n\t\t\t\tfloat op=opacity;\n\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\tfloat ratio=1.-(worldPosition.y/maxDistance);\n\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t#endif\n\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t#endif\n\t\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), op );\n\t\t\t#else\n\t\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\t\t\t#endif\n\t\t}\n\t"};const Bm={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"};class Vm extends Mm{constructor(e,t="tDiffuse"){super(),this.textureID=t,this.uniforms=null,this.material=null,e instanceof Rr?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Ar.clone(e.uniforms),this.material=new Rr({name:void 0!==e.name?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this._fsQuad=new Am(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this._fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class zm extends Mm{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const n=e.getContext(),r=e.state;let s,a;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0),this.inverse?(s=0,a=1):(s=1,a=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),r.buffers.stencil.setFunc(n.ALWAYS,s,4294967295),r.buffers.stencil.setClear(a),r.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(n.EQUAL,1,4294967295),r.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),r.buffers.stencil.setLocked(!0)}}class km extends Mm{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class Gm{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),void 0===t){const i=e.getSize(new Gt);this._width=i.width,this._height=i.height,(t=new hi(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ce})).texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Vm(Bm),this.copyPass.material.blending=0,this.clock=new Hl}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let n=0,r=this.passes.length;n<r;n++){const t=this.passes[n];if(!1!==t.enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),t.needsSwap){if(i){const t=this.renderer.getContext(),i=this.renderer.state.buffers.stencil;i.setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),i.setFunc(t.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==zm&&(t instanceof zm?i=!0:t instanceof km&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){const t=this.renderer.getSize(new Gt);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}const Hm={name:"OutputShader",uniforms:{tDiffuse:{value:null},toneMappingExposure:{value:1}},vertexShader:"\n\t\tprecision highp float;\n\n\t\tuniform mat4 modelViewMatrix;\n\t\tuniform mat4 projectionMatrix;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tprecision highp float;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\t#include <tonemapping_pars_fragment>\n\t\t#include <colorspace_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t// tone mapping\n\n\t\t\t#ifdef LINEAR_TONE_MAPPING\n\n\t\t\t\tgl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( REINHARD_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CINEON_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CineonToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( ACES_FILMIC_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( AGX_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = AgXToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( NEUTRAL_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = NeutralToneMapping( gl_FragColor.rgb );\n\n\t\t\t#elif defined( CUSTOM_TONE_MAPPING )\n\n\t\t\t\tgl_FragColor.rgb = CustomToneMapping( gl_FragColor.rgb );\n\n\t\t\t#endif\n\n\t\t\t// color space\n\n\t\t\t#ifdef SRGB_TRANSFER\n\n\t\t\t\tgl_FragColor = sRGBTransferOETF( gl_FragColor );\n\n\t\t\t#endif\n\n\t\t}"};class Wm extends Mm{constructor(){super(),this.uniforms=Ar.clone(Hm.uniforms),this.material=new Lo({name:Hm.name,uniforms:this.uniforms,vertexShader:Hm.vertexShader,fragmentShader:Hm.fragmentShader}),this._fsQuad=new Am(this.material),this._outputColorSpace=null,this._toneMapping=null}render(e,t,i){this.uniforms.tDiffuse.value=i.texture,this.uniforms.toneMappingExposure.value=e.toneMappingExposure,this._outputColorSpace===e.outputColorSpace&&this._toneMapping===e.toneMapping||(this._outputColorSpace=e.outputColorSpace,this._toneMapping=e.toneMapping,this.material.defines={},Jt.getTransfer(this._outputColorSpace)===ft&&(this.material.defines.SRGB_TRANSFER=""),1===this._toneMapping?this.material.defines.LINEAR_TONE_MAPPING="":2===this._toneMapping?this.material.defines.REINHARD_TONE_MAPPING="":3===this._toneMapping?this.material.defines.CINEON_TONE_MAPPING="":4===this._toneMapping?this.material.defines.ACES_FILMIC_TONE_MAPPING="":6===this._toneMapping?this.material.defines.AGX_TONE_MAPPING="":7===this._toneMapping?this.material.defines.NEUTRAL_TONE_MAPPING="":5===this._toneMapping&&(this.material.defines.CUSTOM_TONE_MAPPING=""),this.material.needsUpdate=!0),!0===this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this._fsQuad.render(e))}dispose(){this.material.dispose(),this._fsQuad.dispose()}}class jm extends Mm{constructor(e,t,i=null,n=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Bn}render(e,t,i){const n=e.autoClear;let r,s;e.autoClear=!1,null!==this.overrideMaterial&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),null!==this.clearAlpha&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),1==this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),!0===this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),null!==this.clearColor&&e.setClearColor(this._oldClearColor),null!==this.clearAlpha&&e.setClearAlpha(r),null!==this.overrideMaterial&&(this.scene.overrideMaterial=s),e.autoClear=n}}const Xm={name:"SSRShader",defines:{MAX_STEP:0,PERSPECTIVE_CAMERA:!0,DISTANCE_ATTENUATION:!0,FRESNEL:!0,INFINITE_THICK:!1,SELECTIVE:!1},uniforms:{tDiffuse:{value:null},tNormal:{value:null},tMetalness:{value:null},tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null},resolution:{value:new Gt},cameraProjectionMatrix:{value:new ji},cameraInverseProjectionMatrix:{value:new ji},opacity:{value:.5},maxDistance:{value:180},cameraRange:{value:0},thickness:{value:.018}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:'\n\t\t// precision highp float;\n\t\tprecision highp sampler2D;\n\t\tvarying vec2 vUv;\n\t\tuniform sampler2D tDepth;\n\t\tuniform sampler2D tNormal;\n\t\tuniform sampler2D tMetalness;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float cameraRange;\n\t\tuniform vec2 resolution;\n\t\tuniform float opacity;\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\t\tuniform float maxDistance;\n\t\tuniform float thickness;\n\t\tuniform mat4 cameraProjectionMatrix;\n\t\tuniform mat4 cameraInverseProjectionMatrix;\n\t\t#include <packing>\n\t\tfloat pointToLineDistance(vec3 x0, vec3 x1, vec3 x2) {\n\t\t\t//x0: point, x1: linePointA, x2: linePointB\n\t\t\t//https://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n\t\t\treturn length(cross(x0-x1,x0-x2))/length(x2-x1);\n\t\t}\n\t\tfloat pointPlaneDistance(vec3 point,vec3 planePoint,vec3 planeNormal){\n\t\t\t// https://mathworld.wolfram.com/Point-PlaneDistance.html\n\t\t\t//// https://en.wikipedia.org/wiki/Plane_(geometry)\n\t\t\t//// http://paulbourke.net/geometry/pointlineplane/\n\t\t\tfloat a=planeNormal.x,b=planeNormal.y,c=planeNormal.z;\n\t\t\tfloat x0=point.x,y0=point.y,z0=point.z;\n\t\t\tfloat x=planePoint.x,y=planePoint.y,z=planePoint.z;\n\t\t\tfloat d=-(a*x+b*y+c*z);\n\t\t\tfloat distance=(a*x0+b*y0+c*z0+d)/sqrt(a*a+b*b+c*c);\n\t\t\treturn distance;\n\t\t}\n\t\tfloat getDepth( const in vec2 uv ) {\n\t\t\treturn texture2D( tDepth, uv ).x;\n\t\t}\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#else\n\t\t\t\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\n\t\t\t#endif\n\t\t}\n\t\tvec3 getViewPosition( const in vec2 uv, const in float depth/*clip space*/, const in float clipW ) {\n\t\t\tvec4 clipPosition = vec4( ( vec3( uv, depth ) - 0.5 ) * 2.0, 1.0 );//ndc\n\t\t\tclipPosition *= clipW; //clip\n\t\t\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;//view\n\t\t}\n\t\tvec3 getViewNormal( const in vec2 uv ) {\n\t\t\treturn unpackRGBToNormal( texture2D( tNormal, uv ).xyz );\n\t\t}\n\t\tvec2 viewPositionToXY(vec3 viewPosition){\n\t\t\tvec2 xy;\n\t\t\tvec4 clip=cameraProjectionMatrix*vec4(viewPosition,1);\n\t\t\txy=clip.xy;//clip\n\t\t\tfloat clipW=clip.w;\n\t\t\txy/=clipW;//NDC\n\t\t\txy=(xy+1.)/2.;//uv\n\t\t\txy*=resolution;//screen\n\t\t\treturn xy;\n\t\t}\n\t\tvoid main(){\n\t\t\t#ifdef SELECTIVE\n\t\t\t\tfloat metalness=texture2D(tMetalness,vUv).r;\n\t\t\t\tif(metalness==0.) return;\n\t\t\t#endif\n\n\t\t\tfloat depth = getDepth( vUv );\n\t\t\tfloat viewZ = getViewZ( depth );\n\t\t\tif(-viewZ>=cameraFar) return;\n\n\t\t\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ+cameraProjectionMatrix[3][3];\n\t\t\tvec3 viewPosition=getViewPosition( vUv, depth, clipW );\n\n\t\t\tvec2 d0=gl_FragCoord.xy;\n\t\t\tvec2 d1;\n\n\t\t\tvec3 viewNormal=getViewNormal( vUv );\n\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tvec3 viewIncidentDir=normalize(viewPosition);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#else\n\t\t\t\tvec3 viewIncidentDir=vec3(0,0,-1);\n\t\t\t\tvec3 viewReflectDir=reflect(viewIncidentDir,viewNormal);\n\t\t\t#endif\n\n\t\t\tfloat maxReflectRayLen=maxDistance/dot(-viewIncidentDir,viewNormal);\n\t\t\t// dot(a,b)==length(a)*length(b)*cos(theta) // https://www.mathsisfun.com/algebra/vectors-dot-product.html\n\t\t\t// if(a.isNormalized&&b.isNormalized) dot(a,b)==cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen=cos(theta)\n\t\t\t// maxDistance/maxReflectRayLen==dot(a,b)\n\t\t\t// maxReflectRayLen==maxDistance/dot(a,b)\n\n\t\t\tvec3 d1viewPosition=viewPosition+viewReflectDir*maxReflectRayLen;\n\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\tif(d1viewPosition.z>-cameraNear){\n\t\t\t\t\t//https://tutorial.math.lamar.edu/Classes/CalcIII/EqnsOfLines.aspx\n\t\t\t\t\tfloat t=(-cameraNear-viewPosition.z)/viewReflectDir.z;\n\t\t\t\t\td1viewPosition=viewPosition+viewReflectDir*t;\n\t\t\t\t}\n\t\t\t#endif\n\t\t\td1=viewPositionToXY(d1viewPosition);\n\n\t\t\tfloat totalLen=length(d1-d0);\n\t\t\tfloat xLen=d1.x-d0.x;\n\t\t\tfloat yLen=d1.y-d0.y;\n\t\t\tfloat totalStep=max(abs(xLen),abs(yLen));\n\t\t\tfloat xSpan=xLen/totalStep;\n\t\t\tfloat ySpan=yLen/totalStep;\n\t\t\tfor(float i=0.;i<float(MAX_STEP);i++){\n\t\t\t\tif(i>=totalStep) break;\n\t\t\t\tvec2 xy=vec2(d0.x+i*xSpan,d0.y+i*ySpan);\n\t\t\t\tif(xy.x<0.||xy.x>resolution.x||xy.y<0.||xy.y>resolution.y) break;\n\t\t\t\tfloat s=length(xy-d0)/totalLen;\n\t\t\t\tvec2 uv=xy/resolution;\n\n\t\t\t\tfloat d = getDepth(uv);\n\t\t\t\tfloat vZ = getViewZ( d );\n\t\t\t\tif(-vZ>=cameraFar) continue;\n\t\t\t\tfloat cW = cameraProjectionMatrix[2][3] * vZ+cameraProjectionMatrix[3][3];\n\t\t\t\tvec3 vP=getViewPosition( uv, d, cW );\n\n\t\t\t\t#ifdef PERSPECTIVE_CAMERA\n\t\t\t\t\t// https://comp.nus.edu.sg/~lowkl/publications/lowk_persp_interp_techrep.pdf\n\t\t\t\t\tfloat recipVPZ=1./viewPosition.z;\n\t\t\t\t\tfloat viewReflectRayZ=1./(recipVPZ+s*(1./d1viewPosition.z-recipVPZ));\n\t\t\t\t#else\n\t\t\t\t\tfloat viewReflectRayZ=viewPosition.z+s*(d1viewPosition.z-viewPosition.z);\n\t\t\t\t#endif\n\n\t\t\t\t// if(viewReflectRayZ>vZ) continue; // will cause "npm run make-screenshot webgl_postprocessing_ssr" high probability hang.\n\t\t\t\t// https://github.com/mrdoob/three.js/pull/21539#issuecomment-821061164\n\t\t\t\tif(viewReflectRayZ<=vZ){\n\n\t\t\t\t\tbool hit;\n\t\t\t\t\t#ifdef INFINITE_THICK\n\t\t\t\t\t\thit=true;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat away=pointToLineDistance(vP,viewPosition,d1viewPosition);\n\n\t\t\t\t\t\tfloat minThickness;\n\t\t\t\t\t\tvec2 xyNeighbor=xy;\n\t\t\t\t\t\txyNeighbor.x+=1.;\n\t\t\t\t\t\tvec2 uvNeighbor=xyNeighbor/resolution;\n\t\t\t\t\t\tvec3 vPNeighbor=getViewPosition(uvNeighbor,d,cW);\n\t\t\t\t\t\tminThickness=vPNeighbor.x-vP.x;\n\t\t\t\t\t\tminThickness*=3.;\n\t\t\t\t\t\tfloat tk=max(minThickness,thickness);\n\n\t\t\t\t\t\thit=away<=tk;\n\t\t\t\t\t#endif\n\n\t\t\t\t\tif(hit){\n\t\t\t\t\t\tvec3 vN=getViewNormal( uv );\n\t\t\t\t\t\tif(dot(viewReflectDir,vN)>=0.) continue;\n\t\t\t\t\t\tfloat distance=pointPlaneDistance(vP,viewPosition,viewNormal);\n\t\t\t\t\t\tif(distance>maxDistance) break;\n\t\t\t\t\t\tfloat op=opacity;\n\t\t\t\t\t\t#ifdef DISTANCE_ATTENUATION\n\t\t\t\t\t\t\tfloat ratio=1.-(distance/maxDistance);\n\t\t\t\t\t\t\tfloat attenuation=ratio*ratio;\n\t\t\t\t\t\t\top=opacity*attenuation;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef FRESNEL\n\t\t\t\t\t\t\tfloat fresnelCoe=(dot(viewIncidentDir,viewReflectDir)+1.)/2.;\n\t\t\t\t\t\t\top*=fresnelCoe;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvec4 reflectColor=texture2D(tDiffuse,uv);\n\t\t\t\t\t\tgl_FragColor.xyz=reflectColor.xyz;\n\t\t\t\t\t\tgl_FragColor.a=op;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t'},$m={name:"SSRDepthShader",defines:{PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float cameraNear;\n\t\tuniform float cameraFar;\n\n\t\tvarying vec2 vUv;\n\n\t\t#include <packing>\n\n\t\tfloat getLinearDepth( const in vec2 uv ) {\n\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\n\t\t\t\tfloat fragCoordZ = texture2D( tDepth, uv ).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n\n\t\t\t#else\n\n\t\t\t\treturn texture2D( tDepth, uv ).x;\n\n\t\t\t#endif\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tfloat depth = getLinearDepth( vUv );\n\t\t\tfloat d = 1.0 - depth;\n\t\t\t// d=(d-.999)*1000.;\n\t\t\tgl_FragColor = vec4( vec3( d ), 1.0 );\n\n\t\t}\n\n\t"},qm={name:"SSRBlurShader",uniforms:{tDiffuse:{value:null},resolution:{value:new Gt},opacity:{value:.5}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\t//reverse engineering from PhotoShop blur filter, then change coefficient\n\n\t\t\tvec2 texelSize = ( 1.0 / resolution );\n\n\t\t\tvec4 c=texture2D(tDiffuse,vUv);\n\n\t\t\tvec2 offset;\n\n\t\t\toffset=(vec2(-1,0))*texelSize;\n\t\t\tvec4 cl=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(1,0))*texelSize;\n\t\t\tvec4 cr=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,-1))*texelSize;\n\t\t\tvec4 cb=texture2D(tDiffuse,vUv+offset);\n\n\t\t\toffset=(vec2(0,1))*texelSize;\n\t\t\tvec4 ct=texture2D(tDiffuse,vUv+offset);\n\n\t\t\t// float coeCenter=.5;\n\t\t\t// float coeSide=.125;\n\t\t\tfloat coeCenter=.2;\n\t\t\tfloat coeSide=.2;\n\t\t\tfloat a=c.a*coeCenter+cl.a*coeSide+cr.a*coeSide+cb.a*coeSide+ct.a*coeSide;\n\t\t\tvec3 rgb=(c.rgb*c.a*coeCenter+cl.rgb*cl.a*coeSide+cr.rgb*cr.a*coeSide+cb.rgb*cb.a*coeSide+ct.rgb*ct.a*coeSide)/a;\n\t\t\tgl_FragColor=vec4(rgb,a);\n\n\t\t}\n\t"};class Ym extends Mm{constructor({renderer:e,scene:t,camera:i,width:n=512,height:r=512,selects:s=null,bouncing:a=!1,groundReflector:o=null}){super(),this.width=n,this.height=r,this.clear=!0,this.renderer=e,this.scene=t,this.camera=i,this.groundReflector=o,this.opacity=Xm.uniforms.opacity.value,this.output=0,this.maxDistance=Xm.uniforms.maxDistance.value,this.thickness=Xm.uniforms.thickness.value,this.tempColor=new Bn,this._selects=s,this.selective=Array.isArray(this._selects),Object.defineProperty(this,"selects",{get(){return this._selects},set(e){this._selects!==e&&(this._selects=e,Array.isArray(e)?(this.selective=!0,this.ssrMaterial.defines.SELECTIVE=!0,this.ssrMaterial.needsUpdate=!0):(this.selective=!1,this.ssrMaterial.defines.SELECTIVE=!1,this.ssrMaterial.needsUpdate=!0))}}),this._bouncing=a,Object.defineProperty(this,"bouncing",{get(){return this._bouncing},set(e){this._bouncing!==e&&(this._bouncing=e,this.ssrMaterial.uniforms.tDiffuse.value=e?this.prevRenderTarget.texture:this.beautyRenderTarget.texture)}}),this.blur=!0,this._distanceAttenuation=Xm.defines.DISTANCE_ATTENUATION,Object.defineProperty(this,"distanceAttenuation",{get(){return this._distanceAttenuation},set(e){this._distanceAttenuation!==e&&(this._distanceAttenuation=e,this.ssrMaterial.defines.DISTANCE_ATTENUATION=e,this.ssrMaterial.needsUpdate=!0)}}),this._fresnel=Xm.defines.FRESNEL,Object.defineProperty(this,"fresnel",{get(){return this._fresnel},set(e){this._fresnel!==e&&(this._fresnel=e,this.ssrMaterial.defines.FRESNEL=e,this.ssrMaterial.needsUpdate=!0)}}),this._infiniteThick=Xm.defines.INFINITE_THICK,Object.defineProperty(this,"infiniteThick",{get(){return this._infiniteThick},set(e){this._infiniteThick!==e&&(this._infiniteThick=e,this.ssrMaterial.defines.INFINITE_THICK=e,this.ssrMaterial.needsUpdate=!0)}});const l=new da;l.type=ae,l.minFilter=Z,l.magFilter=Z,this.beautyRenderTarget=new hi(this.width,this.height,{minFilter:Z,magFilter:Z,type:ce,depthTexture:l,depthBuffer:!0}),this.prevRenderTarget=new hi(this.width,this.height,{minFilter:Z,magFilter:Z}),this.normalRenderTarget=new hi(this.width,this.height,{minFilter:Z,magFilter:Z,type:ce}),this.metalnessRenderTarget=new hi(this.width,this.height,{minFilter:Z,magFilter:Z,type:ce}),this.ssrRenderTarget=new hi(this.width,this.height,{minFilter:Z,magFilter:Z}),this.blurRenderTarget=this.ssrRenderTarget.clone(),this.blurRenderTarget2=this.ssrRenderTarget.clone(),this.ssrMaterial=new Rr({defines:Object.assign({},Xm.defines,{MAX_STEP:Math.sqrt(this.width*this.width+this.height*this.height)}),uniforms:Ar.clone(Xm.uniforms),vertexShader:Xm.vertexShader,fragmentShader:Xm.fragmentShader,blending:0}),this.ssrMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssrMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssrMaterial.defines.SELECTIVE=this.selective,this.ssrMaterial.needsUpdate=!0,this.ssrMaterial.uniforms.tMetalness.value=this.metalnessRenderTarget.texture,this.ssrMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.ssrMaterial.uniforms.cameraNear.value=this.camera.near,this.ssrMaterial.uniforms.cameraFar.value=this.camera.far,this.ssrMaterial.uniforms.thickness.value=this.thickness,this.ssrMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new Oo,this.normalMaterial.blending=0,this.metalnessOnMaterial=new Gn({color:"white"}),this.metalnessOffMaterial=new Gn({color:"black"}),this.blurMaterial=new Rr({defines:Object.assign({},qm.defines),uniforms:Ar.clone(qm.uniforms),vertexShader:qm.vertexShader,fragmentShader:qm.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.blurMaterial2=new Rr({defines:Object.assign({},qm.defines),uniforms:Ar.clone(qm.uniforms),vertexShader:qm.vertexShader,fragmentShader:qm.fragmentShader}),this.blurMaterial2.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.blurMaterial2.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new Rr({defines:Object.assign({},$m.defines),uniforms:Ar.clone($m.uniforms),vertexShader:$m.vertexShader,fragmentShader:$m.fragmentShader,blending:0}),this.depthRenderMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new Rr({uniforms:Ar.clone(Bm.uniforms),vertexShader:Bm.vertexShader,fragmentShader:Bm.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:T,blendDst:S,blendEquation:f,blendSrcAlpha:T,blendDstAlpha:S,blendEquationAlpha:f}),this.fsQuad=new Am(null),this.originalClearColor=new Bn}dispose(){this.beautyRenderTarget.dispose(),this.prevRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.metalnessRenderTarget.dispose(),this.ssrRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.blurRenderTarget2.dispose(),this.normalMaterial.dispose(),this.metalnessOnMaterial.dispose(),this.metalnessOffMaterial.dispose(),this.blurMaterial.dispose(),this.blurMaterial2.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(e,t){switch(e.setRenderTarget(this.beautyRenderTarget),e.clear(),this.groundReflector&&(this.groundReflector.visible=!1,this.groundReflector.doRender(this.renderer,this.scene,this.camera),this.groundReflector.visible=!0),e.render(this.scene,this.camera),this.groundReflector&&(this.groundReflector.visible=!1),this._renderOverride(e,this.normalMaterial,this.normalRenderTarget,0,0),this.selective&&this._renderMetalness(e,this.metalnessOnMaterial,this.metalnessRenderTarget,0,0),this.ssrMaterial.uniforms.opacity.value=this.opacity,this.ssrMaterial.uniforms.maxDistance.value=this.maxDistance,this.ssrMaterial.uniforms.thickness.value=this.thickness,this._renderPass(e,this.ssrMaterial,this.ssrRenderTarget),this.blur&&(this._renderPass(e,this.blurMaterial,this.blurRenderTarget),this._renderPass(e,this.blurMaterial2,this.blurRenderTarget2)),this.output){case Ym.OUTPUT.Default:this.bouncing?(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.prevRenderTarget),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=1,this._renderPass(e,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.prevRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t)):(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t),this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=1,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t));break;case Ym.OUTPUT.SSR:this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t),this.bouncing&&(this.blur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=1,this._renderPass(e,this.copyMaterial,this.prevRenderTarget));break;case Ym.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case Ym.OUTPUT.Depth:this._renderPass(e,this.depthRenderMaterial,this.renderToScreen?null:t);break;case Ym.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case Ym.OUTPUT.Metalness:this.copyMaterial.uniforms.tDiffuse.value=this.metalnessRenderTarget.texture,this.copyMaterial.blending=0,this._renderPass(e,this.copyMaterial,this.renderToScreen?null:t)}}setSize(e,t){this.width=e,this.height=t,this.ssrMaterial.defines.MAX_STEP=Math.sqrt(e*e+t*t),this.ssrMaterial.needsUpdate=!0,this.beautyRenderTarget.setSize(e,t),this.prevRenderTarget.setSize(e,t),this.ssrRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.metalnessRenderTarget.setSize(e,t),this.blurRenderTarget.setSize(e,t),this.blurRenderTarget2.setSize(e,t),this.ssrMaterial.uniforms.resolution.value.set(e,t),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(e,t),this.blurMaterial2.uniforms.resolution.value.set(e,t)}_renderPass(e,t,i,n,r){this.originalClearColor.copy(e.getClearColor(this.tempColor));const s=e.getClearAlpha(this.tempColor),a=e.autoClear;e.setRenderTarget(i),e.autoClear=!1,null!=n&&(e.setClearColor(n),e.setClearAlpha(r||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=a,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}_renderOverride(e,t,i,n,r){this.originalClearColor.copy(e.getClearColor(this.tempColor));const s=e.getClearAlpha(this.tempColor),a=e.autoClear;e.setRenderTarget(i),e.autoClear=!1,n=t.clearColor||n,r=t.clearAlpha||r,null!=n&&(e.setClearColor(n),e.setClearAlpha(r||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=a,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}_renderMetalness(e,t,i,n,r){this.originalClearColor.copy(e.getClearColor(this.tempColor));const s=e.getClearAlpha(this.tempColor),a=e.autoClear,o=this.scene.background,l=this.scene.fog;e.setRenderTarget(i),e.autoClear=!1,this.scene.background=null,this.scene.fog=null,n=t.clearColor||n,r=t.clearAlpha||r,null!=n&&(e.setClearColor(n),e.setClearAlpha(r||0),e.clear()),this.scene.traverseVisible((e=>{e._SSRPassBackupMaterial=e.material,this._selects.includes(e)?e.material=this.metalnessOnMaterial:e.material=this.metalnessOffMaterial})),e.render(this.scene,this.camera),this.scene.traverseVisible((e=>{e.material=e._SSRPassBackupMaterial})),e.autoClear=a,e.setClearColor(this.originalClearColor),e.setClearAlpha(s),this.scene.background=o,this.scene.fog=l}}Ym.OUTPUT={Default:0,SSR:1,Beauty:3,Depth:4,Normal:5,Metalness:7};const Km={name:"LuminosityHighPassShader",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new Bn(0)},defaultOpacity:{value:0}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"};class Zm extends Mm{constructor(e,t=1,i,n){super(),this.strength=t,this.radius=i,this.threshold=n,this.resolution=void 0!==e?new Gt(e.x,e.y):new Gt(256,256),this.clearColor=new Bn(0,0,0),this.needsSwap=!1,this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);this.renderTargetBright=new hi(r,s,{type:ce}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let l=0;l<this.nMips;l++){const e=new hi(r,s,{type:ce});e.texture.name="UnrealBloomPass.h"+l,e.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(e);const t=new hi(r,s,{type:ce});t.texture.name="UnrealBloomPass.v"+l,t.texture.generateMipmaps=!1,this.renderTargetsVertical.push(t),r=Math.round(r/2),s=Math.round(s/2)}const a=Km;this.highPassUniforms=Ar.clone(a.uniforms),this.highPassUniforms.luminosityThreshold.value=n,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new Rr({uniforms:this.highPassUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.separableBlurMaterials=[];const o=[3,5,7,9,11];r=Math.round(this.resolution.x/2),s=Math.round(this.resolution.y/2);for(let l=0;l<this.nMips;l++)this.separableBlurMaterials.push(this._getSeparableBlurMaterial(o[l])),this.separableBlurMaterials[l].uniforms.invSize.value=new Gt(1/r,1/s),r=Math.round(r/2),s=Math.round(s/2);this.compositeMaterial=this._getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new fi(1,1,1),new fi(1,1,1),new fi(1,1,1),new fi(1,1,1),new fi(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.copyUniforms=Ar.clone(Bm.uniforms),this.blendMaterial=new Rr({uniforms:this.copyUniforms,vertexShader:Bm.vertexShader,fragmentShader:Bm.fragmentShader,blending:2,depthTest:!1,depthWrite:!1,transparent:!0}),this._oldClearColor=new Bn,this._oldClearAlpha=1,this._basic=new Gn,this._fsQuad=new Am(null)}dispose(){for(let e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(let e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose();for(let e=0;e<this.separableBlurMaterials.length;e++)this.separableBlurMaterials[e].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this._basic.dispose(),this._fsQuad.dispose()}setSize(e,t){let i=Math.round(e/2),n=Math.round(t/2);this.renderTargetBright.setSize(i,n);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(i,n),this.renderTargetsVertical[r].setSize(i,n),this.separableBlurMaterials[r].uniforms.invSize.value=new Gt(1/i,1/n),i=Math.round(i/2),n=Math.round(n/2)}render(e,t,i,n,r){e.getClearColor(this._oldClearColor),this._oldClearAlpha=e.getClearAlpha();const s=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),r&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this._fsQuad.material=this._basic,this._basic.map=i.texture,e.setRenderTarget(null),e.clear(),this._fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this._fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this._fsQuad.render(e);let a=this.renderTargetBright;for(let o=0;o<this.nMips;o++)this._fsQuad.material=this.separableBlurMaterials[o],this.separableBlurMaterials[o].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[o].uniforms.direction.value=Zm.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[o]),e.clear(),this._fsQuad.render(e),this.separableBlurMaterials[o].uniforms.colorTexture.value=this.renderTargetsHorizontal[o].texture,this.separableBlurMaterials[o].uniforms.direction.value=Zm.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[o]),e.clear(),this._fsQuad.render(e),a=this.renderTargetsVertical[o];this._fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this._fsQuad.render(e),this._fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this._fsQuad.render(e)):(e.setRenderTarget(i),this._fsQuad.render(e)),e.setClearColor(this._oldClearColor,this._oldClearAlpha),e.autoClear=s}_getSeparableBlurMaterial(e){const t=[];for(let i=0;i<e;i++)t.push(.39894*Math.exp(-.5*i*i/(e*e))/e);return new Rr({defines:{KERNEL_RADIUS:e},uniforms:{colorTexture:{value:null},invSize:{value:new Gt(.5,.5)},direction:{value:new Gt(.5,.5)},gaussianCoefficients:{value:t}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}_getCompositeMaterial(e){return new Rr({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"})}}Zm.BlurDirectionX=new Gt(1,0),Zm.BlurDirectionY=new Gt(0,1);const Qm={name:"FXAAShader",uniforms:{tDiffuse:{value:null},resolution:{value:new Gt(1/1024,1/512)}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec2 resolution;\n\t\tvarying vec2 vUv;\n\n\t\t#define EDGE_STEP_COUNT 6\n\t\t#define EDGE_GUESS 8.0\n\t\t#define EDGE_STEPS 1.0, 1.5, 2.0, 2.0, 2.0, 4.0\n\t\tconst float edgeSteps[EDGE_STEP_COUNT] = float[EDGE_STEP_COUNT]( EDGE_STEPS );\n\n\t\tfloat _ContrastThreshold = 0.0312;\n\t\tfloat _RelativeThreshold = 0.063;\n\t\tfloat _SubpixelBlending = 1.0;\n\n\t\tvec4 Sample( sampler2D  tex2D, vec2 uv ) {\n\n\t\t\treturn texture( tex2D, uv );\n\n\t\t}\n\n\t\tfloat SampleLuminance( sampler2D tex2D, vec2 uv ) {\n\n\t\t\treturn dot( Sample( tex2D, uv ).rgb, vec3( 0.3, 0.59, 0.11 ) );\n\n\t\t}\n\n\t\tfloat SampleLuminance( sampler2D tex2D, vec2 texSize, vec2 uv, float uOffset, float vOffset ) {\n\n\t\t\tuv += texSize * vec2(uOffset, vOffset);\n\t\t\treturn SampleLuminance(tex2D, uv);\n\n\t\t}\n\n\t\tstruct LuminanceData {\n\n\t\t\tfloat m, n, e, s, w;\n\t\t\tfloat ne, nw, se, sw;\n\t\t\tfloat highest, lowest, contrast;\n\n\t\t};\n\n\t\tLuminanceData SampleLuminanceNeighborhood( sampler2D tex2D, vec2 texSize, vec2 uv ) {\n\n\t\t\tLuminanceData l;\n\t\t\tl.m = SampleLuminance( tex2D, uv );\n\t\t\tl.n = SampleLuminance( tex2D, texSize, uv,  0.0,  1.0 );\n\t\t\tl.e = SampleLuminance( tex2D, texSize, uv,  1.0,  0.0 );\n\t\t\tl.s = SampleLuminance( tex2D, texSize, uv,  0.0, -1.0 );\n\t\t\tl.w = SampleLuminance( tex2D, texSize, uv, -1.0,  0.0 );\n\n\t\t\tl.ne = SampleLuminance( tex2D, texSize, uv,  1.0,  1.0 );\n\t\t\tl.nw = SampleLuminance( tex2D, texSize, uv, -1.0,  1.0 );\n\t\t\tl.se = SampleLuminance( tex2D, texSize, uv,  1.0, -1.0 );\n\t\t\tl.sw = SampleLuminance( tex2D, texSize, uv, -1.0, -1.0 );\n\n\t\t\tl.highest = max( max( max( max( l.n, l.e ), l.s ), l.w ), l.m );\n\t\t\tl.lowest = min( min( min( min( l.n, l.e ), l.s ), l.w ), l.m );\n\t\t\tl.contrast = l.highest - l.lowest;\n\t\t\treturn l;\n\n\t\t}\n\n\t\tbool ShouldSkipPixel( LuminanceData l ) {\n\n\t\t\tfloat threshold = max( _ContrastThreshold, _RelativeThreshold * l.highest );\n\t\t\treturn l.contrast < threshold;\n\n\t\t}\n\n\t\tfloat DeterminePixelBlendFactor( LuminanceData l ) {\n\n\t\t\tfloat f = 2.0 * ( l.n + l.e + l.s + l.w );\n\t\t\tf += l.ne + l.nw + l.se + l.sw;\n\t\t\tf *= 1.0 / 12.0;\n\t\t\tf = abs( f - l.m );\n\t\t\tf = clamp( f / l.contrast, 0.0, 1.0 );\n\n\t\t\tfloat blendFactor = smoothstep( 0.0, 1.0, f );\n\t\t\treturn blendFactor * blendFactor * _SubpixelBlending;\n\n\t\t}\n\n\t\tstruct EdgeData {\n\n\t\t\tbool isHorizontal;\n\t\t\tfloat pixelStep;\n\t\t\tfloat oppositeLuminance, gradient;\n\n\t\t};\n\n\t\tEdgeData DetermineEdge( vec2 texSize, LuminanceData l ) {\n\n\t\t\tEdgeData e;\n\t\t\tfloat horizontal =\n\t\t\t\tabs( l.n + l.s - 2.0 * l.m ) * 2.0 +\n\t\t\t\tabs( l.ne + l.se - 2.0 * l.e ) +\n\t\t\t\tabs( l.nw + l.sw - 2.0 * l.w );\n\t\t\tfloat vertical =\n\t\t\t\tabs( l.e + l.w - 2.0 * l.m ) * 2.0 +\n\t\t\t\tabs( l.ne + l.nw - 2.0 * l.n ) +\n\t\t\t\tabs( l.se + l.sw - 2.0 * l.s );\n\t\t\te.isHorizontal = horizontal >= vertical;\n\n\t\t\tfloat pLuminance = e.isHorizontal ? l.n : l.e;\n\t\t\tfloat nLuminance = e.isHorizontal ? l.s : l.w;\n\t\t\tfloat pGradient = abs( pLuminance - l.m );\n\t\t\tfloat nGradient = abs( nLuminance - l.m );\n\n\t\t\te.pixelStep = e.isHorizontal ? texSize.y : texSize.x;\n\n\t\t\tif (pGradient < nGradient) {\n\n\t\t\t\te.pixelStep = -e.pixelStep;\n\t\t\t\te.oppositeLuminance = nLuminance;\n\t\t\t\te.gradient = nGradient;\n\n\t\t\t} else {\n\n\t\t\t\te.oppositeLuminance = pLuminance;\n\t\t\t\te.gradient = pGradient;\n\n\t\t\t}\n\n\t\t\treturn e;\n\n\t\t}\n\n\t\tfloat DetermineEdgeBlendFactor( sampler2D  tex2D, vec2 texSize, LuminanceData l, EdgeData e, vec2 uv ) {\n\n\t\t\tvec2 uvEdge = uv;\n\t\t\tvec2 edgeStep;\n\t\t\tif (e.isHorizontal) {\n\n\t\t\t\tuvEdge.y += e.pixelStep * 0.5;\n\t\t\t\tedgeStep = vec2( texSize.x, 0.0 );\n\n\t\t\t} else {\n\n\t\t\t\tuvEdge.x += e.pixelStep * 0.5;\n\t\t\t\tedgeStep = vec2( 0.0, texSize.y );\n\n\t\t\t}\n\n\t\t\tfloat edgeLuminance = ( l.m + e.oppositeLuminance ) * 0.5;\n\t\t\tfloat gradientThreshold = e.gradient * 0.25;\n\n\t\t\tvec2 puv = uvEdge + edgeStep * edgeSteps[0];\n\t\t\tfloat pLuminanceDelta = SampleLuminance( tex2D, puv ) - edgeLuminance;\n\t\t\tbool pAtEnd = abs( pLuminanceDelta ) >= gradientThreshold;\n\n\t\t\tfor ( int i = 1; i < EDGE_STEP_COUNT && !pAtEnd; i++ ) {\n\n\t\t\t\tpuv += edgeStep * edgeSteps[i];\n\t\t\t\tpLuminanceDelta = SampleLuminance( tex2D, puv ) - edgeLuminance;\n\t\t\t\tpAtEnd = abs( pLuminanceDelta ) >= gradientThreshold;\n\n\t\t\t}\n\n\t\t\tif ( !pAtEnd ) {\n\n\t\t\t\tpuv += edgeStep * EDGE_GUESS;\n\n\t\t\t}\n\n\t\t\tvec2 nuv = uvEdge - edgeStep * edgeSteps[0];\n\t\t\tfloat nLuminanceDelta = SampleLuminance( tex2D, nuv ) - edgeLuminance;\n\t\t\tbool nAtEnd = abs( nLuminanceDelta ) >= gradientThreshold;\n\n\t\t\tfor ( int i = 1; i < EDGE_STEP_COUNT && !nAtEnd; i++ ) {\n\n\t\t\t\tnuv -= edgeStep * edgeSteps[i];\n\t\t\t\tnLuminanceDelta = SampleLuminance( tex2D, nuv ) - edgeLuminance;\n\t\t\t\tnAtEnd = abs( nLuminanceDelta ) >= gradientThreshold;\n\n\t\t\t}\n\n\t\t\tif ( !nAtEnd ) {\n\n\t\t\t\tnuv -= edgeStep * EDGE_GUESS;\n\n\t\t\t}\n\n\t\t\tfloat pDistance, nDistance;\n\t\t\tif ( e.isHorizontal ) {\n\n\t\t\t\tpDistance = puv.x - uv.x;\n\t\t\t\tnDistance = uv.x - nuv.x;\n\n\t\t\t} else {\n\n\t\t\t\tpDistance = puv.y - uv.y;\n\t\t\t\tnDistance = uv.y - nuv.y;\n\n\t\t\t}\n\n\t\t\tfloat shortestDistance;\n\t\t\tbool deltaSign;\n\t\t\tif ( pDistance <= nDistance ) {\n\n\t\t\t\tshortestDistance = pDistance;\n\t\t\t\tdeltaSign = pLuminanceDelta >= 0.0;\n\n\t\t\t} else {\n\n\t\t\t\tshortestDistance = nDistance;\n\t\t\t\tdeltaSign = nLuminanceDelta >= 0.0;\n\n\t\t\t}\n\n\t\t\tif ( deltaSign == ( l.m - edgeLuminance >= 0.0 ) ) {\n\n\t\t\t\treturn 0.0;\n\n\t\t\t}\n\n\t\t\treturn 0.5 - shortestDistance / ( pDistance + nDistance );\n\n\t\t}\n\n\t\tvec4 ApplyFXAA( sampler2D  tex2D, vec2 texSize, vec2 uv ) {\n\n\t\t\tLuminanceData luminance = SampleLuminanceNeighborhood( tex2D, texSize, uv );\n\t\t\tif ( ShouldSkipPixel( luminance ) ) {\n\n\t\t\t\treturn Sample( tex2D, uv );\n\n\t\t\t}\n\n\t\t\tfloat pixelBlend = DeterminePixelBlendFactor( luminance );\n\t\t\tEdgeData edge = DetermineEdge( texSize, luminance );\n\t\t\tfloat edgeBlend = DetermineEdgeBlendFactor( tex2D, texSize, luminance, edge, uv );\n\t\t\tfloat finalBlend = max( pixelBlend, edgeBlend );\n\n\t\t\tif (edge.isHorizontal) {\n\n\t\t\t\tuv.y += edge.pixelStep * finalBlend;\n\n\t\t\t} else {\n\n\t\t\t\tuv.x += edge.pixelStep * finalBlend;\n\n\t\t\t}\n\n\t\t\treturn Sample( tex2D, uv );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = ApplyFXAA( tDiffuse, resolution.xy, vUv );\n\n\t\t}"};class Jm{static createButton(e,t={}){const i=document.createElement("button");function n(){i.style.display="",i.style.cursor="auto",i.style.left="calc(50% - 75px)",i.style.width="150px",i.onmouseenter=null,i.onmouseleave=null,i.onclick=null}function r(e){e.style.position="absolute",e.style.bottom="20px",e.style.padding="12px 6px",e.style.border="1px solid #fff",e.style.borderRadius="4px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 13px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return i.id="VRButton",i.style.display="none",r(i),navigator.xr.isSessionSupported("immersive-vr").then((function(r){r?function(){let n=null;async function r(t){t.addEventListener("end",s),await e.xr.setSession(t),i.textContent="EXIT VR",n=t}function s(){n.removeEventListener("end",s),i.textContent="ENTER VR",n=null}i.style.display="",i.style.cursor="pointer",i.style.left="calc(50% - 50px)",i.style.width="100px",i.textContent="ENTER VR";const a={...t,optionalFeatures:["local-floor","bounded-floor","layers",...t.optionalFeatures||[]]};i.onmouseenter=function(){i.style.opacity="1.0"},i.onmouseleave=function(){i.style.opacity="0.5"},i.onclick=function(){null===n?navigator.xr.requestSession("immersive-vr",a).then(r):(n.end(),void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch((e=>{})))},void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch((e=>{}))}():(n(),i.textContent="VR NOT SUPPORTED"),r&&Jm.xrSessionIsGranted&&i.click()})).catch((function(e){n(),i.textContent="VR NOT ALLOWED"})),i;{const e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",r(e),e}}static registerSessionGrantedListener(){if("undefined"!=typeof navigator&&"xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",(()=>{Jm.xrSessionIsGranted=!0}))}}}Jm.xrSessionIsGranted=!1,Jm.registerSessionGrantedListener();var ef=Object.freeze({Linear:Object.freeze({None:function(e){return e},In:function(e){return this.None(e)},Out:function(e){return this.None(e)},InOut:function(e){return this.None(e)}}),Quadratic:Object.freeze({In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}}),Cubic:Object.freeze({In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}}),Quartic:Object.freeze({In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}}),Quintic:Object.freeze({In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}}),Sinusoidal:Object.freeze({In:function(e){return 1-Math.sin((1-e)*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.sin(Math.PI*(.5-e)))}}),Exponential:Object.freeze({In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}}),Circular:Object.freeze({In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}}),Elastic:Object.freeze({In:function(e){return 0===e?0:1===e?1:-Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)},Out:function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin(5*(e-.1)*Math.PI)+1},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)+1}}),Back:Object.freeze({In:function(e){var t=1.70158;return 1===e?1:e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return 0===e?0:--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}}),Bounce:Object.freeze({In:function(e){return 1-ef.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*ef.Bounce.In(2*e):.5*ef.Bounce.Out(2*e-1)+.5}}),generatePow:function(e){return void 0===e&&(e=4),e=(e=e<Number.EPSILON?Number.EPSILON:e)>1e4?1e4:e,{In:function(t){return Math.pow(t,e)},Out:function(t){return 1-Math.pow(1-t,e)},InOut:function(t){return t<.5?Math.pow(2*t,e)/2:(1-Math.pow(2-2*t,e))/2+.5}}}}),tf=function(){return performance.now()},nf=function(){function e(){this._tweens={},this._tweensAddedDuringUpdate={}}return e.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map((function(t){return e._tweens[t]}))},e.prototype.removeAll=function(){this._tweens={}},e.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},e.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},e.prototype.update=function(e,t){void 0===e&&(e=tf()),void 0===t&&(t=!1);var i=Object.keys(this._tweens);if(0===i.length)return!1;for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var n=0;n<i.length;n++){var r=this._tweens[i[n]],s=!t;r&&!1===r.update(e,s)&&!t&&delete this._tweens[i[n]]}i=Object.keys(this._tweensAddedDuringUpdate)}return!0},e}(),rf={Linear:function(e,t){var i=e.length-1,n=i*t,r=Math.floor(n),s=rf.Utils.Linear;return t<0?s(e[0],e[1],n):t>1?s(e[i],e[i-1],i-n):s(e[r],e[r+1>i?i:r+1],n-r)},Bezier:function(e,t){for(var i=0,n=e.length-1,r=Math.pow,s=rf.Utils.Bernstein,a=0;a<=n;a++)i+=r(1-t,n-a)*r(t,a)*e[a]*s(n,a);return i},CatmullRom:function(e,t){var i=e.length-1,n=i*t,r=Math.floor(n),s=rf.Utils.CatmullRom;return e[0]===e[i]?(t<0&&(r=Math.floor(n=i*(1+t))),s(e[(r-1+i)%i],e[r],e[(r+1)%i],e[(r+2)%i],n-r)):t<0?e[0]-(s(e[0],e[0],e[1],e[1],-n)-e[0]):t>1?e[i]-(s(e[i],e[i],e[i-1],e[i-1],n-i)-e[i]):s(e[r?r-1:0],e[r],e[i<r+1?i:r+1],e[i<r+2?i:r+2],n-r)},Utils:{Linear:function(e,t,i){return(t-e)*i+e},Bernstein:function(e,t){var i=rf.Utils.Factorial;return i(e)/i(t)/i(e-t)},Factorial:function(){var e=[1];return function(t){var i=1;if(e[t])return e[t];for(var n=t;n>1;n--)i*=n;return e[t]=i,i}}(),CatmullRom:function(e,t,i,n,r){var s=.5*(i-e),a=.5*(n-t),o=r*r;return(2*t-2*i+s+a)*(r*o)+(-3*t+3*i-2*s-a)*o+s*r+t}}},sf=function(){function e(){}return e.nextId=function(){return e._nextId++},e._nextId=0,e}(),af=new nf,of=function(){function e(e,t){void 0===t&&(t=af),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=ef.Linear.None,this._interpolationFunction=rf.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=sf.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return e.prototype.getId=function(){return this._id},e.prototype.isPlaying=function(){return this._isPlaying},e.prototype.isPaused=function(){return this._isPaused},e.prototype.getDuration=function(){return this._duration},e.prototype.to=function(e,t){if(void 0===t&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},e.prototype.duration=function(e){return void 0===e&&(e=1e3),this._duration=e<0?0:e,this},e.prototype.dynamic=function(e){return void 0===e&&(e=!1),this._isDynamic=e,this},e.prototype.start=function(e,t){if(void 0===e&&(e=tf()),void 0===t&&(t=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed)for(var i in this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i];if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var n={};for(var r in this._valuesEnd)n[r]=this._valuesEnd[r];this._valuesEnd=n}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},e.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},e.prototype._setupProperties=function(e,t,i,n,r){for(var s in i){var a=e[s],o=Array.isArray(a),l=o?"array":typeof a,u=!o&&Array.isArray(i[s]);if("undefined"!==l&&"function"!==l){if(u){if(0===(g=i[s]).length)continue;for(var c=[a],h=0,d=g.length;h<d;h+=1){var p=this._handleRelativeValue(a,g[h]);if(isNaN(p)){u=!1;break}c.push(p)}u&&(i[s]=c)}if("object"!==l&&!o||!a||u)(void 0===t[s]||r)&&(t[s]=a),o||(t[s]*=1),n[s]=u?i[s].slice().reverse():t[s]||0;else{t[s]=o?[]:{};var m=a;for(var f in m)t[s][f]=m[f];n[s]=o?[]:{};var g=i[s];if(!this._isDynamic){var _={};for(var f in g)_[f]=g[f];i[s]=g=_}this._setupProperties(m,t[s],g,n[s],r)}}}},e.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},e.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},e.prototype.pause=function(e){return void 0===e&&(e=tf()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this)),this},e.prototype.resume=function(e){return void 0===e&&(e=tf()),this._isPaused&&this._isPlaying?(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this):this},e.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},e.prototype.group=function(e){return void 0===e&&(e=af),this._group=e,this},e.prototype.delay=function(e){return void 0===e&&(e=0),this._delayTime=e,this},e.prototype.repeat=function(e){return void 0===e&&(e=0),this._initialRepeat=e,this._repeat=e,this},e.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},e.prototype.yoyo=function(e){return void 0===e&&(e=!1),this._yoyo=e,this},e.prototype.easing=function(e){return void 0===e&&(e=ef.Linear.None),this._easingFunction=e,this},e.prototype.interpolation=function(e){return void 0===e&&(e=rf.Linear),this._interpolationFunction=e,this},e.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},e.prototype.onStart=function(e){return this._onStartCallback=e,this},e.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},e.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},e.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},e.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},e.prototype.onStop=function(e){return this._onStopCallback=e,this},e.prototype.update=function(e,t){var i,n,r=this;if(void 0===e&&(e=tf()),void 0===t&&(t=!0),this._isPaused)return!0;var s=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>s)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),!1===this._onEveryStartCallbackFired&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var a=e-this._startTime,o=this._duration+(null!==(i=this._repeatDelayTime)&&void 0!==i?i:this._delayTime),l=this._duration+this._repeat*o,u=function(){if(0===r._duration)return 1;if(a>l)return 1;var e=Math.trunc(a/o),t=a-e*o,i=Math.min(t/r._duration,1);return 0===i&&a===r._duration?1:i}(),c=this._easingFunction(u);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,c),this._onUpdateCallback&&this._onUpdateCallback(this._object,u),0===this._duration||a>=this._duration){if(this._repeat>0){var h=Math.min(Math.trunc((a-this._duration)/o)+1,this._repeat);for(n in isFinite(this._repeat)&&(this._repeat-=h),this._valuesStartRepeat)this._yoyo||"string"!=typeof this._valuesEnd[n]||(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=o*h,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var d=0,p=this._chainedTweens.length;d<p;d++)this._chainedTweens[d].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},e.prototype._updateProperties=function(e,t,i,n){for(var r in i)if(void 0!==t[r]){var s=t[r]||0,a=i[r],o=Array.isArray(e[r]),l=Array.isArray(a);!o&&l?e[r]=this._interpolationFunction(a,n):"object"==typeof a&&a?this._updateProperties(e[r],s,a,n):"number"==typeof(a=this._handleRelativeValue(s,a))&&(e[r]=s+(a-s)*n)}},e.prototype._handleRelativeValue=function(e,t){return"string"!=typeof t?t:"+"===t.charAt(0)||"-"===t.charAt(0)?e+parseFloat(t):parseFloat(t)},e.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],i=this._valuesEnd[e];this._valuesStartRepeat[e]="string"==typeof i?this._valuesStartRepeat[e]+parseFloat(i):this._valuesEnd[e],this._valuesEnd[e]=t},e}(),lf=sf.nextId,uf=af,cf=uf.getAll.bind(uf),hf=uf.removeAll.bind(uf),df=uf.add.bind(uf),pf=uf.remove.bind(uf),mf=uf.update.bind(uf),ff={Easing:ef,Group:nf,Interpolation:rf,now:tf,Sequence:sf,nextId:lf,Tween:of,VERSION:"23.1.1",getAll:cf,removeAll:hf,add:df,remove:pf,update:mf};
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const gf=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class _f{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=!0===e.object.isSkinnedMesh,this.refreshUniforms=gf,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}needsVelocity(e){const t=e.getMRT();return null!==t&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(void 0===t){const{geometry:i,material:n,object:r}=e;if(t={material:this.getMaterialData(n),geometry:{id:i.id,attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),null!==e.bundle&&(t.version=e.bundle.version),t.material.transmission>0){const{width:i,height:n}=e.context;t.bufferWidth=i,t.bufferHeight=n}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const i in e){const n=e[i];t[i]={version:n.version}}return t}containsNode(e){const t=e.material;for(const i in t)if(t[i]&&t[i].isNode)return!0;return null!==e.renderer.overrideNodes.modelViewMatrix||null!==e.renderer.overrideNodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const i of this.refreshUniforms){const n=e[i];null!=n&&("object"==typeof n&&void 0!==n.clone?!0===n.isTexture?t[i]={id:n.id,version:n.version}:t[i]=n.clone():t[i]=n)}return t}equals(e){const{object:t,material:i,geometry:n}=e,r=this.getRenderObjectData(e);if(!0!==r.worldMatrix.equals(t.matrixWorld))return r.worldMatrix.copy(t.matrixWorld),!1;const s=r.material;for(const m in s){const e=s[m],t=i[m];if(void 0!==e.equals){if(!1===e.equals(t))return e.copy(t),!1}else if(!0===t.isTexture){if(e.id!==t.id||e.version!==t.version)return e.id=t.id,e.version=t.version,!1}else if(e!==t)return s[m]=t,!1}if(s.transmission>0){const{width:t,height:i}=e.context;if(r.bufferWidth!==t||r.bufferHeight!==i)return r.bufferWidth=t,r.bufferHeight=i,!1}const a=r.geometry,o=n.attributes,l=a.attributes,u=Object.keys(l),c=Object.keys(o);if(a.id!==n.id)return a.id=n.id,!1;if(u.length!==c.length)return r.geometry.attributes=this.getAttributesData(o),!1;for(const m of u){const e=l[m],t=o[m];if(void 0===t)return delete l[m],!1;if(e.version!==t.version)return e.version=t.version,!1}const h=n.index,d=a.indexVersion,p=h?h.version:null;if(d!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==n.drawRange.start||a.drawRange.count!==n.drawRange.count)return a.drawRange.start=n.drawRange.start,a.drawRange.count=n.drawRange.count,!1;if(r.morphTargetInfluences){let e=!1;for(let i=0;i<r.morphTargetInfluences.length;i++)r.morphTargetInfluences[i]!==t.morphTargetInfluences[i]&&(e=!0);if(e)return!0}return r.center&&!1===r.center.equals(t.center)?(r.center.copy(t.center),!0):(null!==e.bundle&&(r.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:i}=t;if(this.renderId!==i)return this.renderId=i,!0;const n=!0===e.object.static,r=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(n||r)return!1;return!0!==this.equals(e)}}function vf(e,t=0){let i=3735928559^t,n=1103547991^t;if(e instanceof Array)for(let r,s=0;s<e.length;s++)r=e[s],i=Math.imul(i^r,2654435761),n=Math.imul(n^r,1597334677);else for(let r,s=0;s<e.length;s++)r=e.charCodeAt(s),i=Math.imul(i^r,2654435761),n=Math.imul(n^r,1597334677);return i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(i^i>>>13,3266489909),4294967296*(2097151&n)+(i>>>0)}const xf=e=>vf(e),yf=e=>vf(e),bf=(...e)=>vf(e);function Tf(e,t=!1){const i=[];!0===e.isNode&&(i.push(e.id),e=e.getSelf());for(const{property:n,childNode:r}of Sf(e))i.push(vf(n.slice(0,-4)),r.getCacheKey(t));return vf(i)}function*Sf(e,t=!1){for(const i in e){if(!0===i.startsWith("_"))continue;const n=e[i];if(!0===Array.isArray(n))for(let e=0;e<n.length;e++){const r=n[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:i,index:e,childNode:r})}else if(n&&!0===n.isNode)yield{property:i,childNode:n};else if("object"==typeof n)for(const e in n){const r=n[e];r&&(!0===r.isNode||t&&"function"==typeof r.toJSON)&&(yield{property:i,index:e,childNode:r})}}}const Mf=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),wf=new WeakMap;function Ef(e){return Mf.get(e)}function Af(e){if(/[iu]?vec\d/.test(e))return e.startsWith("ivec")?Int32Array:e.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(e))return Float32Array;if(/float/.test(e))return Float32Array;if(/uint/.test(e))return Uint32Array;if(/int/.test(e))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${e}`)}function Rf(e){return/float|int|uint/.test(e)?1:/vec2/.test(e)?2:/vec3/.test(e)?3:/vec4/.test(e)||/mat2/.test(e)?4:/mat3/.test(e)?9:/mat4/.test(e)?16:void 0}function Cf(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix2?"mat2":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function Nf(e,...t){const i=e?e.slice(-4):void 0;return 1===t.length&&("vec2"===i?t=[t[0],t[0]]:"vec3"===i?t=[t[0],t[0],t[0]]:"vec4"===i&&(t=[t[0],t[0],t[0],t[0]])),"color"===e?new Bn(...t):"vec2"===i?new Gt(...t):"vec3"===i?new fi(...t):"vec4"===i?new ui(...t):"mat2"===i?new gu(...t):"mat3"===i?new Ht(...t):"mat4"===i?new ji(...t):"bool"===e?t[0]||!1:"float"===e||"int"===e||"uint"===e?t[0]||0:"string"===e?t[0]||"":"ArrayBuffer"===e?If(t[0]):null}function Pf(e){let t=wf.get(e);return void 0===t&&(t={},wf.set(e,t)),t}function Lf(e){let t="";const i=new Uint8Array(e);for(let n=0;n<i.length;n++)t+=String.fromCharCode(i[n]);return btoa(t)}function If(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}const Df={VERTEX:"vertex",FRAGMENT:"fragment"},Uf={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Ff={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},Of=["fragment","vertex"],Bf=["setup","analyze","generate"],Vf=[...Of,"compute"],zf=["x","y","z","w"];let kf=0;class Gf extends Nt{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Uf.NONE,this.updateBeforeType=Uf.NONE,this.updateAfterType=Uf.NONE,this.uuid=kt.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:kf++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,Uf.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Uf.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Uf.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Sf(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=bf(Tf(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let i=0;for(const n of this.getChildren())t["node"+i++]=n;return t.outputNode||null}analyze(e){if(1===e.increaseUsage(this)){const t=e.getNodeProperties(this);for(const i of Object.values(t))i&&!0===i.isNode&&i.build(e)}}generate(e,t){const{outputNode:i}=e.getNodeProperties(this);if(i&&!0===i.isNode)return i.build(e,t)}updateBefore(){}updateAfter(){}update(){}build(e,t=null){const i=this.getShared(e);if(this!==i)return i.build(e,t);e.addNode(this),e.addChain(this);let n=null;const r=e.getBuildStage();if("setup"===r){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){t.initialized=!0;const i=this.setup(e),n=i&&!0===i.isNode;for(const r of Object.values(t))if(r&&!0===r.isNode){if(!0===r.parents){const t=e.getNodeProperties(r);t.parents=t.parents||[],t.parents.push(this)}r.build(e)}n&&i.build(e),t.outputNode=i}n=t.outputNode||null}else if("analyze"===r)this.analyze(e);else if("generate"===r){if(1===this.generate.length){const i=this.getNodeType(e),r=e.getDataFromNode(this);n=r.snippet,void 0===n?void 0===r.generated?(r.generated=!0,n=this.generate(e)||"",r.snippet=n):n="":void 0!==r.flowCodes&&void 0!==e.context.nodeBlock&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),n=e.format(n,i,t)}else n=this.generate(e,t)||""}return e.removeChain(this),e.addSequentialNode(this),n}getSerializeChildren(){return Sf(this)}serialize(e){const t=this.getSerializeChildren(),i={};for(const{property:n,index:r,childNode:s}of t)void 0!==r?(void 0===i[n]&&(i[n]=Number.isInteger(r)?[]:{}),i[n][r]=s.toJSON(e.meta).uuid):i[n]=s.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const n=[];for(const r of e.inputNodes[i])n.push(t[r]);this[i]=n}else if("object"==typeof e.inputNodes[i]){const n={};for(const r in e.inputNodes[i]){const s=e.inputNodes[i][r];n[r]=t[s]}this[i]=n}else{const n=e.inputNodes[i];this[i]=t[n]}}}toJSON(e){const{uuid:t,type:i}=this,n=void 0===e||"string"==typeof e;n&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];function s(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}if(void 0===r&&(r={uuid:t,type:i,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==n&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta),n){const t=s(e.textures),i=s(e.images),n=s(e.nodes);t.length>0&&(r.textures=t),i.length>0&&(r.images=i),n.length>0&&(r.nodes=n)}return r}}class Hf extends Gf{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e);return`${this.node.build(e)}[ ${this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint")} ]`}}class Wf extends Gf{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let i=null;for(const n of this.convertTo.split("|"))null!==i&&e.getTypeLength(t)!==e.getTypeLength(n)||(i=n);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const i=this.node,n=this.getNodeType(e),r=i.build(e,n);return e.format(r,n,t)}}class jf extends Gf{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const i=e.getVectorType(this.getNodeType(e,t)),n=e.getDataFromNode(this);if(void 0!==n.propertyName)return e.format(n.propertyName,i,t);if("void"!==i&&"void"!==t&&this.hasDependencies(e)){const r=super.build(e,i),s=e.getVarFromNode(this,null,i),a=e.getPropertyName(s);return e.addLineFlowCode(`${a} = ${r}`,this),n.snippet=r,n.propertyName=a,e.format(n.propertyName,i,t)}}return super.build(e,t)}}class Xf extends jf{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,i)=>t+e.getTypeLength(i.getNodeType(e))),0))}generate(e,t){const i=this.getNodeType(e),n=e.getTypeLength(i),r=this.nodes,s=e.getComponentType(i),a=[];let o=0;for(const u of r){if(o>=n)break;let t,i=u.getNodeType(e),r=e.getTypeLength(i);o+r>n&&(r=n-o,i=e.getTypeFromLength(r)),o+=r,t=u.build(e,i);const l=e.getComponentType(i);l!==s&&(t=e.format(t,l,s)),a.push(t)}const l=`${e.getType(i)}( ${a.join(", ")} )`;return e.format(l,i,t)}}const $f=zf.join("");class qf extends Gf{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(zf.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const i=this.node,n=e.getTypeLength(i.getNodeType(e));let r=null;if(n>1){let s=null;this.getVectorLength()>=n&&(s=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const a=i.build(e,s);r=this.components.length===n&&this.components===$f.slice(0,this.components.length)?e.format(a,s,t):e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else r=i.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class Yf extends jf{static get type(){return"SetNode"}constructor(e,t,i){super(),this.sourceNode=e,this.components=t,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:i,targetNode:n}=this,r=this.getNodeType(e),s=e.getComponentType(n.getNodeType(e)),a=e.getTypeFromLength(i.length,s),o=n.build(e,a),l=t.build(e,r),u=e.getTypeLength(r),c=[];for(let h=0;h<u;h++){const e=zf[h];e===i[0]?(c.push(o),h+=i.length-1):c.push(l+"."+e)}return`${e.getType(r)}( ${c.join(", ")} )`}}class Kf extends jf{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:i}=this,n=this.getNodeType(e),r=i.build(e),s=e.getVarFromNode(this),a=e.getPropertyName(s);e.addLineFlowCode(a+" = "+r,this);const o=e.getTypeLength(n),l=[];let u=0;for(let c=0;c<o;c++){const e=zf[c];e===t[u]?(l.push("1.0 - "+a+"."+e),u++):l.push(a+"."+e)}return`${e.getType(n)}( ${l.join(", ")} )`}}class Zf extends Gf{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?Cf(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Cf(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=Lf(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Nf(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){}}const Qf=/float|u?int/;class Jf extends Zf{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const i=this.getNodeType(e);return Qf.test(i)&&Qf.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),i,t)}}class eg extends Gf{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let tg=null;const ig=new Map;function ng(e,t){if(!ig.has(e)){if("function"!=typeof t)throw new Error(`THREE.TSL: Node element ${e} is not a function`);ig.set(e,t)}}const rg=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),sg=e=>rg(e).split("").sort().join(""),ag={setup(e,t){const i=t.shift();return e(Pg(i),...t)},get(e,t,i){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(tg.assign(i,...e),i);if(ig.has(t)){const n=ig.get(t);return e.isStackNode?(...e)=>i.add(n(...e)):(...e)=>n(i,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&ig.has(t.slice(0,t.length-6))){const n=ig.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>i.assign(e[0],n(...e)):(...e)=>i.assign(n(i,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=rg(t),Ng(new qf(i,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=sg(t.slice(3).toLowerCase()),i=>Ng(new Yf(e,t,i));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=sg(t.slice(4).toLowerCase()),()=>Ng(new Kf(Ng(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),Ng(new qf(e,t));if(!0===/^\d+$/.test(t))return Ng(new Hf(i,new Jf(Number(t),"uint")));if(!0===/^get$/.test(t))return e=>Ng(new eg(i,e))}return Reflect.get(e,t,i)},set:(e,t,i,n)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,i,n):(n[t].assign(i),!0)},og=new WeakMap,lg=new WeakMap,ug=function(e,t=null){for(const i in e)e[i]=Ng(e[i],t);return e},cg=function(e,t=null){const i=e.length;for(let n=0;n<i;n++)e[n]=Ng(e[n],t);return e},hg=function(e,t=null,i=null,n=null){const r=e=>Ng(null!==n?Object.assign(e,n):e);let s,a,o,l=t;function u(t){let i;return i=l?/[a-z]/i.test(l)?l+"()":l:e.type,void 0!==a&&t.length<a?t.concat(new Array(a-t.length).fill(0)):void 0!==o&&t.length>o?t.slice(0,o):t}return null===t?s=(...t)=>r(new e(...Lg(u(t)))):null!==i?(i=Ng(i),s=(...n)=>r(new e(t,...Lg(u(n)),i))):s=(...i)=>r(new e(t,...Lg(u(i)))),s.setParameterLength=(...e)=>(1===e.length?a=o=e[0]:2===e.length&&([a,o]=e),s),s.setName=e=>(l=e,s),s},dg=function(e,...t){return Ng(new e(...Lg(t)))};class pg extends Gf{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:i}=this,n=e.getNodeProperties(t);if(n.onceOutput)return n.onceOutput;let r=null;if(t.layout){let n=lg.get(e.constructor);void 0===n&&(n=new WeakMap,lg.set(e.constructor,n));let s=n.get(t);void 0===s&&(s=Ng(e.buildFunctionNode(t)),n.set(t,s)),e.addInclude(s),r=Ng(s.call(i))}else{const n=t.jsFunc,s=null!==i||n.length>1?n(i||[],e):n(e);r=Ng(s)}return t.once&&(n.onceOutput=r),r}getOutputNode(e){const t=e.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class mg extends Gf{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Pg(e),Ng(new pg(this,e))}setup(){return this.call()}}const fg=[!1,!0],gg=[0,1,2,3],_g=[-1,-2],vg=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],xg=new Map;for(const fV of fg)xg.set(fV,new Jf(fV));const yg=new Map;for(const fV of gg)yg.set(fV,new Jf(fV,"uint"));const bg=new Map([...yg].map((e=>new Jf(e.value,"int"))));for(const fV of _g)bg.set(fV,new Jf(fV,"int"));const Tg=new Map([...bg].map((e=>new Jf(e.value))));for(const fV of vg)Tg.set(fV,new Jf(fV));for(const fV of vg)Tg.set(-fV,new Jf(-fV));const Sg={bool:xg,uint:yg,ints:bg,float:Tg},Mg=new Map([...xg,...Tg]),wg=(e,t)=>Mg.has(e)?Mg.get(e):!0===e.isNode?e:new Jf(e,t),Eg=function(e,t=null){return(...i)=>{if((0===i.length||!["bool","float","int","uint"].includes(e)&&i.every((e=>"object"!=typeof e)))&&(i=[Nf(e,...i)]),1===i.length&&null!==t&&t.has(i[0]))return Ng(t.get(i[0]));if(1===i.length){const t=wg(i[0],e);return(e=>{try{return e.getNodeType()}catch(t){return}})(t)===e?Ng(t):Ng(new Wf(t,e))}const n=i.map((e=>wg(e)));return Ng(new Xf(n,e))}},Ag=e=>"object"==typeof e&&null!==e?e.value:e,Rg=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function Cg(e,t){return new Proxy(new mg(e,t),ag)}const Ng=(e,t=null)=>function(e,t=null){const i=Cf(e);if("node"===i){let t=og.get(e);return void 0===t&&(t=new Proxy(e,ag),og.set(e,t),og.set(t,t)),t}return null===t&&("float"===i||"boolean"===i)||i&&"shader"!==i&&"string"!==i?Ng(wg(e,t)):"shader"===i?Fg(e):e}(e,t),Pg=(e,t=null)=>new ug(e,t),Lg=(e,t=null)=>new cg(e,t),Ig=(...e)=>new hg(...e),Dg=(...e)=>new dg(...e);let Ug=0;const Fg=(e,t=null)=>{let i=null;null!==t&&("object"==typeof t?i=t.return:("string"==typeof t&&(i=t),t=null));const n=new Cg(e,i),r=(...e)=>{let t;Pg(e),t=e[0]&&e[0].isNode?[...e]:e[0];const r=n.call(t);return"void"===i&&r.toStack(),r};if(r.shaderNode=n,r.setLayout=e=>(n.setLayout(e),r),r.once=()=>(n.once=!0,r),null!==t){if("object"!=typeof t.inputs){const e={name:"fn"+Ug++,type:i,inputs:[]};for(const i in t)"return"!==i&&e.inputs.push({name:i,type:t[i]});t=e}r.setLayout(t)}return r};ng("toGlobal",(e=>(e.global=!0,e)));const Og=e=>{tg=e},Bg=()=>tg,Vg=(...e)=>tg.If(...e);function zg(e){return tg&&tg.add(e),e}ng("toStack",zg);const kg=new Eg("color"),Gg=new Eg("float",Sg.float),Hg=new Eg("int",Sg.ints),Wg=new Eg("uint",Sg.uint),jg=new Eg("bool",Sg.bool),Xg=new Eg("vec2"),$g=new Eg("ivec2"),qg=new Eg("uvec2"),Yg=new Eg("bvec2"),Kg=new Eg("vec3"),Zg=new Eg("ivec3"),Qg=new Eg("uvec3"),Jg=new Eg("bvec3"),e_=new Eg("vec4"),t_=new Eg("ivec4"),i_=new Eg("uvec4"),n_=new Eg("bvec4"),r_=new Eg("mat2"),s_=new Eg("mat3"),a_=new Eg("mat4");ng("toColor",kg),ng("toFloat",Gg),ng("toInt",Hg),ng("toUint",Wg),ng("toBool",jg),ng("toVec2",Xg),ng("toIVec2",$g),ng("toUVec2",qg),ng("toBVec2",Yg),ng("toVec3",Kg),ng("toIVec3",Zg),ng("toUVec3",Qg),ng("toBVec3",Jg),ng("toVec4",e_),ng("toIVec4",t_),ng("toUVec4",i_),ng("toBVec4",n_),ng("toMat2",r_),ng("toMat3",s_),ng("toMat4",a_);const o_=Ig(Hf).setParameterLength(2),l_=(e,t)=>Ng(new Wf(Ng(e),t));ng("element",o_),ng("convert",l_);ng("append",(e=>zg(e)));class u_ extends Gf{static get type(){return"PropertyNode"}constructor(e,t=null,i=!1){super(e),this.name=t,this.varying=i,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const c_=(e,t)=>Ng(new u_(e,t)),h_=(e,t)=>Ng(new u_(e,t,!0)),d_=Dg(u_,"vec4","DiffuseColor"),p_=Dg(u_,"vec3","EmissiveColor"),m_=Dg(u_,"float","Roughness"),f_=Dg(u_,"float","Metalness"),g_=Dg(u_,"float","Clearcoat"),__=Dg(u_,"float","ClearcoatRoughness"),v_=Dg(u_,"vec3","Sheen"),x_=Dg(u_,"float","SheenRoughness"),y_=Dg(u_,"float","Iridescence"),b_=Dg(u_,"float","IridescenceIOR"),T_=Dg(u_,"float","IridescenceThickness"),S_=Dg(u_,"float","AlphaT"),M_=Dg(u_,"float","Anisotropy"),w_=Dg(u_,"vec3","AnisotropyT"),E_=Dg(u_,"vec3","AnisotropyB"),A_=Dg(u_,"color","SpecularColor"),R_=Dg(u_,"float","SpecularF90"),C_=Dg(u_,"float","Shininess"),N_=Dg(u_,"vec4","Output"),P_=Dg(u_,"float","dashSize"),L_=Dg(u_,"float","gapSize"),I_=Dg(u_,"float","pointWidth"),D_=Dg(u_,"float","IOR"),U_=Dg(u_,"float","Transmission"),F_=Dg(u_,"float","Thickness"),O_=Dg(u_,"float","AttenuationDistance"),B_=Dg(u_,"color","AttenuationColor"),V_=Dg(u_,"float","Dispersion");class z_ extends Gf{static get type(){return"UniformGroupNode"}constructor(e,t=!1,i=1){super("string"),this.name=e,this.shared=t,this.order=i,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const k_=e=>new z_(e),G_=(e,t=0)=>new z_(e,!0,t),H_=G_("frame"),W_=G_("render"),j_=k_("object");class X_ extends Zf{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=j_}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const i=this.getSelf();return e=e.bind(i),super.onUpdate((t=>{const n=e(t,i);void 0!==n&&(this.value=n)}),t)}generate(e,t){const i=this.getNodeType(e),n=this.getUniformHash(e);let r=e.getNodeFromHash(n);void 0===r&&(e.setHashNode(this,n),r=this);const s=r.getInputType(e),a=e.getUniformFromNode(r,s,e.shaderStage,this.name||e.context.label),o=e.getPropertyName(a);return void 0!==e.context.label&&delete e.context.label,e.format(o,i,t)}}const $_=(e,t)=>{const i=Rg(t||e),n=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return Ng(new X_(n,i))};class q_ extends jf{static get type(){return"ArrayNode"}constructor(e,t,i=null){super(e),this.count=t,this.values=i,this.isArrayNode=!0}getNodeType(e){return null===this.nodeType&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const Y_=(...e)=>{let t;if(1===e.length){const i=e[0];t=new q_(null,i.length,i)}else{const i=e[0],n=e[1];t=new q_(i,n)}return Ng(t)};ng("toArray",((e,t)=>Y_(Array(t).fill(e))));class K_ extends jf{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const i=e.getTypeLength(t.node.getNodeType(e));return zf.join("").slice(0,i)!==t.components}return!1}generate(e,t){const{targetNode:i,sourceNode:n}=this,r=this.needsSplitAssign(e),s=i.getNodeType(e),a=i.context({assign:!0}).build(e),o=n.build(e,s),l=n.getNodeType(e),u=e.getDataFromNode(this);let c;if(!0===u.initialized)"void"!==t&&(c=a);else if(r){const n=e.getVarFromNode(this,null,s),r=e.getPropertyName(n);e.addLineFlowCode(`${r} = ${o}`,this);const l=i.node.context({assign:!0}).build(e);for(let t=0;t<i.components.length;t++){const n=i.components[t];e.addLineFlowCode(`${l}.${n} = ${r}[ ${t} ]`,this)}"void"!==t&&(c=a)}else c=`${a} = ${o}`,"void"!==t&&"void"!==l||(e.addLineFlowCode(c,this),"void"!==t&&(c=a));return u.initialized=!0,e.format(c,s,t)}}const Z_=Ig(K_).setParameterLength(2);ng("assign",Z_);class Q_ extends jf{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],i=this.functionNode,n=i.getInputs(e),r=this.parameters,s=(t,i)=>{const n=i.type;let r;return r="pointer"===n?"&"+t.build(e):t.build(e,n),r};if(Array.isArray(r)){if(r.length>n.length)r.length=n.length;else if(r.length<n.length)for(;r.length<n.length;)r.push(Gg(0));for(let e=0;e<r.length;e++)t.push(s(r[e],n[e]))}else for(const a of n){const e=r[a.name];void 0!==e?t.push(s(e,a)):t.push(s(Gg(0),a))}return`${i.build(e,"property")}( ${t.join(", ")} )`}}const J_=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?Lg(t):Pg(t[0]),Ng(new Q_(Ng(e),t)));ng("call",J_);const ev={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class tv extends jf{static get type(){return"OperatorNode"}constructor(e,t,i,...n){if(super(),n.length>0){let r=new tv(e,t,i);for(let t=0;t<n.length-1;t++)r=new tv(e,r,n[t]);t=r,i=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=i,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(ev[this.op],t)}getNodeType(e){const t=this.op,i=this.aNode,n=this.bNode,r=i.getNodeType(e),s=void 0!==n?n.getNodeType(e):null;if("void"===r||"void"===s)return"void";if("%"===t)return r;if("~"===t||"&"===t||"|"===t||"^"===t||">>"===t||"<<"===t)return e.getIntegerType(r);if("!"===t||"&&"===t||"||"===t||"^^"===t)return"bool";if("=="===t||"!="===t||"<"===t||">"===t||"<="===t||">="===t){const t=Math.max(e.getTypeLength(r),e.getTypeLength(s));return t>1?`bvec${t}`:"bool"}if(e.isMatrix(r)){if("float"===s)return r;if(e.isVector(s))return e.getVectorFromMatrix(r);if(e.isMatrix(s))return r}else if(e.isMatrix(s)){if("float"===r)return s;if(e.isVector(r))return e.getVectorFromMatrix(s)}return e.getTypeLength(s)>e.getTypeLength(r)?s:r}generate(e,t){const i=this.op,n=this.aNode,r=this.bNode,s=this.getNodeType(e);let a=null,o=null;"void"!==s?(a=n.getNodeType(e),o=void 0!==r?r.getNodeType(e):null,"<"===i||">"===i||"<="===i||">="===i||"=="===i||"!="===i?e.isVector(a)?o=a:e.isVector(o)?a=o:a!==o&&(a=o="float"):">>"===i||"<<"===i?(a=s,o=e.changeComponentType(o,"uint")):"%"===i?(a=s,o=e.isInteger(a)&&e.isInteger(o)?o:a):e.isMatrix(a)?"float"===o?o="float":e.isVector(o)?o=e.getVectorFromMatrix(a):e.isMatrix(o)||(a=o=s):a=e.isMatrix(o)?"float"===a?"float":e.isVector(a)?e.getVectorFromMatrix(o):o=s:o=s):a=o=s;const l=n.build(e,a),u=void 0!==r?r.build(e,o):null,c=e.getFunctionOperator(i);if("void"!==t){const n=e.renderer.coordinateSystem===Rt;if("=="===i||"!="===i||"<"===i||">"===i||"<="===i||">="===i)return n&&e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${l}, ${u} )`,s,t):e.format(`( ${l} ${i} ${u} )`,s,t);if("%"===i)return e.isInteger(o)?e.format(`( ${l} % ${u} )`,s,t):e.format(`${this.getOperatorMethod(e,s)}( ${l}, ${u} )`,s,t);if("!"===i||"~"===i)return e.format(`(${i}${l})`,a,t);if(c)return e.format(`${c}( ${l}, ${u} )`,s,t);if(e.isMatrix(a)&&"float"===o)return e.format(`( ${u} ${i} ${l} )`,s,t);if("float"===a&&e.isMatrix(o))return e.format(`${l} ${i} ${u}`,s,t);{let r=`( ${l} ${i} ${u} )`;return!n&&"bool"===s&&e.isVector(a)&&e.isVector(o)&&(r=`all${r}`),e.format(r,s,t)}}if("void"!==a)return c?e.format(`${c}( ${l}, ${u} )`,s,t):e.isMatrix(a)&&"float"===o?e.format(`${u} ${i} ${l}`,s,t):e.format(`${l} ${i} ${u}`,s,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const iv=Ig(tv,"+").setParameterLength(2,1/0).setName("add"),nv=Ig(tv,"-").setParameterLength(2,1/0).setName("sub"),rv=Ig(tv,"*").setParameterLength(2,1/0).setName("mul"),sv=Ig(tv,"/").setParameterLength(2,1/0).setName("div"),av=Ig(tv,"%").setParameterLength(2).setName("mod"),ov=Ig(tv,"==").setParameterLength(2).setName("equal"),lv=Ig(tv,"!=").setParameterLength(2).setName("notEqual"),uv=Ig(tv,"<").setParameterLength(2).setName("lessThan"),cv=Ig(tv,">").setParameterLength(2).setName("greaterThan"),hv=Ig(tv,"<=").setParameterLength(2).setName("lessThanEqual"),dv=Ig(tv,">=").setParameterLength(2).setName("greaterThanEqual"),pv=Ig(tv,"&&").setParameterLength(2,1/0).setName("and"),mv=Ig(tv,"||").setParameterLength(2,1/0).setName("or"),fv=Ig(tv,"!").setParameterLength(1).setName("not"),gv=Ig(tv,"^^").setParameterLength(2).setName("xor"),_v=Ig(tv,"&").setParameterLength(2).setName("bitAnd"),vv=Ig(tv,"~").setParameterLength(2).setName("bitNot"),xv=Ig(tv,"|").setParameterLength(2).setName("bitOr"),yv=Ig(tv,"^").setParameterLength(2).setName("bitXor"),bv=Ig(tv,"<<").setParameterLength(2).setName("shiftLeft"),Tv=Ig(tv,">>").setParameterLength(2).setName("shiftRight"),Sv=Fg((([e])=>(e.addAssign(1),e))),Mv=Fg((([e])=>(e.subAssign(1),e))),wv=Fg((([e])=>{const t=Hg(e).toConst();return e.addAssign(1),t})),Ev=Fg((([e])=>{const t=Hg(e).toConst();return e.subAssign(1),t}));ng("add",iv),ng("sub",nv),ng("mul",rv),ng("div",sv),ng("mod",av),ng("equal",ov),ng("notEqual",lv),ng("lessThan",uv),ng("greaterThan",cv),ng("lessThanEqual",hv),ng("greaterThanEqual",dv),ng("and",pv),ng("or",mv),ng("not",fv),ng("xor",gv),ng("bitAnd",_v),ng("bitNot",vv),ng("bitOr",xv),ng("bitXor",yv),ng("shiftLeft",bv),ng("shiftRight",Tv),ng("incrementBefore",Sv),ng("decrementBefore",Mv),ng("increment",wv),ng("decrement",Ev);const Av=(e,t)=>av(e,t),Rv=(e,t)=>av(Hg(e),Hg(t));ng("remainder",Av),ng("modInt",Rv);class Cv extends jf{static get type(){return"MathNode"}constructor(e,t,i=null,n=null){if(super(),(e===Cv.MAX||e===Cv.MIN)&&arguments.length>3){let r=new Cv(e,t,i);for(let t=2;t<arguments.length-1;t++)r=new Cv(e,r,arguments[t]);t=r,i=arguments[arguments.length-1],n=null}this.method=e,this.aNode=t,this.bNode=i,this.cNode=n,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),s=e.isMatrix(i)?0:e.getTypeLength(i),a=e.isMatrix(n)?0:e.getTypeLength(n);return r>s&&r>a?t:s>a?i:a>r?n:t}getNodeType(e){const t=this.method;return t===Cv.LENGTH||t===Cv.DISTANCE||t===Cv.DOT?"float":t===Cv.CROSS?"vec3":t===Cv.ALL||t===Cv.ANY?"bool":t===Cv.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}generate(e,t){let i=this.method;const n=this.getNodeType(e),r=this.getInputType(e),s=this.aNode,a=this.bNode,o=this.cNode,l=e.renderer.coordinateSystem;if(i===Cv.TRANSFORM_DIRECTION){let i=s,n=a;e.isMatrix(i.getNodeType(e))?n=e_(Kg(n),0):i=e_(Kg(i),0);const r=rv(i,n).xyz;return Xv(r).build(e,t)}if(i===Cv.NEGATE)return e.format("( - "+s.build(e,r)+" )",n,t);if(i===Cv.ONE_MINUS)return nv(1,s).build(e,t);if(i===Cv.RECIPROCAL)return sv(1,s).build(e,t);if(i===Cv.DIFFERENCE)return ex(nv(s,a)).build(e,t);{const u=[];return i===Cv.CROSS?u.push(s.build(e,n),a.build(e,n)):l===Rt&&i===Cv.STEP?u.push(s.build(e,1===e.getTypeLength(s.getNodeType(e))?"float":r),a.build(e,r)):l!==Rt||i!==Cv.MIN&&i!==Cv.MAX?i===Cv.REFRACT?u.push(s.build(e,r),a.build(e,r),o.build(e,"float")):i===Cv.MIX?u.push(s.build(e,r),a.build(e,r),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":r)):(l===Ct&&i===Cv.ATAN&&null!==a&&(i="atan2"),"fragment"===e.shaderStage||i!==Cv.DFDX&&i!==Cv.DFDY||(i="/*"+i+"*/"),u.push(s.build(e,r)),null!==a&&u.push(a.build(e,r)),null!==o&&u.push(o.build(e,r))):u.push(s.build(e,r),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":r)),e.format(`${e.getMethod(i,n)}( ${u.join(", ")} )`,n,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Cv.ALL="all",Cv.ANY="any",Cv.RADIANS="radians",Cv.DEGREES="degrees",Cv.EXP="exp",Cv.EXP2="exp2",Cv.LOG="log",Cv.LOG2="log2",Cv.SQRT="sqrt",Cv.INVERSE_SQRT="inversesqrt",Cv.FLOOR="floor",Cv.CEIL="ceil",Cv.NORMALIZE="normalize",Cv.FRACT="fract",Cv.SIN="sin",Cv.COS="cos",Cv.TAN="tan",Cv.ASIN="asin",Cv.ACOS="acos",Cv.ATAN="atan",Cv.ABS="abs",Cv.SIGN="sign",Cv.LENGTH="length",Cv.NEGATE="negate",Cv.ONE_MINUS="oneMinus",Cv.DFDX="dFdx",Cv.DFDY="dFdy",Cv.ROUND="round",Cv.RECIPROCAL="reciprocal",Cv.TRUNC="trunc",Cv.FWIDTH="fwidth",Cv.TRANSPOSE="transpose",Cv.BITCAST="bitcast",Cv.EQUALS="equals",Cv.MIN="min",Cv.MAX="max",Cv.STEP="step",Cv.REFLECT="reflect",Cv.DISTANCE="distance",Cv.DIFFERENCE="difference",Cv.DOT="dot",Cv.CROSS="cross",Cv.POW="pow",Cv.TRANSFORM_DIRECTION="transformDirection",Cv.MIX="mix",Cv.CLAMP="clamp",Cv.REFRACT="refract",Cv.SMOOTHSTEP="smoothstep",Cv.FACEFORWARD="faceforward";const Nv=Gg(1e-6),Pv=Gg(1e6),Lv=Gg(Math.PI),Iv=Gg(2*Math.PI),Dv=Ig(Cv,Cv.ALL).setParameterLength(1),Uv=Ig(Cv,Cv.ANY).setParameterLength(1),Fv=Ig(Cv,Cv.RADIANS).setParameterLength(1),Ov=Ig(Cv,Cv.DEGREES).setParameterLength(1),Bv=Ig(Cv,Cv.EXP).setParameterLength(1),Vv=Ig(Cv,Cv.EXP2).setParameterLength(1),zv=Ig(Cv,Cv.LOG).setParameterLength(1),kv=Ig(Cv,Cv.LOG2).setParameterLength(1),Gv=Ig(Cv,Cv.SQRT).setParameterLength(1),Hv=Ig(Cv,Cv.INVERSE_SQRT).setParameterLength(1),Wv=Ig(Cv,Cv.FLOOR).setParameterLength(1),jv=Ig(Cv,Cv.CEIL).setParameterLength(1),Xv=Ig(Cv,Cv.NORMALIZE).setParameterLength(1),$v=Ig(Cv,Cv.FRACT).setParameterLength(1),qv=Ig(Cv,Cv.SIN).setParameterLength(1),Yv=Ig(Cv,Cv.COS).setParameterLength(1),Kv=Ig(Cv,Cv.TAN).setParameterLength(1),Zv=Ig(Cv,Cv.ASIN).setParameterLength(1),Qv=Ig(Cv,Cv.ACOS).setParameterLength(1),Jv=Ig(Cv,Cv.ATAN).setParameterLength(1,2),ex=Ig(Cv,Cv.ABS).setParameterLength(1),tx=Ig(Cv,Cv.SIGN).setParameterLength(1),ix=Ig(Cv,Cv.LENGTH).setParameterLength(1),nx=Ig(Cv,Cv.NEGATE).setParameterLength(1),rx=Ig(Cv,Cv.ONE_MINUS).setParameterLength(1),sx=Ig(Cv,Cv.DFDX).setParameterLength(1),ax=Ig(Cv,Cv.DFDY).setParameterLength(1),ox=Ig(Cv,Cv.ROUND).setParameterLength(1),lx=Ig(Cv,Cv.RECIPROCAL).setParameterLength(1),ux=Ig(Cv,Cv.TRUNC).setParameterLength(1),cx=Ig(Cv,Cv.FWIDTH).setParameterLength(1),hx=Ig(Cv,Cv.TRANSPOSE).setParameterLength(1),dx=Ig(Cv,Cv.BITCAST).setParameterLength(2),px=(e,t)=>ov(e,t),mx=Ig(Cv,Cv.MIN).setParameterLength(2,1/0),fx=Ig(Cv,Cv.MAX).setParameterLength(2,1/0),gx=Ig(Cv,Cv.STEP).setParameterLength(2),_x=Ig(Cv,Cv.REFLECT).setParameterLength(2),vx=Ig(Cv,Cv.DISTANCE).setParameterLength(2),xx=Ig(Cv,Cv.DIFFERENCE).setParameterLength(2),yx=Ig(Cv,Cv.DOT).setParameterLength(2),bx=Ig(Cv,Cv.CROSS).setParameterLength(2),Tx=Ig(Cv,Cv.POW).setParameterLength(2),Sx=Ig(Cv,Cv.POW,2).setParameterLength(1),Mx=Ig(Cv,Cv.POW,3).setParameterLength(1),wx=Ig(Cv,Cv.POW,4).setParameterLength(1),Ex=Ig(Cv,Cv.TRANSFORM_DIRECTION).setParameterLength(2),Ax=e=>rv(tx(e),Tx(ex(e),1/3)),Rx=e=>yx(e,e),Cx=Ig(Cv,Cv.MIX).setParameterLength(3),Nx=(e,t=0,i=1)=>Ng(new Cv(Cv.CLAMP,Ng(e),Ng(t),Ng(i))),Px=e=>Nx(e),Lx=Ig(Cv,Cv.REFRACT).setParameterLength(3),Ix=Ig(Cv,Cv.SMOOTHSTEP).setParameterLength(3),Dx=Ig(Cv,Cv.FACEFORWARD).setParameterLength(3),Ux=Fg((([e])=>{const t=yx(e.xy,Xg(12.9898,78.233)),i=av(t,Lv);return $v(qv(i).mul(43758.5453))})),Fx=(e,t,i)=>Cx(t,i,e),Ox=(e,t,i)=>Ix(t,i,e),Bx=(e,t)=>Jv(e,t),Vx=Dx,zx=Hv;ng("all",Dv),ng("any",Uv),ng("equals",px),ng("radians",Fv),ng("degrees",Ov),ng("exp",Bv),ng("exp2",Vv),ng("log",zv),ng("log2",kv),ng("sqrt",Gv),ng("inverseSqrt",Hv),ng("floor",Wv),ng("ceil",jv),ng("normalize",Xv),ng("fract",$v),ng("sin",qv),ng("cos",Yv),ng("tan",Kv),ng("asin",Zv),ng("acos",Qv),ng("atan",Jv),ng("abs",ex),ng("sign",tx),ng("length",ix),ng("lengthSq",Rx),ng("negate",nx),ng("oneMinus",rx),ng("dFdx",sx),ng("dFdy",ax),ng("round",ox),ng("reciprocal",lx),ng("trunc",ux),ng("fwidth",cx),ng("atan2",Bx),ng("min",mx),ng("max",fx),ng("step",gx),ng("reflect",_x),ng("distance",vx),ng("dot",yx),ng("cross",bx),ng("pow",Tx),ng("pow2",Sx),ng("pow3",Mx),ng("pow4",wx),ng("transformDirection",Ex),ng("mix",Fx),ng("clamp",Nx),ng("refract",Lx),ng("smoothstep",Ox),ng("faceForward",Dx),ng("difference",xx),ng("saturate",Px),ng("cbrt",Ax),ng("transpose",hx),ng("rand",Ux);class kx extends Gf{static get type(){return"ConditionalNode"}constructor(e,t,i=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=i}getNodeType(e){const{ifNode:t,elseNode:i}=e.getNodeProperties(this);if(void 0===t)return this.setup(e),this.getNodeType(e);const n=t.getNodeType(e);if(null!==i){const t=i.getNodeType(e);if(e.getTypeLength(t)>e.getTypeLength(n))return t}return n}setup(e){const t=this.condNode.cache(),i=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=r,null!==n&&(e.getDataFromNode(n).parentNodeBlock=r);const s=e.getNodeProperties(this);s.condNode=t,s.ifNode=i.context({nodeBlock:i}),s.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const i=this.getNodeType(e),n=e.getDataFromNode(this);if(void 0!==n.nodeProperty)return n.nodeProperty;const{condNode:r,ifNode:s,elseNode:a}=e.getNodeProperties(this),o=e.currentFunctionNode,l="void"!==t,u=l?c_(i).build(e):"";n.nodeProperty=u;const c=r.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${c} ) {\n\n`).addFlowTab();let h=s.build(e,i);if(h&&(l?h=u+" = "+h+";":(h="return "+h+";",null===o&&(h="// "+h))),e.removeFlowTab().addFlowCode(e.tab+"\t"+h+"\n\n"+e.tab+"}"),null!==a){e.addFlowCode(" else {\n\n").addFlowTab();let t=a.build(e,i);t&&(l?t=u+" = "+t+";":(t="return "+t+";",null===o&&(t="// "+t))),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(u,i,t)}}const Gx=Ig(kx).setParameterLength(2,3);ng("select",Gx);const Hx=(...e)=>Gx(...e);ng("cond",Hx);class Wx extends Gf{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e);return e.setContext(t),i}generate(e,t){const i=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(i),n}}const jx=Ig(Wx).setParameterLength(1,2),Xx=(e,t)=>jx(e,{label:t});ng("context",jx),ng("label",Xx);class $x extends Gf{static get type(){return"VarNode"}constructor(e,t=null,i=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=i}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:i,readOnly:n}=this,{renderer:r}=e,s=!0===r.backend.isWebGPUBackend;let a=!1,o=!1;n&&(a=e.isDeterministic(t),o=s?n:a);const l=e.getVectorType(this.getNodeType(e)),u=t.build(e,l),c=e.getVarFromNode(this,i,l,void 0,o),h=e.getPropertyName(c);let d=h;if(o)if(s)d=a?`const ${h}`:`let ${h}`;else{const i=e.getArrayCount(t);d=`const ${e.getVar(c.type,h,i)}`}return e.addLineFlowCode(`${d} = ${u}`,this),h}}const qx=Ig($x),Yx=(e,t=null)=>qx(e,t).toStack(),Kx=(e,t=null)=>qx(e,t,!0).toStack();ng("toVar",Yx),ng("toConst",Kx);const Zx=e=>qx(e);ng("temp",Zx);class Qx extends Gf{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null}isGlobal(){return!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let i=t.varying;if(void 0===i){const n=this.name,r=this.getNodeType(e),s=this.interpolationType,a=this.interpolationSampling;t.varying=i=e.getVaryingFromNode(this,n,r,s,a),t.node=this.node}return i.needsInterpolation||(i.needsInterpolation="fragment"===e.shaderStage),i}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),i=this.setupVarying(e),n="fragment"===e.shaderStage&&!0===t.reassignPosition&&e.context.needsPositionReassign;if(void 0===t.propertyName||n){const r=this.getNodeType(e),s=e.getPropertyName(i,Df.VERTEX);e.flowNodeFromShaderStage(Df.VERTEX,this.node,r,s),t.propertyName=s,n?t.reassignPosition=!1:void 0===t.reassignPosition&&e.context.isPositionNodeInput&&(t.reassignPosition=!0)}return e.getPropertyName(i)}}const Jx=Ig(Qx).setParameterLength(1,2),ey=e=>Jx(e);ng("toVarying",Jx),ng("toVertexStage",ey),ng("varying",((...e)=>Jx(...e))),ng("vertexStage",((...e)=>Jx(...e)));const ty=Fg((([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),i=e.mul(.0773993808),n=e.lessThanEqual(.04045);return Cx(t,i,n)})).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),iy=Fg((([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),i=e.mul(12.92),n=e.lessThanEqual(.0031308);return Cx(t,i,n)})).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ny="WorkingColorSpace",ry="OutputColorSpace";class sy extends jf{static get type(){return"ColorSpaceNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.source=t,this.target=i}resolveColorSpace(e,t){return t===ny?Jt.workingColorSpace:t===ry?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,i=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let r=t;return!1!==Jt.enabled&&i!==n&&i&&n?(Jt.getTransfer(i)===ft&&(r=e_(ty(r.rgb),r.a)),Jt.getPrimaries(i)!==Jt.getPrimaries(n)&&(r=e_(s_(Jt._getMatrix(new Ht,i,n)).mul(r.rgb),r.a)),Jt.getTransfer(n)===ft&&(r=e_(iy(r.rgb),r.a)),r):r}}const ay=e=>Ng(new sy(Ng(e),ny,ry)),oy=e=>Ng(new sy(Ng(e),ry,ny)),ly=(e,t)=>Ng(new sy(Ng(e),ny,t)),uy=(e,t)=>Ng(new sy(Ng(e),t,ny));ng("toOutputColorSpace",ay),ng("toWorkingColorSpace",oy),ng("workingToColorSpace",ly),ng("colorSpaceToWorking",uy);let cy=class extends Hf{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}};class hy extends Gf{static get type(){return"ReferenceBaseNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=Uf.OBJECT}setGroup(e){return this.group=e,this}element(e){return Ng(new cy(this,Ng(e)))}setNodeType(e){const t=$_(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class dy extends hy{static get type(){return"RendererReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.renderer=i,this.setGroup(W_)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const py=(e,t,i=null)=>Ng(new dy(e,t,i));class my extends jf{static get type(){return"ToneMappingNode"}constructor(e,t=gy,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=i}customCacheKey(){return bf(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,i=this.toneMapping;if(0===i)return t;let n=null;const r=e.renderer.library.getToneMappingFunction(i);return n=null!==r?e_(r(t.rgb,this.exposureNode),t.a):t,n}}const fy=(e,t,i)=>Ng(new my(e,Ng(t),Ng(i))),gy=py("toneMappingExposure","float");ng("toneMapping",((e,t,i)=>fy(t,i,e)));class _y extends Zf{static get type(){return"BufferAttributeNode"}constructor(e,t=null,i=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=i,this.bufferOffset=n,this.usage=wt,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),i=this.value,n=e.getTypeLength(t),r=this.bufferStride||n,s=this.bufferOffset,a=!0===i.isInterleavedBuffer?i:new Hr(i,r),o=new jr(a,n,s);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(i);let r=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=n,r=n;else{r=Jx(this).build(e,t)}return r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const vy=(e,t=null,i=0,n=0)=>Ng(new _y(e,t,i,n)),xy=(e,t=null,i=0,n=0)=>vy(e,t,i,n).setUsage(Et),yy=(e,t=null,i=0,n=0)=>vy(e,t,i,n).setInstanced(!0),by=(e,t=null,i=0,n=0)=>xy(e,t,i,n).setInstanced(!0);ng("toAttribute",(e=>vy(e.value)));class Ty extends Gf{static get type(){return"ComputeNode"}constructor(e,t,i=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=i,this.dispatchCount=0,this.version=1,this.name="",this.updateBeforeType=Uf.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}label(e){return this.name=e,this}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let i=t[0];for(let n=1;n<t.length;n++)i*=t[n];this.dispatchCount=Math.ceil(e/i)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){e.getNodeProperties(this).outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:i}=e;if("compute"===i){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t,this)}else{const i=e.getNodeProperties(this).outputComputeNode;if(i)return i.build(e,t)}}}const Sy=(e,t,i)=>Ng(new Ty(Ng(e),t,i));ng("compute",Sy);class My extends Gf{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const n=this.node.getNodeType(e);return e.setCache(t),n}build(e,...t){const i=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const r=this.node.build(e,...t);return e.setCache(i),r}}const wy=(e,t)=>Ng(new My(Ng(e),t));ng("cache",wy);class Ey extends Gf{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Ay=Ig(Ey).setParameterLength(2);ng("bypass",Ay);class Ry extends Gf{static get type(){return"RemapNode"}constructor(e,t,i,n=Gg(0),r=Gg(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=i,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:i,outLowNode:n,outHighNode:r,doClamp:s}=this;let a=e.sub(t).div(i.sub(t));return!0===s&&(a=a.clamp()),a.mul(r.sub(n)).add(n)}}const Cy=Ig(Ry,null,null,{doClamp:!1}).setParameterLength(3,5),Ny=Ig(Ry).setParameterLength(3,5);ng("remap",Cy),ng("remapClamp",Ny);class Py extends Gf{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const i=this.getNodeType(e),n=this.snippet;if("void"!==i)return e.format(n,i,t);e.addLineFlowCode(n,this)}}const Ly=Ig(Py).setParameterLength(1,2),Iy=e=>(e?Gx(e,Ly("discard")):Ly("discard")).toStack();ng("discard",Iy);class Dy extends jf{static get type(){return"RenderOutputNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=i,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const i=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||0,n=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||ht;return 0!==i&&(t=t.toneMapping(i)),n!==ht&&n!==Jt.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const Uy=(e,t=null,i=null)=>Ng(new Dy(Ng(e),t,i));ng("renderOutput",Uy);class Fy extends jf{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,i=this.node.build(e),n="--- TSL debug - "+e.shaderStage+" shader ---",r="-".repeat(n.length);let s="";return s+="// #"+n+"#\n",s+=e.flow.code.replace(/^\t/gm,"")+"\n",s+="/* ... */ "+i+" /* ... */\n",s+="// #"+r+"#\n",null!==t&&t(e,s),i}}const Oy=(e,t=null)=>Ng(new Fy(Ng(e),t));ng("debug",Oy);class By extends Gf{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const n=e.geometry.getAttribute(i);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),i=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const n=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(n),s=e.getAttribute(t,r);if("vertex"===e.shaderStage)return e.format(s.name,r,i);return Jx(this).build(e,i)}return e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Vy=(e,t=null)=>Ng(new By(e,t)),zy=(e=0)=>Vy("uv"+(e>0?e:""),"vec2");class ky extends Gf{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const i=this.textureNode.build(e,"property"),n=null===this.levelNode?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${n} )`,this.getNodeType(e),t)}}const Gy=Ig(ky).setParameterLength(1,2);class Hy extends X_{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Uf.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,i=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(i&&void 0!==i.width){const{width:e,height:t}=i;this.value=Math.log2(Math.max(e,t))}}}const Wy=Ig(Hy).setParameterLength(1);class jy extends X_{static get type(){return"TextureNode"}constructor(e,t=null,i=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=i,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Uf.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===le?"uvec4":this.value.type===oe?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return zy(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=$_(this.value.matrix)),this._matrixUniform.mul(Kg(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Uf.OBJECT:Uf.NONE,this}setupUV(e,t){const i=this.value;return e.isFlipY()&&(i.image instanceof ImageBitmap&&!0===i.flipY||!0===i.isRenderTargetTexture||!0===i.isFramebufferTexture||!0===i.isDepthTexture)&&(t=this.sampler?t.flipY():t.setY(Hg(Gy(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const i=this.value;if(!i||!0!==i.isTexture)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let n=this.uvNode;null!==n&&!0!==e.context.forceUVContext||!e.context.getUV||(n=e.context.getUV(this,e)),n||(n=this.getDefaultUV()),!0===this.updateMatrix&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,i,n,r,s,a,o){const l=this.value;let u;return u=n?e.generateTextureLevel(l,t,i,n,s):r?e.generateTextureBias(l,t,i,r,s):o?e.generateTextureGrad(l,t,i,o,s):a?e.generateTextureCompare(l,t,i,a,s):!1===this.sampler?e.generateTextureLoad(l,t,i,s):e.generateTexture(l,t,i,s),u}generate(e,t){const i=this.value,n=e.getNodeProperties(this),r=super.generate(e,"property");if(/^sampler/.test(t))return r+"_sampler";if(e.isReference(t))return r;{const s=e.getDataFromNode(this);let a=s.propertyName;if(void 0===a){const{uvNode:t,levelNode:i,biasNode:o,compareNode:l,depthNode:u,gradNode:c}=n,h=this.generateUV(e,t),d=i?i.build(e,"float"):null,p=o?o.build(e,"float"):null,m=u?u.build(e,"int"):null,f=l?l.build(e,"float"):null,g=c?[c[0].build(e,"vec2"),c[1].build(e,"vec2")]:null,_=e.getVarFromNode(this);a=e.getPropertyName(_);const v=this.generateSnippet(e,r,h,d,p,m,f,g);e.addLineFlowCode(`${a} = ${v}`,this),s.snippet=v,s.propertyName=a}let o=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(o=uy(Ly(o,l),i.colorSpace).setup(e).build(e,l)),e.format(o,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return this.sample(e)}sample(e){const t=this.clone();return t.uvNode=Ng(e),t.referenceNode=this.getSelf(),Ng(t)}blur(e){const t=this.clone();t.biasNode=Ng(e).mul(Wy(t)),t.referenceNode=this.getSelf();const i=t.value;return!1===t.generateMipmaps&&(i&&!1===i.generateMipmaps||i.minFilter===Z||i.magFilter===Z)&&(t.biasNode=null),Ng(t)}level(e){const t=this.clone();return t.levelNode=Ng(e),t.referenceNode=this.getSelf(),Ng(t)}size(e){return Gy(this,e)}bias(e){const t=this.clone();return t.biasNode=Ng(e),t.referenceNode=this.getSelf(),Ng(t)}compare(e){const t=this.clone();return t.compareNode=Ng(e),t.referenceNode=this.getSelf(),Ng(t)}grad(e,t){const i=this.clone();return i.gradNode=[Ng(e),Ng(t)],i.referenceNode=this.getSelf(),Ng(i)}depth(e){const t=this.clone();return t.depthNode=Ng(e),t.referenceNode=this.getSelf(),Ng(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}const Xy=Ig(jy).setParameterLength(1,4),$y=(...e)=>Xy(...e).setSampler(!1);class qy extends X_{static get type(){return"BufferNode"}constructor(e,t,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Yy=(e,t,i)=>Ng(new qy(e,t,i));class Ky extends Hf{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),i=this.getNodeType(),n=this.node.getPaddedType();return e.format(t,n,i)}}class Zy extends qy{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=null===t?Cf(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=Uf.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return"mat2"===e?t="mat2":!0===/mat/.test(e)?t="mat4":"i"===e.charAt(0)?t="ivec4":"u"===e.charAt(0)&&(t="uvec4"),t}update(){const{array:e,value:t}=this,i=this.elementType;if("float"===i||"int"===i||"uint"===i)for(let n=0;n<e.length;n++){t[4*n]=e[n]}else if("color"===i)for(let n=0;n<e.length;n++){const i=4*n,r=e[n];t[i]=r.r,t[i+1]=r.g,t[i+2]=r.b||0}else if("mat2"===i)for(let n=0;n<e.length;n++){const i=4*n,r=e[n];t[i]=r.elements[0],t[i+1]=r.elements[1],t[i+2]=r.elements[2],t[i+3]=r.elements[3]}else if("mat3"===i)for(let n=0;n<e.length;n++){const i=16*n,r=e[n];t[i]=r.elements[0],t[i+1]=r.elements[1],t[i+2]=r.elements[2],t[i+4]=r.elements[3],t[i+5]=r.elements[4],t[i+6]=r.elements[5],t[i+8]=r.elements[6],t[i+9]=r.elements[7],t[i+10]=r.elements[8],t[i+15]=1}else if("mat4"===i)for(let n=0;n<e.length;n++){const i=16*n,r=e[n];for(let e=0;e<r.elements.length;e++)t[i+e]=r.elements[e]}else for(let n=0;n<e.length;n++){const i=4*n,r=e[n];t[i]=r.x,t[i+1]=r.y,t[i+2]=r.z||0,t[i+3]=r.w||0}}setup(e){const t=this.array.length,i=this.elementType;let n=Float32Array;const r=this.paddedType,s=e.getTypeLength(r);return"i"===i.charAt(0)&&(n=Int32Array),"u"===i.charAt(0)&&(n=Uint32Array),this.value=new n(t*s),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return Ng(new Ky(this,Ng(e)))}}const Qy=(e,t)=>Ng(new Zy(e,t));const Jy=Ig(class extends Gf{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}).setParameterLength(1),eb=$_(0,"uint").label("u_cameraIndex").setGroup(G_("cameraIndex")).toVarying("v_cameraIndex"),tb=$_("float").label("cameraNear").setGroup(W_).onRenderUpdate((({camera:e})=>e.near)),ib=$_("float").label("cameraFar").setGroup(W_).onRenderUpdate((({camera:e})=>e.far)),nb=Fg((({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const i=[];for(const t of e.cameras)i.push(t.projectionMatrix);t=Qy(i).setGroup(W_).label("cameraProjectionMatrices").element(e.isMultiViewCamera?Jy("gl_ViewID_OVR"):eb).toVar("cameraProjectionMatrix")}else t=$_("mat4").label("cameraProjectionMatrix").setGroup(W_).onRenderUpdate((({camera:e})=>e.projectionMatrix));return t})).once()(),rb=Fg((({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const i=[];for(const t of e.cameras)i.push(t.projectionMatrixInverse);t=Qy(i).setGroup(W_).label("cameraProjectionMatricesInverse").element(e.isMultiViewCamera?Jy("gl_ViewID_OVR"):eb).toVar("cameraProjectionMatrixInverse")}else t=$_("mat4").label("cameraProjectionMatrixInverse").setGroup(W_).onRenderUpdate((({camera:e})=>e.projectionMatrixInverse));return t})).once()(),sb=Fg((({camera:e})=>{let t;if(e.isArrayCamera&&e.cameras.length>0){const i=[];for(const t of e.cameras)i.push(t.matrixWorldInverse);t=Qy(i).setGroup(W_).label("cameraViewMatrices").element(e.isMultiViewCamera?Jy("gl_ViewID_OVR"):eb).toVar("cameraViewMatrix")}else t=$_("mat4").label("cameraViewMatrix").setGroup(W_).onRenderUpdate((({camera:e})=>e.matrixWorldInverse));return t})).once()(),ab=$_("mat4").label("cameraWorldMatrix").setGroup(W_).onRenderUpdate((({camera:e})=>e.matrixWorld)),ob=$_("mat3").label("cameraNormalMatrix").setGroup(W_).onRenderUpdate((({camera:e})=>e.normalMatrix)),lb=$_(new fi).label("cameraPosition").setGroup(W_).onRenderUpdate((({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld))),ub=new Fi;class cb extends Gf{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Uf.OBJECT,this._uniformNode=new X_(null)}getNodeType(){const e=this.scope;return e===cb.WORLD_MATRIX?"mat4":e===cb.POSITION||e===cb.VIEW_POSITION||e===cb.DIRECTION||e===cb.SCALE?"vec3":e===cb.RADIUS?"float":void 0}update(e){const t=this.object3d,i=this._uniformNode,n=this.scope;if(n===cb.WORLD_MATRIX)i.value=t.matrixWorld;else if(n===cb.POSITION)i.value=i.value||new fi,i.value.setFromMatrixPosition(t.matrixWorld);else if(n===cb.SCALE)i.value=i.value||new fi,i.value.setFromMatrixScale(t.matrixWorld);else if(n===cb.DIRECTION)i.value=i.value||new fi,t.getWorldDirection(i.value);else if(n===cb.VIEW_POSITION){const n=e.camera;i.value=i.value||new fi,i.value.setFromMatrixPosition(t.matrixWorld),i.value.applyMatrix4(n.matrixWorldInverse)}else if(n===cb.RADIUS){const n=e.object.geometry;null===n.boundingSphere&&n.computeBoundingSphere(),ub.copy(n.boundingSphere).applyMatrix4(t.matrixWorld),i.value=ub.radius}}generate(e){const t=this.scope;return t===cb.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t===cb.POSITION||t===cb.VIEW_POSITION||t===cb.DIRECTION||t===cb.SCALE?this._uniformNode.nodeType="vec3":t===cb.RADIUS&&(this._uniformNode.nodeType="float"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}cb.WORLD_MATRIX="worldMatrix",cb.POSITION="position",cb.SCALE="scale",cb.VIEW_POSITION="viewPosition",cb.DIRECTION="direction",cb.RADIUS="radius";const hb=Ig(cb,cb.DIRECTION).setParameterLength(1),db=Ig(cb,cb.WORLD_MATRIX).setParameterLength(1),pb=Ig(cb,cb.POSITION).setParameterLength(1),mb=Ig(cb,cb.SCALE).setParameterLength(1),fb=Ig(cb,cb.VIEW_POSITION).setParameterLength(1),gb=Ig(cb,cb.RADIUS).setParameterLength(1);class _b extends cb{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const vb=Dg(_b,_b.DIRECTION),xb=Dg(_b,_b.WORLD_MATRIX),yb=Dg(_b,_b.POSITION),bb=Dg(_b,_b.SCALE),Tb=Dg(_b,_b.VIEW_POSITION),Sb=Dg(_b,_b.RADIUS),Mb=$_(new Ht).onObjectUpdate((({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld))),wb=$_(new ji).onObjectUpdate((({object:e},t)=>t.value.copy(e.matrixWorld).invert())),Eb=Fg((e=>e.renderer.overrideNodes.modelViewMatrix||Ab)).once()().toVar("modelViewMatrix"),Ab=sb.mul(xb),Rb=Fg((e=>(e.context.isHighPrecisionModelViewMatrix=!0,$_("mat4").onObjectUpdate((({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))))).once()().toVar("highpModelViewMatrix"),Cb=Fg((e=>{const t=e.context.isHighPrecisionModelViewMatrix;return $_("mat3").onObjectUpdate((({object:e,camera:i})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix))))})).once()().toVar("highpModelNormalViewMatrix"),Nb=Vy("position","vec3"),Pb=Nb.toVarying("positionLocal"),Lb=Nb.toVarying("positionPrevious"),Ib=xb.mul(Pb).xyz.toVarying("v_positionWorld").context({needsPositionReassign:!0}),Db=Pb.transformDirection(xb).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection").context({needsPositionReassign:!0}),Ub=Fg((e=>e.context.setupPositionView()),"vec3").once()().toVarying("v_positionView").context({needsPositionReassign:!0}),Fb=Ub.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class Ob extends Gf{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:i}=e;return t.coordinateSystem===Rt&&1===i.side?"false":e.getFrontFacing()}}const Bb=Dg(Ob),Vb=Gg(Bb).mul(2).sub(1),zb=Vy("normal","vec3"),kb=Fg((e=>!1===e.geometry.hasAttribute("normal")?Kg(0,1,0):zb),"vec3").once()().toVar("normalLocal"),Gb=Ub.dFdx().cross(Ub.dFdy()).normalize().toVar("normalFlat"),Hb=Fg((e=>{let t;return t=!0===e.material.flatShading?Gb:Jx(Yb(kb),"v_normalView").normalize(),t}),"vec3").once()().toVar("normalView"),Wb=Fg((e=>{let t=Hb.transformDirection(sb);return!0!==e.material.flatShading&&(t=Jx(t,"v_normalWorld")),t}),"vec3").once()().normalize().toVar("normalWorld"),jb=Fg((e=>{let t=e.context.setupNormal().context({getUV:null});return!0!==e.material.flatShading&&(t=t.mul(Vb)),t}),"vec3").once()().toVar("transformedNormalView"),Xb=jb.transformDirection(sb).toVar("transformedNormalWorld"),$b=Fg((e=>{let t=e.context.setupClearcoatNormal().context({getUV:null});return!0!==e.material.flatShading&&(t=t.mul(Vb)),t}),"vec3").once()().toVar("transformedClearcoatNormalView"),qb=Fg((([e,t=xb])=>{const i=s_(t),n=e.div(Kg(i[0].dot(i[0]),i[1].dot(i[1]),i[2].dot(i[2])));return i.mul(n).xyz})),Yb=Fg((([e],t)=>{const i=t.renderer.overrideNodes.modelNormalViewMatrix;if(null!==i)return i.transformDirection(e);const n=Mb.mul(e);return sb.transformDirection(n)})),Kb=new tn,Zb=new ji,Qb=$_(0).onReference((({material:e})=>e)).onObjectUpdate((({material:e})=>e.refractionRatio)),Jb=$_(1).onReference((({material:e})=>e)).onObjectUpdate((function({material:e,scene:t}){return e.envMap?e.envMapIntensity:t.environmentIntensity})),eT=$_(new ji).onReference((function(e){return e.material})).onObjectUpdate((function({material:e,scene:t}){const i=null!==t.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation;return i?(Kb.copy(i),Zb.makeRotationFromEuler(Kb)):Zb.identity(),Zb})),tT=Fb.negate().reflect(jb),iT=Fb.negate().refract(jb,Qb),nT=tT.transformDirection(sb).toVar("reflectVector"),rT=iT.transformDirection(sb).toVar("reflectVector");class sT extends jy{static get type(){return"CubeTextureNode"}constructor(e,t=null,i=null,n=null){super(e,t,i,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===H?nT:e.mapping===W?rT:Kg(0,0,0)}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return e.renderer.coordinateSystem!==Ct&&i.isRenderTargetTexture||(t=Kg(t.x.negate(),t.yz)),eT.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const aT=Ig(sT).setParameterLength(1,4).setName("cubeTexture");class oT extends Hf{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}}class lT extends Gf{static get type(){return"ReferenceNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=Uf.OBJECT}element(e){return Ng(new oT(this,Ng(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;t=null!==this.count?Yy(null,e,this.count):Array.isArray(this.getValueFromReference())?Qy(null,e):"texture"===e?Xy(null):"cubeTexture"===e?aT(null):$_(null,e),null!==this.group&&t.setGroup(this.group),null!==this.name&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const uT=(e,t,i)=>Ng(new lT(e,t,i)),cT=(e,t,i,n)=>Ng(new lT(e,t,n,i));class hT extends lT{static get type(){return"MaterialReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const dT=(e,t,i=null)=>Ng(new hT(e,t,i)),pT=Fg((e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),Vy("tangent","vec4"))))(),mT=pT.xyz.toVar("tangentLocal"),fT=Eb.mul(e_(mT,0)).xyz.toVarying("v_tangentView").normalize().toVar("tangentView"),gT=fT.transformDirection(sb).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),_T=fT.toVar("transformedTangentView"),vT=_T.transformDirection(sb).normalize().toVar("transformedTangentWorld"),xT=Fg((([e,t],i)=>{let n=e.mul(pT.w).xyz;return!0!==i.material.flatShading&&(n=Jx(e,t)),n})).once(),yT=xT(zb.cross(pT),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),bT=xT(kb.cross(mT),"v_bitangentLocal").normalize().toVar("bitangentLocal"),TT=xT(Hb.cross(fT),"v_bitangentView").normalize().toVar("bitangentView"),ST=xT(Wb.cross(gT),"v_bitangentWorld").normalize().toVar("bitangentWorld"),MT=xT(jb.cross(_T),"v_transformedBitangentView").normalize().toVar("transformedBitangentView"),wT=MT.transformDirection(sb).normalize().toVar("transformedBitangentWorld"),ET=s_(fT,TT,Hb),AT=Fb.mul(ET),RT=(()=>{let e=E_.cross(Fb);return e=e.cross(E_).normalize(),e=Cx(e,jb,M_.mul(m_.oneMinus()).oneMinus().pow2().pow2()).normalize(),e})(),CT=Fg((e=>{const{eye_pos:t,surf_norm:i,mapN:n,uv:r}=e,s=t.dFdx(),a=t.dFdy(),o=r.dFdx(),l=r.dFdy(),u=i,c=a.cross(u),h=u.cross(s),d=c.mul(o.x).add(h.mul(l.x)),p=c.mul(o.y).add(h.mul(l.y)),m=d.dot(d).max(p.dot(p)),f=Vb.mul(m.inverseSqrt());return iv(d.mul(n.x,f),p.mul(n.y,f),u.mul(n.z)).normalize()}));class NT extends jf{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=0}setup(e){const{normalMapType:t,scaleNode:i}=this;let n=this.node.mul(2).sub(1);null!==i&&(n=Kg(n.xy.mul(i),n.z));let r=null;if(1===t)r=Yb(n);else if(0===t){r=!0===e.hasGeometryAttribute("tangent")?ET.mul(n).normalize():CT({eye_pos:Ub,surf_norm:Hb,mapN:n,uv:zy()})}return r}}const PT=Ig(NT).setParameterLength(1,2),LT=Fg((({textureNode:e,bumpScale:t})=>{const i=t=>e.cache().context({getUV:e=>t(e.uvNode||zy()),forceUVContext:!0}),n=Gg(i((e=>e)));return Xg(Gg(i((e=>e.add(e.dFdx())))).sub(n),Gg(i((e=>e.add(e.dFdy())))).sub(n)).mul(t)})),IT=Fg((e=>{const{surf_pos:t,surf_norm:i,dHdxy:n}=e,r=t.dFdx().normalize(),s=i,a=t.dFdy().normalize().cross(s),o=s.cross(r),l=r.dot(a).mul(Vb),u=l.sign().mul(n.x.mul(a).add(n.y.mul(o)));return l.abs().mul(i).sub(u).normalize()}));class DT extends jf{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=LT({textureNode:this.textureNode,bumpScale:e});return IT({surf_pos:Ub,surf_norm:Hb,dHdxy:t})}}const UT=Ig(DT).setParameterLength(1,2),FT=new Map;class OT extends Gf{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let i=FT.get(e);return void 0===i&&(i=dT(e,t),FT.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,i=this.scope;let n=null;if(i===OT.COLOR){const e=void 0!==t.color?this.getColor(i):Kg();n=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(i===OT.OPACITY){const e=this.getFloat(i);n=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(i===OT.SPECULAR_STRENGTH)n=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:Gg(1);else if(i===OT.SPECULAR_INTENSITY){const e=this.getFloat(i);n=t.specularIntensityMap&&!0===t.specularIntensityMap.isTexture?e.mul(this.getTexture(i).a):e}else if(i===OT.SPECULAR_COLOR){const e=this.getColor(i);n=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(i).rgb):e}else if(i===OT.ROUGHNESS){const e=this.getFloat(i);n=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(i).g):e}else if(i===OT.METALNESS){const e=this.getFloat(i);n=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(i).b):e}else if(i===OT.EMISSIVE){const e=this.getFloat("emissiveIntensity"),r=this.getColor(i).mul(e);n=t.emissiveMap&&!0===t.emissiveMap.isTexture?r.mul(this.getTexture(i)):r}else if(i===OT.NORMAL)t.normalMap?(n=PT(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):n=t.bumpMap?UT(this.getTexture("bump").r,this.getFloat("bumpScale")):Hb;else if(i===OT.CLEARCOAT){const e=this.getFloat(i);n=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(i).r):e}else if(i===OT.CLEARCOAT_ROUGHNESS){const e=this.getFloat(i);n=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(i).r):e}else if(i===OT.CLEARCOAT_NORMAL)n=t.clearcoatNormalMap?PT(this.getTexture(i),this.getCache(i+"Scale","vec2")):Hb;else if(i===OT.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));n=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(i===OT.SHEEN_ROUGHNESS){const e=this.getFloat(i);n=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(i).a):e,n=n.clamp(.07,1)}else if(i===OT.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(i);n=r_(bS.x,bS.y,bS.y.negate(),bS.x).mul(e.rg.mul(2).sub(Xg(1)).normalize().mul(e.b))}else n=bS;else if(i===OT.IRIDESCENCE_THICKNESS){const e=uT("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=uT("0","float",t.iridescenceThicknessRange);n=e.sub(r).mul(this.getTexture(i).g).add(r)}else n=e}else if(i===OT.TRANSMISSION){const e=this.getFloat(i);n=t.transmissionMap?e.mul(this.getTexture(i).r):e}else if(i===OT.THICKNESS){const e=this.getFloat(i);n=t.thicknessMap?e.mul(this.getTexture(i).g):e}else if(i===OT.IOR)n=this.getFloat(i);else if(i===OT.LIGHT_MAP)n=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===OT.AO)n=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const t=this.getNodeType(e);n=this.getCache(i,t)}return n}}OT.ALPHA_TEST="alphaTest",OT.COLOR="color",OT.OPACITY="opacity",OT.SHININESS="shininess",OT.SPECULAR="specular",OT.SPECULAR_STRENGTH="specularStrength",OT.SPECULAR_INTENSITY="specularIntensity",OT.SPECULAR_COLOR="specularColor",OT.REFLECTIVITY="reflectivity",OT.ROUGHNESS="roughness",OT.METALNESS="metalness",OT.NORMAL="normal",OT.CLEARCOAT="clearcoat",OT.CLEARCOAT_ROUGHNESS="clearcoatRoughness",OT.CLEARCOAT_NORMAL="clearcoatNormal",OT.EMISSIVE="emissive",OT.ROTATION="rotation",OT.SHEEN="sheen",OT.SHEEN_ROUGHNESS="sheenRoughness",OT.ANISOTROPY="anisotropy",OT.IRIDESCENCE="iridescence",OT.IRIDESCENCE_IOR="iridescenceIOR",OT.IRIDESCENCE_THICKNESS="iridescenceThickness",OT.IOR="ior",OT.TRANSMISSION="transmission",OT.THICKNESS="thickness",OT.ATTENUATION_DISTANCE="attenuationDistance",OT.ATTENUATION_COLOR="attenuationColor",OT.LINE_SCALE="scale",OT.LINE_DASH_SIZE="dashSize",OT.LINE_GAP_SIZE="gapSize",OT.LINE_WIDTH="linewidth",OT.LINE_DASH_OFFSET="dashOffset",OT.POINT_SIZE="size",OT.DISPERSION="dispersion",OT.LIGHT_MAP="light",OT.AO="ao";const BT=Dg(OT,OT.ALPHA_TEST),VT=Dg(OT,OT.COLOR),zT=Dg(OT,OT.SHININESS),kT=Dg(OT,OT.EMISSIVE),GT=Dg(OT,OT.OPACITY),HT=Dg(OT,OT.SPECULAR),WT=Dg(OT,OT.SPECULAR_INTENSITY),jT=Dg(OT,OT.SPECULAR_COLOR),XT=Dg(OT,OT.SPECULAR_STRENGTH),$T=Dg(OT,OT.REFLECTIVITY),qT=Dg(OT,OT.ROUGHNESS),YT=Dg(OT,OT.METALNESS),KT=Dg(OT,OT.NORMAL),ZT=Dg(OT,OT.CLEARCOAT),QT=Dg(OT,OT.CLEARCOAT_ROUGHNESS),JT=Dg(OT,OT.CLEARCOAT_NORMAL),eS=Dg(OT,OT.ROTATION),tS=Dg(OT,OT.SHEEN),iS=Dg(OT,OT.SHEEN_ROUGHNESS),nS=Dg(OT,OT.ANISOTROPY),rS=Dg(OT,OT.IRIDESCENCE),sS=Dg(OT,OT.IRIDESCENCE_IOR),aS=Dg(OT,OT.IRIDESCENCE_THICKNESS),oS=Dg(OT,OT.TRANSMISSION),lS=Dg(OT,OT.THICKNESS),uS=Dg(OT,OT.IOR),cS=Dg(OT,OT.ATTENUATION_DISTANCE),hS=Dg(OT,OT.ATTENUATION_COLOR),dS=Dg(OT,OT.LINE_SCALE),pS=Dg(OT,OT.LINE_DASH_SIZE),mS=Dg(OT,OT.LINE_GAP_SIZE),fS=Dg(OT,OT.LINE_WIDTH),gS=Dg(OT,OT.LINE_DASH_OFFSET),_S=Dg(OT,OT.POINT_SIZE),vS=Dg(OT,OT.DISPERSION),xS=Dg(OT,OT.LIGHT_MAP),yS=Dg(OT,OT.AO),bS=$_(new Gt).onReference((function(e){return e.material})).onRenderUpdate((function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))})),TS=Fg((e=>e.context.setupModelViewProjection()),"vec4").once()().toVarying("v_modelViewProjection");class SS extends Gf{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),i=this.scope;let n,r;if(i===SS.VERTEX)n=e.getVertexIndex();else if(i===SS.INSTANCE)n=e.getInstanceIndex();else if(i===SS.DRAW)n=e.getDrawIndex();else if(i===SS.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(i===SS.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else{if(i!==SS.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+i);n=e.getSubgroupIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)r=n;else{r=Jx(this).build(e,t)}return r}}SS.VERTEX="vertex",SS.INSTANCE="instance",SS.SUBGROUP="subgroup",SS.INVOCATION_LOCAL="invocationLocal",SS.INVOCATION_SUBGROUP="invocationSubgroup",SS.DRAW="draw";const MS=Dg(SS,SS.VERTEX),wS=Dg(SS,SS.INSTANCE),ES=Dg(SS,SS.SUBGROUP),AS=Dg(SS,SS.INVOCATION_SUBGROUP),RS=Dg(SS,SS.INVOCATION_LOCAL),CS=Dg(SS,SS.DRAW);class NS extends Gf{static get type(){return"InstanceNode"}constructor(e,t,i=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=i,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Uf.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:i,instanceColor:n}=this;let{instanceMatrixNode:r,instanceColorNode:s}=this;if(null===r){if(t<=1e3)r=Yy(i.array,"mat4",Math.max(t,1)).element(wS);else{const e=new cu(i.array,16,1);this.buffer=e;const t=i.usage===Et?by:yy,n=[t(e,"vec4",16,0),t(e,"vec4",16,4),t(e,"vec4",16,8),t(e,"vec4",16,12)];r=a_(...n)}this.instanceMatrixNode=r}if(n&&null===s){const e=new Ss(n.array,3),t=n.usage===Et?by:yy;this.bufferColor=e,s=Kg(t(e,"vec3",3,0)),this.instanceColorNode=s}const a=r.mul(Pb).xyz;if(Pb.assign(a),e.hasGeometryAttribute("normal")){const e=qb(kb,r);kb.assign(e)}null!==this.instanceColorNode&&h_("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==Et&&null!==this.buffer&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==Et&&null!==this.bufferColor&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const PS=Ig(NS).setParameterLength(2,3);class LS extends NS{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:i,instanceColor:n}=e;super(t,i,n),this.instancedMesh=e}}const IS=Ig(LS).setParameterLength(1);class DS extends Gf{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=wS:this.batchingIdNode=CS);const t=Fg((([e])=>{const t=Hg(Gy($y(this.batchMesh._indirectTexture),0).x),i=Hg(e).mod(t),n=Hg(e).div(t);return $y(this.batchMesh._indirectTexture,$g(i,n)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Hg(this.batchingIdNode)),i=this.batchMesh._matricesTexture,n=Hg(Gy($y(i),0).x),r=Gg(t).mul(4).toInt().toVar(),s=r.mod(n),a=r.div(n),o=a_($y(i,$g(s,a)),$y(i,$g(s.add(1),a)),$y(i,$g(s.add(2),a)),$y(i,$g(s.add(3),a))),l=this.batchMesh._colorsTexture;if(null!==l){const e=Fg((([e])=>{const t=Hg(Gy($y(l),0).x),i=e,n=i.mod(t),r=i.div(t);return $y(l,$g(n,r)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(t);h_("vec3","vBatchColor").assign(e)}const u=s_(o);Pb.assign(o.mul(Pb));const c=kb.div(Kg(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),h=u.mul(c).xyz;kb.assign(h),e.hasGeometryAttribute("tangent")&&mT.mulAssign(u)}}const US=Ig(DS).setParameterLength(1);class FS extends Hf{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const i=this.storageBufferNode.structTypeNode;return i?i.getMemberType(e,t):"void"}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.isPBO&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let i;const n=e.context.assign;if(i=!1===e.isAvailable("storageBuffer")?!0!==this.node.isPBO||!0===n||!this.node.value.isInstancedBufferAttribute&&"compute"===e.shaderStage?this.node.build(e):e.generatePBO(this):super.generate(e),!0!==n){const n=this.getNodeType(e);i=e.format(i,n,t)}return i}}const OS=Ig(FS).setParameterLength(2);class BS extends qy{static get type(){return"StorageBufferNode"}constructor(e,t=null,i=0){let n,r=null;t&&t.isStruct?(n="struct",r=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(i=e.count)):null===t&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(n=Ef(e.itemSize),i=e.count):n=t,super(e,n,i),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=Ff.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return OS(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(Ff.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=vy(this.value),this._varying=Jx(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(null!==this.structTypeNode)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(null!==this.structTypeNode&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:i}=this.getAttributeData(),n=i.build(e);return e.registerTransform(n,t),n}}const VS=(e,t=null,i=0)=>Ng(new BS(e,t,i)),zS=new WeakMap;class kS extends Gf{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Uf.OBJECT,this.skinIndexNode=Vy("skinIndex","uvec4"),this.skinWeightNode=Vy("skinWeight","vec4"),this.bindMatrixNode=uT("bindMatrix","mat4"),this.bindMatrixInverseNode=uT("bindMatrixInverse","mat4"),this.boneMatricesNode=cT("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=Pb,this.toPositionNode=Pb,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=e.element(i.x),o=e.element(i.y),l=e.element(i.z),u=e.element(i.w),c=r.mul(t),h=iv(a.mul(n.x).mul(c),o.mul(n.y).mul(c),l.mul(n.z).mul(c),u.mul(n.w).mul(c));return s.mul(h).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=kb){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:s}=this,a=e.element(i.x),o=e.element(i.y),l=e.element(i.z),u=e.element(i.w);let c=iv(n.x.mul(a),n.y.mul(o),n.z.mul(l),n.w.mul(u));return c=s.mul(c).mul(r),c.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=cT("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Lb)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||!0===Pf(e.object).useVelocity}setup(e){this.needsPreviousBoneMatrices(e)&&Lb.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();kb.assign(t),e.hasGeometryAttribute("tangent")&&mT.assign(t)}return t}generate(e,t){if("void"!==t)return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;zS.get(t)!==e.frameId&&(zS.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const GS=e=>Ng(new kS(e));class HS extends Gf{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt(0)+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const i={};for(let s=0,a=this.params.length-1;s<a;s++){const e=this.params[s],t=!0!==e.isNode&&e.name||this.getVarName(s),n=!0!==e.isNode&&e.type||"int";i[t]=Ly(t,n)}const n=e.addStack();t.returnsNode=this.params[this.params.length-1](i,e),t.stackNode=n;const r=this.params[0];return!0!==r.isNode&&"function"==typeof r.update&&(t.updateNode=Fg(this.params[0].update)(i)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),i=this.params,n=t.stackNode;for(let a=0,o=i.length-1;a<o;a++){const n=i[a];let r,s=!1,o=null,l=null,u=null,c=null,h=null,d=null;if(n.isNode?"bool"===n.getNodeType(e)?(s=!0,c="bool",l=n.build(e,c)):(c="int",u=this.getVarName(a),o="0",l=n.build(e,c),h="<"):(c=n.type||"int",u=n.name||this.getVarName(a),o=n.start,l=n.end,h=n.condition,d=n.update,"number"==typeof o?o=e.generateConst(c,o):o&&o.isNode&&(o=o.build(e,c)),"number"==typeof l?l=e.generateConst(c,l):l&&l.isNode&&(l=l.build(e,c)),void 0!==o&&void 0===l?(o+=" - 1",l="0",h=">="):void 0!==l&&void 0===o&&(o="0",h="<"),void 0===h&&(h=Number(o)>Number(l)?">=":"<")),s)r=`while ( ${l} )`;else{const i={start:o,end:l},n=i.start,s=i.end;let a;const p=()=>h.includes("<")?"+=":"-=";if(null!=d)switch(typeof d){case"function":a=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":a=u+" "+p()+" "+e.generateConst(c,d);break;case"string":a=u+" "+d;break;default:a=d.isNode?u+" "+p()+" "+d.build(e):"break /* invalid update */"}else d="int"===c||"uint"===c?h.includes("<")?"++":"--":p()+" 1.",a=u+" "+d;r=`for ( ${e.getVar(c,u)+" = "+n}; ${u+" "+h+" "+s}; ${a} )`}e.addFlowCode((0===a?"\n":"")+e.tab+r+" {\n\n").addFlowTab()}const r=n.build(e,"void"),s=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+r);for(let a=0,o=this.params.length-1;a<o;a++)e.addFlowCode((0===a?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),s}}const WS=(...e)=>Ng(new HS(Lg(e,"int"))).toStack(),jS=()=>Ly("break").toStack(),XS=new WeakMap,$S=new ui,qS=Fg((({bufferMap:e,influence:t,stride:i,width:n,depth:r,offset:s})=>{const a=Hg(MS).mul(i).add(s),o=a.div(n),l=a.sub(o.mul(n));return $y(e,$g(l,o)).depth(r).xyz.mul(t)}));class YS extends Gf{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=$_(1),this.updateType=Uf.OBJECT}setup(e){const{geometry:t}=e,i=void 0!==t.morphAttributes.position,n=t.hasAttribute("normal")&&void 0!==t.morphAttributes.normal,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,s=void 0!==r?r.length:0,{texture:a,stride:o,size:l}=function(e){const t=void 0!==e.morphAttributes.position,i=void 0!==e.morphAttributes.normal,n=void 0!==e.morphAttributes.color,r=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,s=void 0!==r?r.length:0;let a=XS.get(e);if(void 0===a||a.count!==s){let r=function(){f.dispose(),XS.delete(e),e.removeEventListener("dispose",r)};void 0!==a&&a.texture.dispose();const o=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],u=e.morphAttributes.color||[];let c=0;!0===t&&(c=1),!0===i&&(c=2),!0===n&&(c=3);let h=e.attributes.position.count*c,d=1;const p=4096;h>p&&(d=Math.ceil(h/p),h=p);const m=new Float32Array(h*d*4*s),f=new di(m,h,d,s);f.type=ue,f.needsUpdate=!0;const g=4*c;for(let e=0;e<s;e++){const r=o[e],s=l[e],a=u[e],c=h*d*4*e;for(let e=0;e<r.count;e++){const o=e*g;!0===t&&($S.fromBufferAttribute(r,e),m[c+o+0]=$S.x,m[c+o+1]=$S.y,m[c+o+2]=$S.z,m[c+o+3]=0),!0===i&&($S.fromBufferAttribute(s,e),m[c+o+4]=$S.x,m[c+o+5]=$S.y,m[c+o+6]=$S.z,m[c+o+7]=0),!0===n&&($S.fromBufferAttribute(a,e),m[c+o+8]=$S.x,m[c+o+9]=$S.y,m[c+o+10]=$S.z,m[c+o+11]=4===a.itemSize?$S.w:1)}}a={count:s,texture:f,stride:c,size:new Gt(h,d)},XS.set(e,a),e.addEventListener("dispose",r)}return a}(t);!0===i&&Pb.mulAssign(this.morphBaseInfluence),!0===n&&kb.mulAssign(this.morphBaseInfluence);const u=Hg(l.width);WS(s,(({i:e})=>{const t=Gg(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign($y(this.mesh.morphTexture,$g(Hg(e).add(1),Hg(wS))).r):t.assign(uT("morphTargetInfluences","float").element(e).toVar()),Vg(t.notEqual(0),(()=>{!0===i&&Pb.addAssign(qS({bufferMap:a,influence:t,stride:o,width:u,depth:e,offset:Hg(0)})),!0===n&&kb.addAssign(qS({bufferMap:a,influence:t,stride:o,width:u,depth:e,offset:Hg(1)}))}))}))}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const KS=Ig(YS).setParameterLength(1);class ZS extends Gf{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class QS extends ZS{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class JS extends Wx{static get type(){return"LightingContextNode"}constructor(e,t=null,i=null,n=null){super(e),this.lightingModel=t,this.backdropNode=i,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,i={directDiffuse:Kg().toVar("directDiffuse"),directSpecular:Kg().toVar("directSpecular"),indirectDiffuse:Kg().toVar("indirectDiffuse"),indirectSpecular:Kg().toVar("indirectSpecular")};return{radiance:Kg().toVar("radiance"),irradiance:Kg().toVar("irradiance"),iblIrradiance:Kg().toVar("iblIrradiance"),ambientOcclusion:Gg(1).toVar("ambientOcclusion"),reflectedLight:i,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const eM=Ig(JS);class tM extends ZS{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let iM,nM;class rM extends Gf{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===rM.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Uf.NONE;return this.scope!==rM.SIZE&&this.scope!==rM.VIEWPORT||(e=Uf.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===rM.VIEWPORT?null!==t?nM.copy(t.viewport):(e.getViewport(nM),nM.multiplyScalar(e.getPixelRatio())):null!==t?(iM.width=t.width,iM.height=t.height):e.getDrawingBufferSize(iM)}setup(){const e=this.scope;let t=null;return t=e===rM.SIZE?$_(iM||(iM=new Gt)):e===rM.VIEWPORT?$_(nM||(nM=new ui)):Xg(oM.div(aM)),t}generate(e){if(this.scope===rM.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(aM).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${i}.y - ${t}.y )`}return t}return super.generate(e)}}rM.COORDINATE="coordinate",rM.VIEWPORT="viewport",rM.SIZE="size",rM.UV="uv";const sM=Dg(rM,rM.UV),aM=Dg(rM,rM.SIZE),oM=Dg(rM,rM.COORDINATE),lM=Dg(rM,rM.VIEWPORT),uM=lM.zw,cM=oM.sub(lM.xy),hM=cM.div(uM),dM=Fg((()=>aM),"vec2").once()(),pM=Fg((()=>sM),"vec2").once()(),mM=Fg((()=>sM.flipY()),"vec2").once()(),fM=new Gt;class gM extends jy{static get type(){return"ViewportTextureNode"}constructor(e=sM,t=null,i=null){null===i&&((i=new ca).minFilter=ie),super(i,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Uf.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(fM);const i=this.value;i.image.width===fM.width&&i.image.height===fM.height||(i.image.width=fM.width,i.image.height=fM.height,i.needsUpdate=!0);const n=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(i),i.generateMipmaps=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const _M=Ig(gM).setParameterLength(0,3),vM=Ig(gM,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let xM=null;class yM extends gM{static get type(){return"ViewportDepthTextureNode"}constructor(e=sM,t=null){null===xM&&(xM=new da),super(e,t,xM)}}const bM=Ig(yM).setParameterLength(0,2);class TM extends Gf{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===TM.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,i=this.valueNode;let n=null;if(t===TM.DEPTH_BASE)null!==i&&(n=AM().assign(i));else if(t===TM.DEPTH)n=e.isPerspectiveCamera?MM(Ub.z,tb,ib):SM(Ub.z,tb,ib);else if(t===TM.LINEAR_DEPTH)if(null!==i)if(e.isPerspectiveCamera){const e=wM(i,tb,ib);n=SM(e,tb,ib)}else n=i;else n=SM(Ub.z,tb,ib);return n}}TM.DEPTH_BASE="depthBase",TM.DEPTH="depth",TM.LINEAR_DEPTH="linearDepth";const SM=(e,t,i)=>e.add(t).div(t.sub(i)),MM=(e,t,i)=>t.add(e).mul(i).div(i.sub(t).mul(e)),wM=(e,t,i)=>t.mul(i).div(i.sub(t).mul(e).sub(i)),EM=(e,t,i)=>{t=t.max(1e-6).toVar();const n=kv(e.negate().div(t)),r=kv(i.div(t));return n.div(r)},AM=Ig(TM,TM.DEPTH_BASE),RM=Dg(TM,TM.DEPTH),CM=Ig(TM,TM.LINEAR_DEPTH).setParameterLength(0,1),NM=CM(bM());RM.assign=e=>AM(e);class PM extends Gf{static get type(){return"ClippingNode"}constructor(e=PM.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:i,unionPlanes:n}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===PM.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(i,n):this.scope===PM.HARDWARE?this.setupHardwareClipping(n,e):this.setupDefault(i,n)}setupAlphaToCoverage(e,t){return Fg((()=>{const i=Gg().toVar("distanceToPlane"),n=Gg().toVar("distanceToGradient"),r=Gg(1).toVar("clipOpacity"),s=t.length;if(!1===this.hardwareClipping&&s>0){const e=Qy(t);WS(s,(({i:t})=>{const s=e.element(t);i.assign(Ub.dot(s.xyz).negate().add(s.w)),n.assign(i.fwidth().div(2)),r.mulAssign(Ix(n.negate(),n,i))}))}const a=e.length;if(a>0){const t=Qy(e),s=Gg(1).toVar("intersectionClipOpacity");WS(a,(({i:e})=>{const r=t.element(e);i.assign(Ub.dot(r.xyz).negate().add(r.w)),n.assign(i.fwidth().div(2)),s.mulAssign(Ix(n.negate(),n,i).oneMinus())})),r.mulAssign(s.oneMinus())}d_.a.mulAssign(r),d_.a.equal(0).discard()}))()}setupDefault(e,t){return Fg((()=>{const i=t.length;if(!1===this.hardwareClipping&&i>0){const e=Qy(t);WS(i,(({i:t})=>{const i=e.element(t);Ub.dot(i.xyz).greaterThan(i.w).discard()}))}const n=e.length;if(n>0){const t=Qy(e),i=jg(!0).toVar("clipped");WS(n,(({i:e})=>{const n=t.element(e);i.assign(Ub.dot(n.xyz).greaterThan(n.w).and(i))})),i.discard()}}))()}setupHardwareClipping(e,t){const i=e.length;return t.enableHardwareClipping(i),Fg((()=>{const n=Qy(e),r=Jy(t.getClipDistance());WS(i,(({i:e})=>{const t=n.element(e),i=Ub.dot(t.xyz).sub(t.w).negate();r.element(e).assign(i)}))}))()}}PM.ALPHA_TO_COVERAGE="alphaToCoverage",PM.DEFAULT="default",PM.HARDWARE="hardware";const LM=Fg((([e])=>$v(rv(1e4,qv(rv(17,e.x).add(rv(.1,e.y)))).mul(iv(.1,ex(qv(rv(13,e.y).add(e.x)))))))),IM=Fg((([e])=>LM(Xg(LM(e.xy),e.z)))),DM=Fg((([e])=>{const t=fx(ix(sx(e.xyz)),ix(ax(e.xyz))),i=Gg(1).div(Gg(.05).mul(t)).toVar("pixScale"),n=Xg(Vv(Wv(kv(i))),Vv(jv(kv(i)))),r=Xg(IM(Wv(n.x.mul(e.xyz))),IM(Wv(n.y.mul(e.xyz)))),s=$v(kv(i)),a=iv(rv(s.oneMinus(),r.x),rv(s,r.y)),o=mx(s,s.oneMinus()),l=Kg(a.mul(a).div(rv(2,o).mul(nv(1,o))),a.sub(rv(.5,o)).div(nv(1,o)),nv(1,nv(1,a).mul(nv(1,a)).div(rv(2,o).mul(nv(1,o))))),u=a.lessThan(o.oneMinus()).select(a.lessThan(o).select(l.x,l.y),l.z);return Nx(u,1e-6,1)})).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class UM extends By{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let i;return i=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new ui(1,1,1,1)),i}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const FM=(e=0)=>Ng(new UM(e));class OM extends kn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+Tf(this)}build(e){this.setup(e)}setupObserver(e){return new _f(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,i=t.getRenderTarget();e.addStack();const n=this.vertexNode||this.setupVertex(e);let r;e.stack.outputNode=n,this.setupHardwareClipping(e),null!==this.geometryNode&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();const s=this.setupClipping(e);if(!0!==this.depthWrite&&!0!==this.depthTest||(null!==i?!0===i.depthBuffer&&this.setupDepth(e):!0===t.depth&&this.setupDepth(e)),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const n=this.setupLighting(e);null!==s&&e.stack.add(s);const a=e_(n,d_.a).max(0);r=this.setupOutput(e,a),N_.assign(r);const o=null!==this.outputNode;if(o&&(r=this.outputNode),null!==i){const e=t.getMRT(),i=this.mrtNode;null!==e?(o&&N_.assign(r),r=e,null!==i&&(r=e.merge(i))):null!==i&&(r=i)}}else{let t=this.fragmentNode;!0!==t.isOutputStructNode&&(t=e_(t)),r=this.setupOutput(e,t)}e.stack.outputNode=r,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{unionPlanes:t,intersectionPlanes:i}=e.clippingContext;let n=null;if(t.length>0||i.length>0){const t=e.renderer.samples;this.alphaToCoverage&&t>1?n=Ng(new PM(PM.ALPHA_TO_COVERAGE)):e.stack.add(Ng(new PM))}return n}setupHardwareClipping(e){if(this.hardwareClipping=!1,null===e.clippingContext)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(Ng(new PM(PM.HARDWARE))),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:i}=e;let n=this.depthNode;if(null===n){const e=t.getMRT();e&&e.has("depth")?n=e.get("depth"):!0===t.logarithmicDepthBuffer&&(n=i.isPerspectiveCamera?EM(Ub.z,tb,ib):SM(Ub.z,tb,ib))}null!==n&&RM.assign(n).toStack()}setupPositionView(){return Eb.mul(Pb).xyz}setupModelViewProjection(){return nb.mul(Ub)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),TS}setupPosition(e){const{object:t,geometry:i}=e;if((i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&KS(t).toStack(),!0===t.isSkinnedMesh&&GS(t).toStack(),this.displacementMap){const e=dT("displacementMap","texture"),t=dT("displacementScale","float"),i=dT("displacementBias","float");Pb.addAssign(kb.normalize().mul(e.x.mul(t).add(i)))}return t.isBatchedMesh&&US(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&IS(t).toStack(),null!==this.positionNode&&Pb.assign(this.positionNode.context({isPositionNodeInput:!0})),Pb}setupDiffuseColor({object:e,geometry:t}){let i=this.colorNode?e_(this.colorNode):VT;if(!0===this.vertexColors&&t.hasAttribute("color")&&(i=i.mul(FM())),e.instanceColor){i=h_("vec3","vInstanceColor").mul(i)}if(e.isBatchedMesh&&e._colorsTexture){i=h_("vec3","vBatchColor").mul(i)}d_.assign(i);const n=this.opacityNode?Gg(this.opacityNode):GT;if(d_.a.assign(d_.a.mul(n)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?Gg(this.alphaTestNode):BT;d_.a.lessThanEqual(e).discard()}!0===this.alphaHash&&d_.a.lessThan(DM(Pb)).discard(),!1===this.transparent&&1===this.blending&&!1===this.alphaToCoverage&&d_.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?Kg(0):d_.rgb}setupNormal(){return this.normalNode?Kg(this.normalNode):KT}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?dT("envMap","cubeTexture"):dT("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new tM(xS)),t}setupLights(e){const t=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&t.push(i);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:yS;t.push(new QS(e))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:i,backdropAlphaNode:n,emissiveNode:r}=this,s=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let a=this.setupOutgoingLight(e);if(s&&s.getScope().hasLights){const t=this.setupLightingModel(e)||null;a=eM(s,t,i,n)}else null!==i&&(a=Kg(null!==n?Cx(a,i,n):i));return(r&&!0===r.isNode||t.emissive&&!0===t.emissive.isColor)&&(p_.assign(Kg(r||kT)),a=a.add(p_)),a}setupFog(e,t){const i=e.fogNode;return i&&(N_.assign(t),t=e_(i)),t}setupOutput(e,t){return!0===this.fog&&(t=this.setupFog(e,t)),t}setDefaultValues(e){for(const i in e){const t=e[i];void 0===this[i]&&(this[i]=t,t&&t.clone&&(this[i]=t.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,i)&&void 0!==t[i].get&&Object.defineProperty(this.constructor.prototype,i,t[i])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const i=kn.prototype.toJSON.call(this,e),n=Sf(this);i.inputNodes={};for(const{property:s,childNode:a}of n)i.inputNodes[s]=a.toJSON(e).uuid;function r(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}if(t){const t=r(e.textures),n=r(e.images),s=r(e.nodes);t.length>0&&(i.textures=t),n.length>0&&(i.images=n),s.length>0&&(i.nodes=s)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const BM=new Gs;class VM extends OM{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(BM),this.setValues(e)}}const zM=new Go;class kM extends OM{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(zM),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?Gg(this.offsetNode):gS,t=this.dashScaleNode?Gg(this.dashScaleNode):dS,i=this.dashSizeNode?Gg(this.dashSizeNode):pS,n=this.gapSizeNode?Gg(this.gapSizeNode):mS;P_.assign(i),L_.assign(n);const r=Jx(Vy("lineDistance").mul(t));(e?r.add(e):r).mod(P_.add(L_)).greaterThan(P_).discard()}}let GM=null;class HM extends gM{static get type(){return"ViewportSharedTextureNode"}constructor(e=sM,t=null){null===GM&&(GM=new ca),super(e,t,GM)}updateReference(){return this}}const WM=Ig(HM).setParameterLength(0,2),jM=e=>Ng(e).mul(.5).add(.5),XM=new Oo;class $M extends OM{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(XM),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Gg(this.opacityNode):GT;d_.assign(uy(e_(jM(jb),e),dt))}}class qM extends jf{static get type(){return"EquirectUVNode"}constructor(e=Db){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan(e.x).mul(1/(2*Math.PI)).add(.5),i=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Xg(t,i)}}const YM=Ig(qM).setParameterLength(0,1);class KM extends Or{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const i=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new Sr(5,5,5),s=YM(Db),a=new OM;a.colorNode=Xy(t,s,0),a.side=1,a.blending=0;const o=new br(r,a),l=new Gr;l.add(o),t.minFilter===ie&&(t.minFilter=ee);const u=new Ur(1,10,this),c=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(c),t.minFilter=i,t.currentGenerateMipmaps=n,o.geometry.dispose(),o.material.dispose(),this}}const ZM=new WeakMap;class QM extends jf{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=aT(null);const t=new Fr;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Uf.RENDER}updateBefore(e){const{renderer:t,material:i}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const e=n.isTextureNode?n.value:i[n.property];if(e&&e.isTexture){const i=e.mapping;if(i===j||i===X){if(ZM.has(e)){const t=ZM.get(e);ew(t,e.mapping),this._cubeTexture=t}else{const i=e.image;if(function(e){return null!=e&&e.height>0}(i)){const n=new KM(i.height);n.fromEquirectangularTexture(t,e),ew(n.texture,e.mapping),this._cubeTexture=n.texture,ZM.set(e,n.texture),e.addEventListener("dispose",JM)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function JM(e){const t=e.target;t.removeEventListener("dispose",JM);const i=ZM.get(t);void 0!==i&&(ZM.delete(t),i.dispose())}function ew(e,t){t===j?e.mapping=H:t===X&&(e.mapping=W)}const tw=Ig(QM).setParameterLength(1);class iw extends ZS{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=tw(this.envNode)}}class nw extends ZS{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=Gg(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class rw{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class sw extends rw{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,i=e.reflectedLight,n=e.irradianceLightMap;i.indirectDiffuse.assign(e_(0)),n?i.indirectDiffuse.addAssign(n):i.indirectDiffuse.addAssign(e_(1,1,1,0)),i.indirectDiffuse.mulAssign(t),i.indirectDiffuse.mulAssign(d_.rgb)}finish(e){const{material:t,context:i}=e,n=i.outgoingLight,r=e.context.environment;if(r)switch(t.combine){case 0:n.rgb.assign(Cx(n.rgb,n.rgb.mul(r.rgb),XT.mul($T)));break;case 1:n.rgb.assign(Cx(n.rgb,r.rgb,XT.mul($T)));break;case 2:n.rgb.addAssign(r.rgb.mul(XT.mul($T)))}}}const aw=new Gn;class ow extends OM{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(aw),this.setValues(e)}setupNormal(){return Hb}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new iw(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new nw(xS)),t}setupOutgoingLight(){return d_.rgb}setupLightingModel(){return new sw}}const lw=Fg((({f0:e,f90:t,dotVH:i})=>{const n=i.mul(-5.55473).sub(6.98316).mul(i).exp2();return e.mul(n.oneMinus()).add(t.mul(n))})),uw=Fg((e=>e.diffuseColor.mul(1/Math.PI))),cw=Fg((({dotNH:e})=>C_.mul(Gg(.5)).add(1).mul(Gg(1/Math.PI)).mul(e.pow(C_)))),hw=Fg((({lightDirection:e})=>{const t=e.add(Fb).normalize(),i=jb.dot(t).clamp(),n=Fb.dot(t).clamp(),r=lw({f0:A_,f90:1,dotVH:n}),s=Gg(.25),a=cw({dotNH:i});return r.mul(s).mul(a)}));class dw extends sw{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const n=jb.dot(e).clamp().mul(t);i.directDiffuse.addAssign(n.mul(uw({diffuseColor:d_.rgb}))),!0===this.specular&&i.directSpecular.addAssign(n.mul(hw({lightDirection:e})).mul(XT))}indirect(e){const{ambientOcclusion:t,irradiance:i,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(i.mul(uw({diffuseColor:d_}))),n.indirectDiffuse.mulAssign(t)}}const pw=new Bo;class mw extends OM{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(pw),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new iw(t):null}setupLightingModel(){return new dw(!1)}}const fw=new Uo;class gw extends OM{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(fw),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new iw(t):null}setupLightingModel(){return new dw}setupVariants(){const e=(this.shininessNode?Gg(this.shininessNode):zT).max(1e-4);C_.assign(e);const t=this.specularNode||HT;A_.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const _w=Fg((e=>{if(!1===e.geometry.hasAttribute("normal"))return Gg(0);const t=Hb.dFdx().abs().max(Hb.dFdy().abs());return t.x.max(t.y).max(t.z)})),vw=Fg((e=>{const{roughness:t}=e,i=_w();let n=t.max(.0525);return n=n.add(i),n=n.min(1),n})),xw=Fg((({alpha:e,dotNL:t,dotNV:i})=>{const n=e.pow2(),r=t.mul(n.add(n.oneMinus().mul(i.pow2())).sqrt()),s=i.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt());return sv(.5,r.add(s).max(Nv))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),yw=Fg((({alphaT:e,alphaB:t,dotTV:i,dotBV:n,dotTL:r,dotBL:s,dotNV:a,dotNL:o})=>{const l=o.mul(Kg(e.mul(i),t.mul(n),a).length()),u=a.mul(Kg(e.mul(r),t.mul(s),o).length());return sv(.5,l.add(u)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),bw=Fg((({alpha:e,dotNH:t})=>{const i=e.pow2(),n=t.pow2().mul(i.oneMinus()).oneMinus();return i.div(n.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Tw=Gg(1/Math.PI),Sw=Fg((({alphaT:e,alphaB:t,dotNH:i,dotTH:n,dotBH:r})=>{const s=e.mul(t),a=Kg(t.mul(n),e.mul(r),s.mul(i)),o=a.dot(a),l=s.div(o);return Tw.mul(s.mul(l.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Mw=Fg((e=>{const{lightDirection:t,f0:i,f90:n,roughness:r,f:s,USE_IRIDESCENCE:a,USE_ANISOTROPY:o}=e,l=e.normalView||jb,u=r.pow2(),c=t.add(Fb).normalize(),h=l.dot(t).clamp(),d=l.dot(Fb).clamp(),p=l.dot(c).clamp(),m=Fb.dot(c).clamp();let f,g,_=lw({f0:i,f90:n,dotVH:m});if(Ag(a)&&(_=y_.mix(_,s)),Ag(o)){const e=w_.dot(t),i=w_.dot(Fb),n=w_.dot(c),r=E_.dot(t),s=E_.dot(Fb),a=E_.dot(c);f=yw({alphaT:S_,alphaB:u,dotTV:i,dotBV:s,dotTL:e,dotBL:r,dotNV:d,dotNL:h}),g=Sw({alphaT:S_,alphaB:u,dotNH:p,dotTH:n,dotBH:a})}else f=xw({alpha:u,dotNL:h,dotNV:d}),g=bw({alpha:u,dotNH:p});return _.mul(f).mul(g)})),ww=Fg((({roughness:e,dotNV:t})=>{const i=e_(-1,-.0275,-.572,.022),n=e_(1,.0425,1.04,-.04),r=e.mul(i).add(n),s=r.x.mul(r.x).min(t.mul(-9.28).exp2()).mul(r.x).add(r.y);return Xg(-1.04,1.04).mul(s).add(r.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Ew=Fg((e=>{const{dotNV:t,specularColor:i,specularF90:n,roughness:r}=e,s=ww({dotNV:t,roughness:r});return i.mul(s.x).add(n.mul(s.y))})),Aw=Fg((({f:e,f90:t,dotVH:i})=>{const n=i.oneMinus().saturate(),r=n.mul(n),s=n.mul(r,r).clamp(0,.9999);return e.sub(Kg(t).mul(s)).div(s.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Rw=Fg((({roughness:e,dotNH:t})=>{const i=e.pow2(),n=Gg(1).div(i),r=t.pow2().oneMinus().max(.0078125);return Gg(2).add(n).mul(r.pow(n.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Cw=Fg((({dotNV:e,dotNL:t})=>Gg(1).div(Gg(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),Nw=Fg((({lightDirection:e})=>{const t=e.add(Fb).normalize(),i=jb.dot(e).clamp(),n=jb.dot(Fb).clamp(),r=jb.dot(t).clamp(),s=Rw({roughness:x_,dotNH:r}),a=Cw({dotNV:n,dotNL:i});return v_.mul(s).mul(a)})),Pw=Fg((({N:e,V:t,roughness:i})=>{const n=e.dot(t).saturate(),r=Xg(i,n.oneMinus().sqrt());return r.assign(r.mul(.984375).add(.0078125)),r})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),Lw=Fg((({f:e})=>{const t=e.length();return fx(t.mul(t).add(e.z).div(t.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Iw=Fg((({v1:e,v2:t})=>{const i=e.dot(t),n=i.abs().toVar(),r=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),a=r.div(s),o=i.greaterThan(0).select(a,fx(i.mul(i).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return e.cross(t).mul(o)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Dw=Fg((({N:e,V:t,P:i,mInv:n,p0:r,p1:s,p2:a,p3:o})=>{const l=s.sub(r).toVar(),u=o.sub(r).toVar(),c=l.cross(u),h=Kg().toVar();return Vg(c.dot(i.sub(r)).greaterThanEqual(0),(()=>{const l=t.sub(e.mul(t.dot(e))).normalize(),u=e.cross(l).negate(),c=n.mul(s_(l,u,e).transpose()).toVar(),d=c.mul(r.sub(i)).normalize().toVar(),p=c.mul(s.sub(i)).normalize().toVar(),m=c.mul(a.sub(i)).normalize().toVar(),f=c.mul(o.sub(i)).normalize().toVar(),g=Kg(0).toVar();g.addAssign(Iw({v1:d,v2:p})),g.addAssign(Iw({v1:p,v2:m})),g.addAssign(Iw({v1:m,v2:f})),g.addAssign(Iw({v1:f,v2:d})),h.assign(Kg(Lw({f:g})))})),h})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Uw=1/6,Fw=e=>rv(Uw,rv(e,rv(e,e.negate().add(3)).sub(3)).add(1)),Ow=e=>rv(Uw,rv(e,rv(e,rv(3,e).sub(6))).add(4)),Bw=e=>rv(Uw,rv(e,rv(e,rv(-3,e).add(3)).add(3)).add(1)),Vw=e=>rv(Uw,Tx(e,3)),zw=e=>Fw(e).add(Ow(e)),kw=e=>Bw(e).add(Vw(e)),Gw=e=>iv(-1,Ow(e).div(Fw(e).add(Ow(e)))),Hw=e=>iv(1,Vw(e).div(Bw(e).add(Vw(e)))),Ww=(e,t,i)=>{const n=e.uvNode,r=rv(n,t.zw).add(.5),s=Wv(r),a=$v(r),o=zw(a.x),l=kw(a.x),u=Gw(a.x),c=Hw(a.x),h=Gw(a.y),d=Hw(a.y),p=Xg(s.x.add(u),s.y.add(h)).sub(.5).mul(t.xy),m=Xg(s.x.add(c),s.y.add(h)).sub(.5).mul(t.xy),f=Xg(s.x.add(u),s.y.add(d)).sub(.5).mul(t.xy),g=Xg(s.x.add(c),s.y.add(d)).sub(.5).mul(t.xy),_=zw(a.y).mul(iv(o.mul(e.sample(p).level(i)),l.mul(e.sample(m).level(i)))),v=kw(a.y).mul(iv(o.mul(e.sample(f).level(i)),l.mul(e.sample(g).level(i))));return _.add(v)},jw=Fg((([e,t=Gg(3)])=>{const i=Xg(e.size(Hg(t))),n=Xg(e.size(Hg(t.add(1)))),r=sv(1,i),s=sv(1,n),a=Ww(e,e_(r,i),Wv(t)),o=Ww(e,e_(s,n),jv(t));return $v(t).mix(a,o)})),Xw=Fg((([e,t,i,n,r])=>{const s=Kg(Lx(t.negate(),Xv(e),sv(1,n))),a=Kg(ix(r[0].xyz),ix(r[1].xyz),ix(r[2].xyz));return Xv(s).mul(i.mul(a))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),$w=Fg((([e,t])=>e.mul(Nx(t.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),qw=vM(),Yw=vM(),Kw=Fg((([e,t,i],{material:n})=>{const r=(1===n.side?qw:Yw).sample(e),s=kv(aM.x).mul($w(t,i));return jw(r,s)})),Zw=Fg((([e,t,i])=>(Vg(i.notEqual(0),(()=>{const n=zv(t).negate().div(i);return Bv(n.negate().mul(e))})),Kg(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Qw=Fg((([e,t,i,n,r,s,a,o,l,u,c,h,d,p,m])=>{let f,g;if(m){f=e_().toVar(),g=Kg().toVar();const r=c.sub(1).mul(m.mul(.025)),s=Kg(c.sub(r),c,c.add(r));WS({start:0,end:3},(({i:r})=>{const c=s.element(r),m=Xw(e,t,h,c,o),_=a.add(m),v=u.mul(l.mul(e_(_,1))),x=Xg(v.xy.div(v.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(Xg(x.x,x.y.oneMinus()));const y=Kw(x,i,c);f.element(r).assign(y.element(r)),f.a.addAssign(y.a),g.element(r).assign(n.element(r).mul(Zw(ix(m),d,p).element(r)))})),f.a.divAssign(3)}else{const r=Xw(e,t,h,c,o),s=a.add(r),m=u.mul(l.mul(e_(s,1))),_=Xg(m.xy.div(m.w)).toVar();_.addAssign(1),_.divAssign(2),_.assign(Xg(_.x,_.y.oneMinus())),f=Kw(_,i,c),g=n.mul(Zw(ix(r),d,p))}const _=g.rgb.mul(f.rgb),v=e.dot(t).clamp(),x=Kg(Ew({dotNV:v,specularColor:r,specularF90:s,roughness:i})),y=g.r.add(g.g,g.b).div(3);return e_(x.oneMinus().mul(_),f.a.oneMinus().mul(y).oneMinus())})),Jw=s_(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),eE=(e,t)=>e.sub(t).div(e.add(t)).pow2(),tE=Fg((({outsideIOR:e,eta2:t,cosTheta1:i,thinFilmThickness:n,baseF0:r})=>{const s=Cx(e,t,Ix(0,.03,n)),a=e.div(s).pow2().mul(i.pow2().oneMinus()).oneMinus();Vg(a.lessThan(0),(()=>Kg(1)));const o=a.sqrt(),l=eE(s,e),u=lw({f0:l,f90:1,dotVH:i}),c=u.oneMinus(),h=s.lessThan(e).select(Math.PI,0),d=Gg(Math.PI).sub(h),p=(e=>{const t=e.sqrt();return Kg(1).add(t).div(Kg(1).sub(t))})(r.clamp(0,.9999)),m=eE(p,s.toVec3()),f=lw({f0:m,f90:1,dotVH:o}),g=Kg(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),_=s.mul(n,o,2),v=Kg(d).add(g),x=u.mul(f).clamp(1e-5,.9999),y=x.sqrt(),b=c.pow2().mul(f).div(Kg(1).sub(x)),T=u.add(b).toVar(),S=b.sub(c).toVar();return WS({start:1,end:2,condition:"<=",name:"m"},(({m:e})=>{S.mulAssign(y);const t=((e,t)=>{const i=e.mul(2*Math.PI*1e-9),n=Kg(54856e-17,44201e-17,52481e-17),r=Kg(1681e3,1795300,2208400),s=Kg(43278e5,93046e5,66121e5),a=Gg(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(i.mul(2239900).add(t.x).cos()).mul(i.pow2().mul(-45282e5).exp());let o=n.mul(s.mul(2*Math.PI).sqrt()).mul(r.mul(i).add(t).cos()).mul(i.pow2().negate().mul(s).exp());return o=Kg(o.x.add(a),o.y,o.z).div(1.0685e-7),Jw.mul(o)})(Gg(e).mul(_),Gg(e).mul(v)).mul(2);T.addAssign(S.mul(t))})),T.max(Kg(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),iE=Fg((({normal:e,viewDir:t,roughness:i})=>{const n=e.dot(t).saturate(),r=i.pow2(),s=Gx(i.lessThan(.25),Gg(-339.2).mul(r).add(Gg(161.4).mul(i)).sub(25.9),Gg(-8.48).mul(r).add(Gg(14.3).mul(i)).sub(9.95)),a=Gx(i.lessThan(.25),Gg(44).mul(r).sub(Gg(23.7).mul(i)).add(3.26),Gg(1.97).mul(r).sub(Gg(3.27).mul(i)).add(.72));return Gx(i.lessThan(.25),0,Gg(.1).mul(i).sub(.025)).add(s.mul(n).add(a).exp()).mul(1/Math.PI).saturate()})),nE=Kg(.04),rE=Gg(1);class sE extends rw{constructor(e=!1,t=!1,i=!1,n=!1,r=!1,s=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=i,this.anisotropy=n,this.transmission=r,this.dispersion=s,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=Kg().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Kg().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Kg().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Kg().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Kg().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=jb.dot(Fb).clamp();this.iridescenceFresnel=tE({outsideIOR:Gg(1),eta2:b_,cosTheta1:e,thinFilmThickness:T_,baseF0:A_}),this.iridescenceF0=Aw({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Ib,i=lb.sub(Ib).normalize(),n=Xb,r=e.context;r.backdrop=Qw(n,i,m_,d_,A_,R_,t,xb,sb,nb,D_,F_,B_,O_,this.dispersion?V_:null),r.backdropAlpha=U_,d_.a.mulAssign(Cx(1,r.backdrop.a,U_))}super.start(e)}computeMultiscattering(e,t,i){const n=jb.dot(Fb).clamp(),r=ww({roughness:m_,dotNV:n}),s=(this.iridescenceF0?y_.mix(A_,this.iridescenceF0):A_).mul(r.x).add(i.mul(r.y)),a=r.x.add(r.y).oneMinus(),o=A_.add(A_.oneMinus().mul(.047619)),l=s.mul(o).div(a.mul(o).oneMinus());e.addAssign(s),t.addAssign(l.mul(a))}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const n=jb.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(n.mul(Nw({lightDirection:e}))),!0===this.clearcoat){const i=$b.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(i.mul(Mw({lightDirection:e,f0:nE,f90:rE,roughness:__,normalView:$b})))}i.directDiffuse.addAssign(n.mul(uw({diffuseColor:d_.rgb}))),i.directSpecular.addAssign(n.mul(Mw({lightDirection:e,f0:A_,f90:1,roughness:m_,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:i,halfHeight:n,reflectedLight:r,ltc_1:s,ltc_2:a}){const o=t.add(i).sub(n),l=t.sub(i).sub(n),u=t.sub(i).add(n),c=t.add(i).add(n),h=jb,d=Fb,p=Ub.toVar(),m=Pw({N:h,V:d,roughness:m_}),f=s.sample(m).toVar(),g=a.sample(m).toVar(),_=s_(Kg(f.x,0,f.y),Kg(0,1,0),Kg(f.z,0,f.w)).toVar(),v=A_.mul(g.x).add(A_.oneMinus().mul(g.y)).toVar();r.directSpecular.addAssign(e.mul(v).mul(Dw({N:h,V:d,P:p,mInv:_,p0:o,p1:l,p2:u,p3:c}))),r.directDiffuse.addAssign(e.mul(d_).mul(Dw({N:h,V:d,P:p,mInv:s_(1,0,0,0,1,0,0,0,1),p0:o,p1:l,p2:u,p3:c})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:i}=e.context;i.indirectDiffuse.addAssign(t.mul(uw({diffuseColor:d_})))}indirectSpecular(e){const{radiance:t,iblIrradiance:i,reflectedLight:n}=e.context;if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(i.mul(v_,iE({normal:jb,viewDir:Fb,roughness:x_}))),!0===this.clearcoat){const e=$b.dot(Fb).clamp(),t=Ew({dotNV:e,specularColor:nE,specularF90:rE,roughness:__});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=Kg().toVar("singleScattering"),s=Kg().toVar("multiScattering"),a=i.mul(1/Math.PI);this.computeMultiscattering(r,s,R_);const o=r.add(s),l=d_.mul(o.r.max(o.g).max(o.b).oneMinus());n.indirectSpecular.addAssign(t.mul(r)),n.indirectSpecular.addAssign(s.mul(a)),n.indirectDiffuse.addAssign(l.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:i}=e.context,n=jb.dot(Fb).clamp().add(t),r=m_.mul(-16).oneMinus().negate().exp2(),s=t.sub(n.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(t),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(t),i.indirectDiffuse.mulAssign(t),i.indirectSpecular.mulAssign(s)}finish({context:e}){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=$b.dot(Fb).clamp(),i=lw({dotVH:e,f0:nE,f90:rE}),n=t.mul(g_.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(g_));t.assign(n)}if(!0===this.sheen){const e=v_.r.max(v_.g).max(v_.b).mul(.157).oneMinus(),i=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(i)}}}const aE=Gg(1),oE=Gg(-2),lE=Gg(.8),uE=Gg(-1),cE=Gg(.4),hE=Gg(2),dE=Gg(.305),pE=Gg(3),mE=Gg(.21),fE=Gg(4),gE=Gg(4),_E=Gg(16),vE=Fg((([e])=>{const t=Kg(ex(e)).toVar(),i=Gg(-1).toVar();return Vg(t.x.greaterThan(t.z),(()=>{Vg(t.x.greaterThan(t.y),(()=>{i.assign(Gx(e.x.greaterThan(0),0,3))})).Else((()=>{i.assign(Gx(e.y.greaterThan(0),1,4))}))})).Else((()=>{Vg(t.z.greaterThan(t.y),(()=>{i.assign(Gx(e.z.greaterThan(0),2,5))})).Else((()=>{i.assign(Gx(e.y.greaterThan(0),1,4))}))})),i})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),xE=Fg((([e,t])=>{const i=Xg().toVar();return Vg(t.equal(0),(()=>{i.assign(Xg(e.z,e.y).div(ex(e.x)))})).ElseIf(t.equal(1),(()=>{i.assign(Xg(e.x.negate(),e.z.negate()).div(ex(e.y)))})).ElseIf(t.equal(2),(()=>{i.assign(Xg(e.x.negate(),e.y).div(ex(e.z)))})).ElseIf(t.equal(3),(()=>{i.assign(Xg(e.z.negate(),e.y).div(ex(e.x)))})).ElseIf(t.equal(4),(()=>{i.assign(Xg(e.x.negate(),e.z).div(ex(e.y)))})).Else((()=>{i.assign(Xg(e.x,e.y).div(ex(e.z)))})),rv(.5,i.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),yE=Fg((([e])=>{const t=Gg(0).toVar();return Vg(e.greaterThanEqual(lE),(()=>{t.assign(aE.sub(e).mul(uE.sub(oE)).div(aE.sub(lE)).add(oE))})).ElseIf(e.greaterThanEqual(cE),(()=>{t.assign(lE.sub(e).mul(hE.sub(uE)).div(lE.sub(cE)).add(uE))})).ElseIf(e.greaterThanEqual(dE),(()=>{t.assign(cE.sub(e).mul(pE.sub(hE)).div(cE.sub(dE)).add(hE))})).ElseIf(e.greaterThanEqual(mE),(()=>{t.assign(dE.sub(e).mul(fE.sub(pE)).div(dE.sub(mE)).add(pE))})).Else((()=>{t.assign(Gg(-2).mul(kv(rv(1.16,e))))})),t})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),bE=Fg((([e,t])=>{const i=e.toVar();i.assign(rv(2,i).sub(1));const n=Kg(i,1).toVar();return Vg(t.equal(0),(()=>{n.assign(n.zyx)})).ElseIf(t.equal(1),(()=>{n.assign(n.xzy),n.xz.mulAssign(-1)})).ElseIf(t.equal(2),(()=>{n.x.mulAssign(-1)})).ElseIf(t.equal(3),(()=>{n.assign(n.zyx),n.xz.mulAssign(-1)})).ElseIf(t.equal(4),(()=>{n.assign(n.xzy),n.xy.mulAssign(-1)})).ElseIf(t.equal(5),(()=>{n.z.mulAssign(-1)})),n})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),TE=Fg((([e,t,i,n,r,s])=>{const a=Gg(i),o=Kg(t),l=Nx(yE(a),oE,s),u=$v(l),c=Wv(l),h=Kg(SE(e,o,c,n,r,s)).toVar();return Vg(u.notEqual(0),(()=>{const t=Kg(SE(e,o,c.add(1),n,r,s)).toVar();h.assign(Cx(h,t,u))})),h})),SE=Fg((([e,t,i,n,r,s])=>{const a=Gg(i).toVar(),o=Kg(t),l=Gg(vE(o)).toVar(),u=Gg(fx(gE.sub(a),0)).toVar();a.assign(fx(a,gE));const c=Gg(Vv(a)).toVar(),h=Xg(xE(o,l).mul(c.sub(2)).add(1)).toVar();return Vg(l.greaterThan(2),(()=>{h.y.addAssign(c),l.subAssign(3)})),h.x.addAssign(l.mul(c)),h.x.addAssign(u.mul(rv(3,_E))),h.y.addAssign(rv(4,Vv(s).sub(c))),h.x.mulAssign(n),h.y.mulAssign(r),e.sample(h).grad(Xg(),Xg())})),ME=Fg((({envMap:e,mipInt:t,outputDirection:i,theta:n,axis:r,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const l=Yv(n),u=i.mul(l).add(r.cross(i).mul(qv(n))).add(r.mul(r.dot(i).mul(l.oneMinus())));return SE(e,u,t,s,a,o)})),wE=Fg((({n:e,latitudinal:t,poleAxis:i,outputDirection:n,weights:r,samples:s,dTheta:a,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:h})=>{const d=Kg(Gx(t,i,bx(i,n))).toVar();Vg(d.equal(Kg(0)),(()=>{d.assign(Kg(n.z,0,n.x.negate()))})),d.assign(Xv(d));const p=Kg().toVar();return p.addAssign(r.element(0).mul(ME({theta:0,axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:h}))),WS({start:Hg(1),end:e},(({i:e})=>{Vg(e.greaterThanEqual(s),(()=>{jS()}));const t=Gg(a.mul(Gg(e))).toVar();p.addAssign(r.element(e).mul(ME({theta:t.mul(-1),axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:h}))),p.addAssign(r.element(e).mul(ME({theta:t,axis:d,outputDirection:n,mipInt:o,envMap:l,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:h})))})),e_(p,1)})),EE=[.125,.215,.35,.446,.526,.582],AE=20,RE=new Nl(-1,1,1,-1,0,1),CE=new Ir(90,1),NE=new Bn;let PE=null,LE=0,IE=0;const DE=(1+Math.sqrt(5))/2,UE=1/DE,FE=[new fi(-DE,UE,0),new fi(DE,UE,0),new fi(-UE,0,DE),new fi(UE,0,DE),new fi(0,DE,-UE),new fi(0,DE,UE),new fi(-1,1,-1),new fi(1,1,-1),new fi(-1,1,1),new fi(1,1,1)],OE=new fi,BE=new WeakMap,VE=[3,1,5,0,4,2],zE=bE(zy(),Vy("faceIndex")).normalize(),kE=Kg(zE.x,zE.y,zE.z);class GE{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,i=.1,n=100,r={}){const{size:s=256,position:a=OE,renderTarget:o=null}=r;if(this._setSize(s),!1===this._hasInitialized){const s=o||this._allocateTargets();return r.renderTarget=s,this.fromSceneAsync(e,t,i,n,r),s}PE=this._renderer.getRenderTarget(),LE=this._renderer.getActiveCubeFace(),IE=this._renderer.getActiveMipmapLevel();const l=o||this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}async fromSceneAsync(e,t=0,i=.1,n=100,r={}){return!1===this._hasInitialized&&await this._renderer.init(),this.fromScene(e,t,i,n,r)}fromEquirectangular(e,t=null){if(!1===this._hasInitialized){this._setSizeFromTexture(e);const i=t||this._allocateTargets();return this.fromEquirectangularAsync(e,i),i}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(!1===this._hasInitialized){this._setSizeFromTexture(e);const i=t||this._allocateTargets();return this.fromCubemapAsync(e,t),i}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return!1===this._hasInitialized&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=XE(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=$E(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===H||e.mapping===W?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(PE,LE,IE),e.scissorTest=!1,WE(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),PE=this._renderer.getRenderTarget(),LE=this._renderer.getActiveCubeFace(),IE=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ee,minFilter:ee,generateMipmaps:!1,type:ce,format:_e,colorSpace:pt},n=HE(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=HE(e,t,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],i=[],n=[],r=[];let s=e;const a=e-4+1+EE.length;for(let o=0;o<a;o++){const a=Math.pow(2,s);i.push(a);let l=1/a;o>e-4?l=EE[o-e+4-1]:0===o&&(l=0),n.push(l);const u=1/(a-2),c=-u,h=1+u,d=[c,c,h,c,h,h,c,c,h,h,c,h],p=6,m=6,f=3,g=2,_=1,v=new Float32Array(f*m*p),x=new Float32Array(g*m*p),y=new Float32Array(_*m*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,i=e>2?0:-1,n=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0],r=VE[e];v.set(n,f*m*r),x.set(d,g*m*r);const s=[r,r,r,r,r,r];y.set(s,_*m*r)}const b=new ur;b.setAttribute("position",new Zn(v,f)),b.setAttribute("uv",new Zn(x,g)),b.setAttribute("faceIndex",new Zn(y,_)),t.push(b),r.push(new br(b,null)),s>4&&s--}return{lodPlanes:t,sizeLods:i,sigmas:n,lodMeshes:r}}(n)),this._blurMaterial=function(e,t,i){const n=Qy(new Array(AE).fill(0)),r=$_(new fi(0,1,0)),s=$_(0),a=Gg(AE),o=$_(0),l=$_(1),u=Xy(null),c=$_(0),h=Gg(1/t),d=Gg(1/i),p=Gg(e),m={n:a,latitudinal:o,weights:n,poleAxis:r,outputDirection:kE,dTheta:s,samples:l,envMap:u,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:p},f=jE("blur");return f.fragmentNode=wE({...m,latitudinal:o.equal(1)}),BE.set(f,m),f}(n,e,t)}return n}async _compileMaterial(e){const t=new br(this._lodPlanes[0],e);await this._renderer.compile(t,RE)}_sceneToCubeUV(e,t,i,n,r){const s=CE;s.near=t,s.far=i;const a=[1,1,1,1,-1,1],o=[1,-1,1,-1,1,-1],l=this._renderer,u=l.autoClear;l.getClearColor(NE),l.autoClear=!1;let c=this._backgroundBox;if(null===c){const e=new Gn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1});c=new br(new Sr,e)}let h=!1;const d=e.background;d?d.isColor&&(c.material.color.copy(d),e.background=null,h=!0):(c.material.color.copy(NE),h=!0),l.setRenderTarget(n),l.clear(),h&&l.render(c,s);for(let p=0;p<6;p++){const t=p%3;0===t?(s.up.set(0,a[p],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x+o[p],r.y,r.z)):1===t?(s.up.set(0,0,a[p]),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y+o[p],r.z)):(s.up.set(0,a[p],0),s.position.set(r.x,r.y,r.z),s.lookAt(r.x,r.y,r.z+o[p]));const i=this._cubeSize;WE(n,t*i,p>2?i:0,i,i),l.render(e,s)}l.autoClear=u,e.background=d}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===H||e.mapping===W;n?null===this._cubemapMaterial&&(this._cubemapMaterial=XE(e)):null===this._equirectMaterial&&(this._equirectMaterial=$E(e));const r=n?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const s=this._lodMeshes[0];s.material=r;const a=this._cubeSize;WE(t,0,0,3*a,2*a),i.setRenderTarget(t),i.render(s,RE)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const t=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),i=FE[(n-r-1)%FE.length];this._blur(e,r-1,r,t,i)}t.autoClear=i}_blur(e,t,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,s,a){const o=this._renderer,l=this._blurMaterial,u=this._lodMeshes[n];u.material=l;const c=BE.get(l),h=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):AE,f=[];let g=0;for(let x=0;x<AE;++x){const e=x/p,t=Math.exp(-e*e/2);f.push(t),0===x?g+=t:x<m&&(g+=2*t)}for(let x=0;x<f.length;x++)f[x]=f[x]/g;e.texture.frame=(e.texture.frame||0)+1,c.envMap.value=e.texture,c.samples.value=m,c.weights.array=f,c.latitudinal.value="latitudinal"===s?1:0,a&&(c.poleAxis.value=a);const{_lodMax:_}=this;c.dTheta.value=d,c.mipInt.value=_-i;const v=this._sizeLods[n];WE(t,3*v*(n>_-4?n-_+4:0),4*(this._cubeSize-v),3*v,2*v),o.setRenderTarget(t),o.render(u,RE)}}function HE(e,t,i){const n=new ci(e,t,i);return n.texture.mapping=$,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function WE(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function jE(e){const t=new OM;return t.depthTest=!1,t.depthWrite=!1,t.blending=0,t.name=`PMREM_${e}`,t}function XE(e){const t=jE("cubemap");return t.fragmentNode=aT(e,kE),t}function $E(e){const t=jE("equirect");return t.fragmentNode=Xy(e,YM(kE),0),t}const qE=new WeakMap;function YE(e,t,i){const n=function(e){let t=qE.get(e);void 0===t&&(t=new WeakMap,qE.set(e,t));return t}(t);let r=n.get(e);if((void 0!==r?r.pmremVersion:-1)!==e.pmremVersion){const t=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const i=6;for(let n=0;n<i;n++)void 0!==e[n]&&t++;return t===i}(t))return null;r=i.fromCubemap(e,r)}else{if(!function(e){return null!=e&&e.height>0}(t))return null;r=i.fromEquirectangular(e,r)}r.pmremVersion=e.pmremVersion,n.set(e,r)}return r.texture}class KE extends jf{static get type(){return"PMREMNode"}constructor(e,t=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=i,this._generator=null;const n=new li;n.isRenderTargetTexture=!0,this._texture=Xy(n),this._width=$_(0),this._height=$_(0),this._maxMip=$_(0),this.updateBeforeType=Uf.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const i=t?t.pmremVersion:-1,n=this._value;i!==n.pmremVersion&&(t=!0===n.isPMREMTexture?n:YE(n,e.renderer,this._generator),null!==t&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){null===this._generator&&(this._generator=new GE(e.renderer)),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this)),t=eT.mul(Kg(t.x,t.y.negate(),t.z));let i=this.levelNode;return null===i&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),TE(this._texture,t,i,this._width,this._height,this._maxMip)}dispose(){super.dispose(),null!==this._generator&&this._generator.dispose()}}const ZE=Ig(KE).setParameterLength(1,3),QE=new WeakMap;class JE extends ZS{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const e=i.isTextureNode?i.value:t[i.property];let n=QE.get(e);void 0===n&&(n=ZE(e),QE.set(e,n)),i=n}const n=!0===t.useAnisotropy||t.anisotropy>0?RT:jb,r=i.context(eA(m_,n)).mul(Jb),s=i.context(tA(Xb)).mul(Math.PI).mul(Jb),a=wy(r),o=wy(s);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(o);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=i.context(eA(__,$b)).mul(Jb),t=wy(e);l.addAssign(t)}}}const eA=(e,t)=>{let i=null;return{getUV:()=>(null===i&&(i=Fb.negate().reflect(t),i=e.mul(e).mix(i,t).normalize(),i=i.transformDirection(sb)),i),getTextureLevel:()=>e}},tA=e=>({getUV:()=>e,getTextureLevel:()=>Gg(1)}),iA=new Io;class nA extends OM{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(iA),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new JE(t):null}setupLightingModel(){return new sE}setupSpecular(){const e=Cx(Kg(.04),d_.rgb,f_);A_.assign(e),R_.assign(1)}setupVariants(){const e=this.metalnessNode?Gg(this.metalnessNode):YT;f_.assign(e);let t=this.roughnessNode?Gg(this.roughnessNode):qT;t=vw({roughness:t}),m_.assign(t),this.setupSpecular(),d_.assign(e_(d_.rgb.mul(e.oneMinus()),d_.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const rA=new Do;class sA extends nA{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(rA),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?Gg(this.iorNode):uS;D_.assign(e),A_.assign(Cx(mx(Sx(D_.sub(1).div(D_.add(1))).mul(jT),Kg(1)).mul(WT),d_.rgb,f_)),R_.assign(Cx(WT,1,f_))}setupLightingModel(){return new sE(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?Gg(this.clearcoatNode):ZT,t=this.clearcoatRoughnessNode?Gg(this.clearcoatRoughnessNode):QT;g_.assign(e),__.assign(vw({roughness:t}))}if(this.useSheen){const e=this.sheenNode?Kg(this.sheenNode):tS,t=this.sheenRoughnessNode?Gg(this.sheenRoughnessNode):iS;v_.assign(e),x_.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?Gg(this.iridescenceNode):rS,t=this.iridescenceIORNode?Gg(this.iridescenceIORNode):sS,i=this.iridescenceThicknessNode?Gg(this.iridescenceThicknessNode):aS;y_.assign(e),b_.assign(t),T_.assign(i)}if(this.useAnisotropy){const e=(this.anisotropyNode?Xg(this.anisotropyNode):nS).toVar();M_.assign(e.length()),Vg(M_.equal(0),(()=>{e.assign(Xg(1,0))})).Else((()=>{e.divAssign(Xg(M_)),M_.assign(M_.saturate())})),S_.assign(M_.pow2().mix(m_.pow2(),1)),w_.assign(ET[0].mul(e.x).add(ET[1].mul(e.y))),E_.assign(ET[1].mul(e.x).sub(ET[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?Gg(this.transmissionNode):oS,t=this.thicknessNode?Gg(this.thicknessNode):lS,i=this.attenuationDistanceNode?Gg(this.attenuationDistanceNode):cS,n=this.attenuationColorNode?Kg(this.attenuationColorNode):hS;if(U_.assign(e),F_.assign(t),O_.assign(i),B_.assign(n),this.useDispersion){const e=this.dispersionNode?Gg(this.dispersionNode):vS;V_.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Kg(this.clearcoatNormalNode):JT}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const aA=Fg((({normal:e,lightDirection:t,builder:i})=>{const n=e.dot(t),r=Xg(n.mul(.5).add(.5),0);if(i.material.gradientMap){const e=dT("gradientMap","texture").context({getUV:()=>r});return Kg(e.r)}{const e=r.fwidth().mul(.5);return Cx(Kg(.7),Kg(1),Ix(Gg(.7).sub(e.x),Gg(.7).add(e.x),r.x))}}));class oA extends rw{direct({lightDirection:e,lightColor:t,reflectedLight:i},n){const r=aA({normal:zb,lightDirection:e,builder:n}).mul(t);i.directDiffuse.addAssign(r.mul(uw({diffuseColor:d_.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:i,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(i.mul(uw({diffuseColor:d_}))),n.indirectDiffuse.mulAssign(t)}}const lA=new Fo;class uA extends OM{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(lA),this.setValues(e)}setupLightingModel(){return new oA}}class cA extends jf{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Kg(Fb.z,0,Fb.x.negate()).normalize(),t=Fb.cross(e);return Xg(e.dot(jb),t.dot(jb)).mul(.495).add(.5)}}const hA=Dg(cA),dA=new ko;class pA extends OM{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(dA),this.setValues(e)}setupVariants(e){const t=hA;let i;i=e.material.matcap?dT("matcap","texture").context({getUV:()=>t}):Kg(Cx(.2,.8,t.y)),d_.rgb.mulAssign(i.rgb)}}class mA extends jf{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:i}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),n=t.sin();return r_(e,n,n.negate(),e).mul(i)}{const e=t,n=a_(e_(1,0,0,0),e_(0,Yv(e.x),qv(e.x).negate(),0),e_(0,qv(e.x),Yv(e.x),0),e_(0,0,0,1)),r=a_(e_(Yv(e.y),0,qv(e.y),0),e_(0,1,0,0),e_(qv(e.y).negate(),0,Yv(e.y),0),e_(0,0,0,1)),s=a_(e_(Yv(e.z),qv(e.z).negate(),0,0),e_(qv(e.z),Yv(e.z),0,0),e_(0,0,1,0),e_(0,0,0,1));return n.mul(r).mul(s).mul(e_(i,1)).xyz}}}const fA=Ig(mA).setParameterLength(2),gA=new Xr;class _A extends OM{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(gA),this.setValues(e)}setupPositionView(e){const{object:t,camera:i}=e,n=this.sizeAttenuation,{positionNode:r,rotationNode:s,scaleNode:a}=this,o=Eb.mul(Kg(r||0));let l=Xg(xb[0].xyz.length(),xb[1].xyz.length());if(null!==a&&(l=l.mul(Xg(a))),!1===n)if(i.isPerspectiveCamera)l=l.mul(o.z.negate());else{const e=Gg(2).div(nb.element(1).element(1));l=l.mul(e.mul(2))}let u=Nb.xy;if(t.center&&!0===t.center.isVector2){const e=((e,t,i)=>Ng(new hy(e,t,i)))("center","vec2",t);u=u.sub(e.sub(.5))}u=u.mul(l);const c=Gg(s||eS),h=fA(u,c);return e_(o.xy.add(h),o.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const vA=new ia;class xA extends _A{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(vA),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return Eb.mul(Kg(e||Pb)).xyz}setupVertex(e){const t=super.setupVertex(e);if(!0!==e.material.isNodeMaterial)return t;const{rotationNode:i,scaleNode:n,sizeNode:r}=this,s=Nb.xy.toVar(),a=lM.z.div(lM.w);if(i&&i.isNode){const e=Gg(i);s.assign(fA(s,e))}let o=null!==r?Xg(r):_S;return!0===this.sizeAttenuation&&(o=o.mul(o.div(Ub.z.negate()))),n&&n.isNode&&(o=o.mul(Xg(n))),s.mulAssign(o.mul(2)),s.assign(s.div(lM.z)),s.y.assign(s.y.mul(a)),s.assign(s.mul(t.w)),t.addAssign(e_(s,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}class yA extends rw{constructor(){super(),this.shadowNode=Gg(1).toVar("shadowMask")}direct({lightNode:e}){this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){d_.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(d_.rgb)}}const bA=new Po;class TA extends OM{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(bA),this.setValues(e)}setupLightingModel(){return new yA}}c_("vec3"),c_("vec3"),c_("vec3");class SA{constructor(e,t){this.nodes=e,this.info=t,this._context="undefined"!=typeof self?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,i)=>{this._requestId=this._context.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this._animationLoop&&this._animationLoop(t,i)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class MA{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let i=0;i<e.length-1;i++)if(t=t.get(e[i]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let i=this.weakMap;for(let n=0;n<e.length-1;n++){const t=e[n];!1===i.has(t)&&i.set(t,new WeakMap),i=i.get(t)}return i.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let i=0;i<e.length-1;i++)if(t=t.get(e[i]),void 0===t)return!1;return t.delete(e[e.length-1])}}let wA=0;class EA{constructor(e,t,i,n,r,s,a,o,l,u){this.id=wA++,this._nodes=e,this._geometries=t,this.renderer=i,this.object=n,this.material=r,this.scene=s,this.camera=a,this.lightsNode=o,this.context=l,this.geometry=n.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=null!==u?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return null!==this.clippingContext&&this.clippingContext.cacheKey!==this.clippingContextCacheKey&&(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return!0===this.material.hardwareClipping?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,i=[],n=new Set;for(const r of e){const e=r.node&&r.node.attribute?r.node.attribute:t.getAttribute(r.name);if(void 0===e)continue;i.push(e);const s=e.isInterleavedBufferAttribute?e.data:e;n.add(s)}return this.attributes=i,this.vertexBuffers=Array.from(n.values()),i}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:i,group:n,drawRange:r}=this,s=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),o=null!==a;let l=1;if(!0===i.isInstancedBufferGeometry?l=i.instanceCount:void 0!==e.count&&(l=Math.max(0,e.count)),0===l)return null;if(s.instanceCount=l,!0===e.isBatchedMesh)return s;let u=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(u=2);let c=r.start*u,h=(r.start+r.count)*u;null!==n&&(c=Math.max(c,n.start*u),h=Math.min(h,(n.start+n.count)*u));const d=i.attributes.position;let p=1/0;o?p=a.count:null!=d&&(p=d.count),c=Math.max(c,0),h=Math.min(h,p);const m=h-c;return m<0||m===1/0?null:(s.vertexCount=m,s.firstVertex=c,s)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const i of Object.keys(e.attributes).sort()){const n=e.attributes[i];t+=i+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}for(const i of Object.keys(e.morphAttributes).sort()){const n=e.morphAttributes[i];t+="morph-"+i+",";for(let e=0,i=n.length;e<i;e++){t+=n[e].id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let i=t.customProgramCacheKey();for(const n of function(e){const t=Object.keys(e);let i=Object.getPrototypeOf(e);for(;i;){const e=Object.getOwnPropertyDescriptors(i);for(const i in e)if(void 0!==e[i]){const n=e[i];n&&"function"==typeof n.get&&t.push(i)}i=Object.getPrototypeOf(i)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const e=t[n];let r;if(null!==e){const t=typeof e;"number"===t?r=0!==e?"1":"0":"object"===t?(r="{",e.isTexture&&(r+=e.mapping),r+="}"):r=String(e)}else r=String(e);i+=r+","}return i+=this.clippingContextCacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(i+=e._colorsTexture.uuid+",")),e.count>1&&(i+=e.uuid+","),i+=e.receiveShadow+",",xf(i)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return!0!==this.material.isShadowPassMaterial&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=bf(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=bf(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const AA=[];class RA{constructor(e,t,i,n,r,s){this.renderer=e,this.nodes=t,this.geometries=i,this.pipelines=n,this.bindings=r,this.info=s,this.chainMaps={}}get(e,t,i,n,r,s,a,o){const l=this.getChainMap(o);AA[0]=e,AA[1]=t,AA[2]=s,AA[3]=r;let u=l.get(AA);return void 0===u?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,i,n,r,s,a,o),l.set(AA,u)):(u.updateClipping(a),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,i,n,r,s,a,o)):u.version=t.version)),AA.length=0,u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new MA)}dispose(){this.chainMaps={}}createRenderObject(e,t,i,n,r,s,a,o,l,u,c){const h=this.getChainMap(c),d=new EA(e,t,i,n,r,s,a,o,l,u);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),h.delete(d.getChainArray())},d}}class CA{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const NA=1,PA=2,LA=3,IA=4,DA=16;class UA extends CA{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return null!==t&&this.backend.destroyAttribute(e),t}update(e,t){const i=this.get(e);if(void 0===i.version)t===NA?this.backend.createAttribute(e):t===PA?this.backend.createIndexAttribute(e):t===LA?this.backend.createStorageAttribute(e):t===IA&&this.backend.createIndirectStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(i.version<t.version||t.usage===Et)&&(this.backend.updateAttribute(e),i.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function FA(e){return null!==e.index?e.index.version:e.attributes.position.version}function OA(e){const t=[],i=e.index,n=e.attributes.position;if(null!==i){const e=i.array;for(let i=0,n=e.length;i<n;i+=3){const n=e[i+0],r=e[i+1],s=e[i+2];t.push(n,r,r,s,s,n)}}else{for(let e=0,i=n.array.length/3-1;e<i;e+=3){const i=e+0,n=e+1,r=e+2;t.push(i,n,n,r,r,i)}}const r=new(jt(t)?Jn:Qn)(t,1);return r.version=FA(e),r}class BA extends CA{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const n=t.index,r=e.getAttributes();null!==n&&this.attributes.delete(n);for(const e of r)this.attributes.delete(e);const s=this.wireframes.get(t);void 0!==s&&this.attributes.delete(s),t.removeEventListener("dispose",i)};t.addEventListener("dispose",i)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,LA):this.updateAttribute(r,NA);const i=this.getIndex(e);null!==i&&this.updateAttribute(i,PA);const n=e.geometry.indirect;null!==n&&this.updateAttribute(n,IA)}updateAttribute(e,t){const i=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e,i))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:i}=e;let n=t.index;if(!0===i.wireframe){const e=this.wireframes;let i=e.get(t);void 0===i?(i=OA(t),e.set(t,i)):i.version!==FA(t)&&(this.attributes.delete(i),i=OA(t),e.set(t,i)),n=i}return n}}class VA{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(t/3):e.isPoints?this.render.points+=i*t:e.isLineSegments?this.render.lines+=i*(t/2):e.isLine&&(this.render.lines+=i*(t-1))}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class zA{constructor(e){this.cacheKey=e,this.usedTimes=0}}class kA extends zA{constructor(e,t,i){super(e),this.vertexProgram=t,this.fragmentProgram=i}}class GA extends zA{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let HA=0;class WA{constructor(e,t,i,n=null,r=null){this.id=HA++,this.code=e,this.stage=t,this.name=i,this.transforms=n,this.attributes=r,this.usedTimes=0}}class jA extends CA{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:i}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const s=this.nodes.getForCompute(e);let a=this.programs.compute.get(s.computeShader);void 0===a&&(r&&0===r.computeProgram.usedTimes&&this._releaseProgram(r.computeProgram),a=new WA(s.computeShader,"compute",e.name,s.transforms,s.nodeAttributes),this.programs.compute.set(s.computeShader,a),i.createProgram(a));const o=this._getComputeCacheKey(e,a);let l=this.caches.get(o);void 0===l&&(r&&0===r.usedTimes&&this._releasePipeline(r),l=this._getComputePipeline(e,a,o,t)),l.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=l}return n.pipeline}getForRender(e,t=null){const{backend:i}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const s=e.getNodeBuilderState(),a=e.material?e.material.name:"";let o=this.programs.vertex.get(s.vertexShader);void 0===o&&(r&&0===r.vertexProgram.usedTimes&&this._releaseProgram(r.vertexProgram),o=new WA(s.vertexShader,"vertex",a),this.programs.vertex.set(s.vertexShader,o),i.createProgram(o));let l=this.programs.fragment.get(s.fragmentShader);void 0===l&&(r&&0===r.fragmentProgram.usedTimes&&this._releaseProgram(r.fragmentProgram),l=new WA(s.fragmentShader,"fragment",a),this.programs.fragment.set(s.fragmentShader,l),i.createProgram(l));const u=this._getRenderCacheKey(e,o,l);let c=this.caches.get(u);void 0===c?(r&&0===r.usedTimes&&this._releasePipeline(r),c=this._getRenderPipeline(e,o,l,u,t)):e.pipeline=c,c.usedTimes++,o.usedTimes++,l.usedTimes++,n.pipeline=c}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,i,n){i=i||this._getComputeCacheKey(e,t);let r=this.caches.get(i);return void 0===r&&(r=new GA(i,t),this.caches.set(i,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(e,t,i,n,r){n=n||this._getRenderCacheKey(e,t,i);let s=this.caches.get(n);return void 0===s&&(s=new kA(n,t,i),this.caches.set(n,s),e.pipeline=s,this.backend.createRenderPipeline(e,r)),s}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,i){return t.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,i=e.stage;this.programs[i].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class XA extends CA{constructor(e,t,i,n,r,s){super(),this.backend=e,this.textures=i,this.pipelines=r,this.attributes=n,this.nodes=t,this.info=s,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const i of t){const e=this.get(i);void 0===e.bindGroup&&(this._init(i),this.backend.createBindings(i,t,0),e.bindGroup=i)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const i of t){const e=this.get(i);void 0===e.bindGroup&&(this._init(i),this.backend.createBindings(i,t,0),e.bindGroup=i)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute,i=e.isIndirectStorageBufferAttribute?IA:LA;this.attributes.update(e,i)}}_update(e,t){const{backend:i}=this;let n=!1,r=!0,s=0,a=0;for(const o of e.bindings){if(o.isNodeUniformsGroup){if(!1===this.nodes.updateGroup(o))continue}if(o.isStorageBuffer){const e=o.attribute,t=e.isIndirectStorageBufferAttribute?IA:LA;this.attributes.update(e,t)}if(o.isUniformBuffer){o.update()&&i.updateBinding(o)}else if(o.isSampler)o.update();else if(o.isSampledTexture){const e=this.textures.get(o.texture);o.needsBindingsUpdate(e.generation)&&(n=!0);const t=o.update(),l=o.texture;t&&this.textures.updateTexture(l);const u=i.get(l);if(void 0!==u.externalTexture||e.isDefaultTexture?r=!1:(s=10*s+l.id,a+=l.version),!0===i.isWebGPUBackend&&void 0===u.texture&&void 0===u.externalTexture&&(this.textures.updateTexture(l),n=!0),!0===l.isStorageTexture){const e=this.get(l);!0===o.store?e.needsMipmap=!0:this.textures.needsMipmaps(l)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(l),e.needsMipmap=!1)}}}!0===n&&this.backend.updateBindings(e,t,r?s:0,a)}}function $A(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?e.z-t.z:e.id-t.id}function qA(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function YA(e){return(e.transmission>0||e.transmissionNode)&&2===e.side&&!1===e.forceSinglePass}class KA{constructor(e,t,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,i),this.lightsArray=[],this.scene=t,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,i,n,r,s,a){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:i,groupOrder:n,renderOrder:e.renderOrder,z:r,group:s,clippingContext:a},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=i,o.groupOrder=n,o.renderOrder=e.renderOrder,o.z=r,o.group=s,o.clippingContext=a),this.renderItemsIndex++,o}push(e,t,i,n,r,s,a){const o=this.getNextRenderItem(e,t,i,n,r,s,a);!0===e.occlusionTest&&this.occlusionQueryCount++,!0===i.transparent||i.transmission>0?(YA(i)&&this.transparentDoublePass.push(o),this.transparent.push(o)):this.opaque.push(o)}unshift(e,t,i,n,r,s,a){const o=this.getNextRenderItem(e,t,i,n,r,s,a);!0===i.transparent||i.transmission>0?(YA(i)&&this.transparentDoublePass.unshift(o),this.transparent.unshift(o)):this.opaque.unshift(o)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||$A),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||qA),this.transparent.length>1&&this.transparent.sort(t||qA)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null,t.clippingContext=null}}}const ZA=[];class QA{constructor(e){this.lighting=e,this.lists=new MA}get(e,t){const i=this.lists;ZA[0]=e,ZA[1]=t;let n=i.get(ZA);return void 0===n&&(n=new KA(this.lighting,e,t),i.set(ZA,n)),ZA.length=0,n}dispose(){this.lists=new MA}}let JA=0;class eR{constructor(){this.id=JA++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new ui,this.scissor=!1,this.scissorValue=new ui,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return tR(this)}}function tR(e){const{textures:t,activeCubeFace:i}=e,n=[i];for(const r of t)n.push(r.id);return yf(n)}const iR=[],nR=new Gr,rR=new Cr;class sR{constructor(){this.chainMaps={}}get(e,t,i=null){let n;if(iR[0]=e,iR[1]=t,null===i)n="default";else{const e=i.texture.format;n=`${i.textures.length}:${e}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const r=this._getChainMap(n);let s=r.get(iR);return void 0===s&&(s=new eR,r.set(iR,s)),iR.length=0,null!==i&&(s.sampleCount=0===i.samples?1:i.samples),s}getForClear(e=null){return this.get(nR,rR,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new MA)}dispose(){this.chainMaps={}}}const aR=new fi;class oR extends CA{constructor(e,t,i){super(),this.renderer=e,this.backend=t,this.info=i}updateRenderTarget(e,t=0){const i=this.get(e),n=0===e.samples?1:e.samples,r=i.depthTextureMips||(i.depthTextureMips={}),s=e.textures,a=this.getSize(s[0]),o=a.width>>t,l=a.height>>t;let u=e.depthTexture||r[t];const c=!0===e.depthBuffer||!0===e.stencilBuffer;let h=!1;void 0===u&&c&&(u=!0===e.multiview&&a.depth>1?new pa:new da,u.format=e.stencilBuffer?xe:ve,u.type=e.stencilBuffer?pe:le,u.image.width=o,u.image.height=l,u.image.depth=a.depth,r[t]=u),i.width===a.width&&a.height===i.height||(h=!0,u&&(u.needsUpdate=!0,u.image.width=o,u.image.height=l,u.image.depth=u.isDepthArrayTexture?u.image.depth:1)),i.width=a.width,i.height=a.height,i.textures=s,i.depthTexture=u||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==n&&(h=!0,u&&(u.needsUpdate=!0),i.sampleCount=n);const d={sampleCount:n};if(!0!==e.isXRRenderTarget){for(let t=0;t<s.length;t++){const i=s[t];i.isTextureArray=!0===e.multiview&&a.depth>1,h&&(i.needsUpdate=!0),this.updateTexture(i,d)}u&&this.updateTexture(u,d)}if(!0!==i.initialized){i.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<s.length;e++)this._destroyTexture(s[e]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const i=this.get(e);if(!0===i.initialized&&i.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(n&&!0===i.initialized&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:ne}const{width:s,height:a,depth:o}=this.getSize(e);if(t.width=s,t.height=a,t.depth=o,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,s,a):1,n||!0===e.isStorageTexture)r.createSampler(e),r.createTexture(e,t),i.generation=e.version;else{if(!0!==i.initialized&&r.createSampler(e),e.version>0){const n=e.image;if(void 0===n);else if(!1===n.complete);else{if(e.images){const i=[];for(const t of e.images)i.push(t);t.images=i}else t.image=n;void 0!==i.isDefaultTexture&&!0!==i.isDefaultTexture||(r.createTexture(e,t),i.isDefaultTexture=!1,i.generation=e.version),!0===e.source.dataReady&&r.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&r.generateMipmaps(e)}}else r.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version}if(!0!==i.initialized){i.initialized=!0,i.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e)};e.addEventListener("dispose",t)}i.version=e.version}getSize(e,t=aR){let i=e.images?e.images[0]:e.image;return i?(void 0!==i.image&&(i=i.image),t.width=i.width||1,t.height=i.height||1,t.depth=e.isCubeTexture?6:i.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let n;return n=e.isCompressedTexture?e.mipmaps?e.mipmaps.length:1:Math.floor(Math.log2(Math.max(t,i)))+1,n}needsMipmaps(e){return!0===e.isCompressedTexture||e.generateMipmaps}_destroyTexture(e){!0===this.has(e)&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class lR extends Bn{constructor(e,t,i,n=1){super(e,t,i),this.a=n}set(e,t,i,n=1){return this.a=n,super.set(e,t,i)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class uR extends u_{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class cR extends Gf{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const i=new Cg(t);return this._currentCond=Gx(e,i),this.add(this._currentCond)}ElseIf(e,t){const i=new Cg(t),n=Gx(e,i);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new Cg(e),this}Switch(e){return this._expressionNode=Ng(e),this}Case(...e){const t=[];if(!(e.length>=2))throw new Error("TSL: Invalid parameter length. Case() requires at least two parameters.");for(let s=0;s<e.length-1;s++)t.push(this._expressionNode.equal(Ng(e[s])));const i=new Cg(e[e.length-1]);let n=t[0];for(let s=1;s<t.length;s++)n=n.or(t[s]);const r=Gx(n,i);return null===this._currentCond?(this._currentCond=r,this.add(this._currentCond)):(this._currentCond.elseNode=r,this._currentCond=r,this)}Default(e){return this.Else(e),this}build(e,...t){const i=Bg();Og(this);for(const n of this.nodes)n.build(e,"void");return Og(i),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return this.Else(...e)}elseif(...e){return this.ElseIf(...e)}}const hR=Ig(cR).setParameterLength(0,1);class dR extends Gf{static get type(){return"StructTypeNode"}constructor(e,t=null){var i;super("struct"),this.membersLayout=(i=e,Object.entries(i).map((([e,t])=>"string"==typeof t?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1}))),this.name=t,this.isStructLayoutNode=!0}getLength(){let e=0;for(const t of this.membersLayout)e+=Rf(t.type);return e}getMemberType(e,t){const i=this.membersLayout.find((e=>e.name===t));return i?i.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.addInclude(this)}generate(e){return this.getNodeType(e)}}class pR extends Gf{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structLayoutNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structLayoutNode.getNodeType(e)}getMemberType(e,t){return this.structLayoutNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),i=t.type,n=e.getPropertyName(t);return e.addLineFlowCode(`${n} = ${e.generateStruct(i,this.structLayoutNode.membersLayout,this.values)}`,this),t.name}}class mR extends Gf{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(void 0===t.membersLayout){const i=this.members,n=[];for(let t=0;t<i.length;t++){const r="m"+t,s=i[t].getNodeType(e);n.push({name:r,type:s,index:t})}t.membersLayout=n,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),i=this.members,n=""!==t?t+".":"";for(let r=0;r<i.length;r++){const t=i[r].build(e);e.addLineFlowCode(`${n}m${r} = ${t}`,this)}return t}}const fR=Ig(mR);function gR(e,t){for(let i=0;i<e.length;i++)if(e[i].name===t)return i;return-1}class _R extends mR{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return vR(t)}setup(e){const t=this.outputNodes,i=[],n=e.renderer.getRenderTarget().textures;for(const r in t){i[gR(n,r)]=e_(t[r])}return this.members=i,super.setup(e)}}const vR=Ig(_R),xR=Fg((([e])=>{const t=e.toUint().mul(747796405).add(2891336453),i=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return i.shiftRight(22).bitXor(i).toFloat().mul(1/2**32)})),yR=(e,t)=>Tx(rv(4,e.mul(nv(1,e))),t),bR=Fg((([e])=>e.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),TR=Fg((([e])=>Kg(bR(e.z.add(bR(e.y.mul(1)))),bR(e.z.add(bR(e.x.mul(1)))),bR(e.y.add(bR(e.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),SR=Fg((([e,t,i])=>{const n=Kg(e).toVar(),r=Gg(1.4).toVar(),s=Gg(0).toVar(),a=Kg(n).toVar();return WS({start:Gg(0),end:Gg(3),type:"float",condition:"<="},(()=>{const e=Kg(TR(a.mul(2))).toVar();n.addAssign(e.add(i.mul(Gg(.1).mul(t)))),a.mulAssign(1.8),r.mulAssign(1.5),n.mulAssign(1.2);const o=Gg(bR(n.z.add(bR(n.x.add(bR(n.y)))))).toVar();s.addAssign(o.div(r)),a.addAssign(.14)})),s})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class MR extends Gf{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let i=this._candidateFnCall;if(null===i){let n=null,r=-1;for(const i of this.functionNodes){const s=i.shaderNode.layout;if(null===s)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const a=s.inputs;if(t.length===a.length){let s=0;for(let i=0;i<t.length;i++){const n=t[i],r=a[i];n.getNodeType(e)===r.type?s++:s=0}s>r&&(n=i,r=s)}}this._candidateFnCall=i=n(...t)}return i}}const wR=Ig(MR),ER=e=>(...t)=>wR(e,...t),AR=$_(0).setGroup(W_).onRenderUpdate((e=>e.time)),RR=$_(0).setGroup(W_).onRenderUpdate((e=>e.deltaTime)),CR=$_(0,"uint").setGroup(W_).onRenderUpdate((e=>e.frameId)),NR=Fg((([e,t,i=Xg(.5)])=>fA(e.sub(i),t).add(i))),PR=Fg((([e,t,i=Xg(.5)])=>{const n=e.sub(i),r=n.dot(n),s=r.mul(r).mul(t);return e.add(n.mul(s))})),LR=Fg((({position:e=null,horizontal:t=!0,vertical:i=!1})=>{let n;null!==e?(n=xb.toVar(),n[3][0]=e.x,n[3][1]=e.y,n[3][2]=e.z):n=xb;const r=sb.mul(n);return Ag(t)&&(r[0][0]=xb[0].length(),r[0][1]=0,r[0][2]=0),Ag(i)&&(r[1][0]=0,r[1][1]=xb[1].length(),r[1][2]=0),r[2][0]=0,r[2][1]=0,r[2][2]=1,nb.mul(r).mul(Pb)})),IR=Fg((([e=null])=>{const t=CM();return CM(bM(e)).sub(t).lessThan(0).select(sM,e)}));class DR extends Gf{static get type(){return"SpriteSheetUVNode"}constructor(e,t=zy(),i=Gg(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=i}setup(){const{frameNode:e,uvNode:t,countNode:i}=this,{width:n,height:r}=i,s=e.mod(n.mul(r)).floor(),a=s.mod(n),o=r.sub(s.add(1).div(n).ceil()),l=i.reciprocal(),u=Xg(a,o);return t.add(u).mul(l)}}const UR=Ig(DR).setParameterLength(3);class FR extends Gf{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,i=null,n=Gg(1),r=Pb,s=kb){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=i,this.scaleNode=n,this.positionNode=r,this.normalNode=s}setup(){const{textureXNode:e,textureYNode:t,textureZNode:i,scaleNode:n,positionNode:r,normalNode:s}=this;let a=s.abs().normalize();a=a.div(a.dot(Kg(1)));const o=r.yz.mul(n),l=r.zx.mul(n),u=r.xy.mul(n),c=e.value,h=null!==t?t.value:c,d=null!==i?i.value:c,p=Xy(c,o).mul(a.x),m=Xy(h,l).mul(a.y),f=Xy(d,u).mul(a.z);return iv(p,m,f)}}const OR=Ig(FR).setParameterLength(1,6),BR=new Us,VR=new fi,zR=new fi,kR=new fi,GR=new ji,HR=new fi(0,0,-1),WR=new ui,jR=new fi,XR=new fi,$R=new ui,qR=new Gt,YR=new ci,KR=sM.flipX();YR.depthTexture=new da(1,1);let ZR=!1;class QR extends jy{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||YR.texture,KR),this._reflectorBaseNode=e.reflector||new JR(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(null===this._depthNode){if(!0!==this._reflectorBaseNode.depth)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=Ng(new QR({defaultTexture:YR.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class JR extends Gf{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:i=new xn,resolution:n=1,generateMipmaps:r=!1,bounces:s=!0,depth:a=!1}=t;this.textureNode=e,this.target=i,this.resolution=n,this.generateMipmaps=r,this.bounces=s,this.depth=a,this.updateBeforeType=s?Uf.RENDER:Uf.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1}_updateResolution(e,t){const i=this.resolution;t.getDrawingBufferSize(qR),e.setSize(Math.round(qR.width*i),Math.round(qR.height*i))}setup(e){return this._updateResolution(YR,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new ci(0,0,{type:ce}),!0===this.generateMipmaps&&(t.texture.minFilter=1008,t.texture.generateMipmaps=!0),!0===this.depth&&(t.depthTexture=new da),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&ZR)return!1;ZR=!0;const{scene:t,camera:i,renderer:n,material:r}=e,{target:s}=this,a=this.getVirtualCamera(i),o=this.getRenderTarget(a);n.getDrawingBufferSize(qR),this._updateResolution(o,n),zR.setFromMatrixPosition(s.matrixWorld),kR.setFromMatrixPosition(i.matrixWorld),GR.extractRotation(s.matrixWorld),VR.set(0,0,1),VR.applyMatrix4(GR),jR.subVectors(zR,kR);if(!0===jR.dot(VR)>0&&!1===this.forceUpdate)return;jR.reflect(VR).negate(),jR.add(zR),GR.extractRotation(i.matrixWorld),HR.set(0,0,-1),HR.applyMatrix4(GR),HR.add(kR),XR.subVectors(zR,HR),XR.reflect(VR).negate(),XR.add(zR),a.coordinateSystem=i.coordinateSystem,a.position.copy(jR),a.up.set(0,1,0),a.up.applyMatrix4(GR),a.up.reflect(VR),a.lookAt(XR),a.near=i.near,a.far=i.far,a.updateMatrixWorld(),a.projectionMatrix.copy(i.projectionMatrix),BR.setFromNormalAndCoplanarPoint(VR,zR),BR.applyMatrix4(a.matrixWorldInverse),WR.set(BR.normal.x,BR.normal.y,BR.normal.z,BR.constant);const l=a.projectionMatrix;$R.x=(Math.sign(WR.x)+l.elements[8])/l.elements[0],$R.y=(Math.sign(WR.y)+l.elements[9])/l.elements[5],$R.z=-1,$R.w=(1+l.elements[10])/l.elements[14],WR.multiplyScalar(1/WR.dot($R));l.elements[2]=WR.x,l.elements[6]=WR.y,l.elements[10]=n.coordinateSystem===Ct?WR.z-0:WR.z+1-0,l.elements[14]=WR.w,this.textureNode.value=o.texture,!0===this.depth&&(this.textureNode.getDepthNode().value=o.depthTexture),r.visible=!1;const u=n.getRenderTarget(),c=n.getMRT(),h=n.autoClear;n.setMRT(null),n.setRenderTarget(o),n.autoClear=!0,n.render(t,a),n.setMRT(c),n.setRenderTarget(u),n.autoClear=h,r.visible=!0,ZR=!1,this.forceUpdate=!1}}const eC=new Nl(-1,1,1,-1,0,1);class tC extends ur{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new tr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new tr(t,2))}}const iC=new tC;class nC extends br{constructor(e=null){super(iC,e),this.camera=eC,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,eC)}render(e){e.render(this,eC)}}const rC=new Gt;class sC extends jy{static get type(){return"RTTNode"}constructor(e,t=null,i=null,n={type:ce}){const r=new ci(t,i,n);super(r.texture,zy()),this.node=e,this.width=t,this.height=i,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new nC(new OM),this.updateBeforeType=Uf.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const i=e*this.pixelRatio,n=t*this.pixelRatio;this.renderTarget.setSize(i,n),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(rC);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new jy(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const aC=(e,...t)=>Ng(new sC(Ng(e),...t)),oC=Fg((([e,t,i],n)=>{let r;n.renderer.coordinateSystem===Ct?(e=Xg(e.x,e.y.oneMinus()).mul(2).sub(1),r=e_(Kg(e,t),1)):r=e_(Kg(e.x,e.y.oneMinus(),t).mul(2).sub(1),1);const s=e_(i.mul(r));return s.xyz.div(s.w)})),lC=Fg((([e,t])=>{const i=t.mul(e_(e,1)),n=i.xy.div(i.w).mul(.5).add(.5).toVar();return Xg(n.x,n.y.oneMinus())})),uC=Fg((([e,t,i])=>{const n=Gy($y(t)),r=$g(e.mul(n)).toVar(),s=$y(t,r).toVar(),a=$y(t,r.sub($g(2,0))).toVar(),o=$y(t,r.sub($g(1,0))).toVar(),l=$y(t,r.add($g(1,0))).toVar(),u=$y(t,r.add($g(2,0))).toVar(),c=$y(t,r.add($g(0,2))).toVar(),h=$y(t,r.add($g(0,1))).toVar(),d=$y(t,r.sub($g(0,1))).toVar(),p=$y(t,r.sub($g(0,2))).toVar(),m=ex(nv(Gg(2).mul(o).sub(a),s)).toVar(),f=ex(nv(Gg(2).mul(l).sub(u),s)).toVar(),g=ex(nv(Gg(2).mul(h).sub(c),s)).toVar(),_=ex(nv(Gg(2).mul(d).sub(p),s)).toVar(),v=oC(e,s,i).toVar(),x=m.lessThan(f).select(v.sub(oC(e.sub(Xg(Gg(1).div(n.x),0)),o,i)),v.negate().add(oC(e.add(Xg(Gg(1).div(n.x),0)),l,i))),y=g.lessThan(_).select(v.sub(oC(e.add(Xg(0,Gg(1).div(n.y))),h,i)),v.negate().add(oC(e.sub(Xg(0,Gg(1).div(n.y))),d,i)));return Xv(bx(x,y))}));class cC extends Ss{constructor(e,t,i=Float32Array){super(ArrayBuffer.isView(e)?e:new i(e*t),t),this.isStorageInstancedBufferAttribute=!0}}class hC extends Zn{constructor(e,t,i=Float32Array){super(ArrayBuffer.isView(e)?e:new i(e*t),t),this.isStorageBufferAttribute=!0}}class dC extends Gf{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const pC=Dg(dC),mC=new tn,fC=new ji;class gC extends Gf{static get type(){return"SceneNode"}constructor(e=gC.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,i=null!==this.scene?this.scene:e.scene;let n;return t===gC.BACKGROUND_BLURRINESS?n=uT("backgroundBlurriness","float",i):t===gC.BACKGROUND_INTENSITY?n=uT("backgroundIntensity","float",i):t===gC.BACKGROUND_ROTATION&&(n=$_("mat4").label("backgroundRotation").setGroup(W_).onRenderUpdate((()=>{const e=i.background;return null!==e&&e.isTexture&&300!==e.mapping?(mC.copy(i.backgroundRotation),mC.x*=-1,mC.y*=-1,mC.z*=-1,fC.makeRotationFromEuler(mC)):fC.identity(),fC}))),n}}gC.BACKGROUND_BLURRINESS="backgroundBlurriness",gC.BACKGROUND_INTENSITY="backgroundIntensity",gC.BACKGROUND_ROTATION="backgroundRotation";const _C=Dg(gC,gC.BACKGROUND_BLURRINESS),vC=Dg(gC,gC.BACKGROUND_INTENSITY),xC=Dg(gC,gC.BACKGROUND_ROTATION);class yC extends jy{static get type(){return"StorageTextureNode"}constructor(e,t,i=null){super(e,t),this.storeNode=i,this.isStorageTextureNode=!0,this.access=Ff.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let i;return i=null!==this.storeNode?this.generateStore(e):super.generate(e,t),i}toReadWrite(){return this.setAccess(Ff.READ_WRITE)}toReadOnly(){return this.setAccess(Ff.READ_ONLY)}toWriteOnly(){return this.setAccess(Ff.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:i,storeNode:n}=t,r=super.generate(e,"property"),s=i.build(e,"uvec2"),a=n.build(e,"vec4"),o=e.generateTextureStore(e,r,s,a);e.addLineFlowCode(o,this)}}const bC=Ig(yC).setParameterLength(1,3),TC=Fg((({texture:e,uv:t})=>{const i=1e-4,n=Kg().toVar();return Vg(t.x.lessThan(i),(()=>{n.assign(Kg(1,0,0))})).ElseIf(t.y.lessThan(i),(()=>{n.assign(Kg(0,1,0))})).ElseIf(t.z.lessThan(i),(()=>{n.assign(Kg(0,0,1))})).ElseIf(t.x.greaterThan(.9999),(()=>{n.assign(Kg(-1,0,0))})).ElseIf(t.y.greaterThan(.9999),(()=>{n.assign(Kg(0,-1,0))})).ElseIf(t.z.greaterThan(.9999),(()=>{n.assign(Kg(0,0,-1))})).Else((()=>{const i=.01,r=e.sample(t.add(Kg(-.01,0,0))).r.sub(e.sample(t.add(Kg(i,0,0))).r),s=e.sample(t.add(Kg(0,-.01,0))).r.sub(e.sample(t.add(Kg(0,i,0))).r),a=e.sample(t.add(Kg(0,0,-.01))).r.sub(e.sample(t.add(Kg(0,0,i))).r);n.assign(Kg(r,s,a))})),n.normalize()}));class SC extends jy{static get type(){return"Texture3DNode"}constructor(e,t=null,i=null){super(e,t,i),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return Kg(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return!e.isFlipY()||!0!==i.isRenderTargetTexture&&!0!==i.isFramebufferTexture||(t=this.sampler?t.flipY():t.setY(Hg(Gy(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return TC({texture:this,uv:e})}}const MC=Ig(SC).setParameterLength(1,3);class wC extends lT{static get type(){return"UserDataNode"}constructor(e,t,i=null){super(e,t,i),this.userData=i}updateReference(e){return this.reference=null!==this.userData?this.userData:e.object.userData,this.reference}}const EC=new WeakMap;class AC extends jf{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Uf.OBJECT,this.updateAfterType=Uf.OBJECT,this.previousModelWorldMatrix=$_(new ji),this.previousProjectionMatrix=$_(new ji).setGroup(W_),this.previousCameraViewMatrix=$_(new ji)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:i}){const n=CC(i);this.previousModelWorldMatrix.value.copy(n);const r=RC(t);r.frameId!==e&&(r.frameId=e,void 0===r.previousProjectionMatrix?(r.previousProjectionMatrix=new ji,r.previousCameraViewMatrix=new ji,r.currentProjectionMatrix=new ji,r.currentCameraViewMatrix=new ji,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){CC(e).copy(e.matrixWorld)}setup(){const e=null===this.projectionMatrix?nb:$_(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),i=e.mul(Eb).mul(Pb),n=this.previousProjectionMatrix.mul(t).mul(Lb),r=i.xy.div(i.w),s=n.xy.div(n.w);return nv(r,s)}}function RC(e){let t=EC.get(e);return void 0===t&&(t={},EC.set(e,t)),t}function CC(e,t=0){const i=RC(e);let n=i[t];return void 0===n&&(i[t]=n=new ji,i[t].copy(e.matrixWorld)),n}const NC=Dg(AC),PC=Fg((([e,t])=>mx(1,e.oneMinus().div(t)).oneMinus())).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),LC=Fg((([e,t])=>mx(e.div(t.oneMinus()),1))).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),IC=Fg((([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus())).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),DC=Fg((([e,t])=>Cx(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),gx(.5,e)))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),UC=Fg((([e,t])=>{const i=t.a.add(e.a.mul(t.a.oneMinus()));return e_(t.rgb.mul(t.a).add(e.rgb.mul(e.a).mul(t.a.oneMinus())).div(i),i)})).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),FC=Fg((([e])=>zC(e.rgb))),OC=Fg((([e,t=Gg(1)])=>t.mix(zC(e.rgb),e.rgb))),BC=Fg((([e,t=Gg(1)])=>{const i=iv(e.r,e.g,e.b).div(3),n=e.r.max(e.g.max(e.b)),r=n.sub(i).mul(t).mul(-3);return Cx(e.rgb,n,r)})),VC=Fg((([e,t=Gg(1)])=>{const i=Kg(.57735,.57735,.57735),n=t.cos();return Kg(e.rgb.mul(n).add(i.cross(e.rgb).mul(t.sin()).add(i.mul(yx(i,e.rgb).mul(n.oneMinus())))))})),zC=(e,t=Kg(Jt.getLuminanceCoefficients(new fi)))=>yx(e,t),kC=Fg((([e,t=Kg(1),i=Kg(0),n=Kg(1),r=Gg(1),s=Kg(Jt.getLuminanceCoefficients(new fi,pt))])=>{const a=e.rgb.dot(Kg(s)),o=fx(e.rgb.mul(t).add(i),0).toVar(),l=o.pow(n).toVar();return Vg(o.r.greaterThan(0),(()=>{o.r.assign(l.r)})),Vg(o.g.greaterThan(0),(()=>{o.g.assign(l.g)})),Vg(o.b.greaterThan(0),(()=>{o.b.assign(l.b)})),o.assign(a.add(o.sub(a).mul(r))),e_(o.rgb,e.a)}));class GC extends jf{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const HC=Ig(GC).setParameterLength(2),WC=new Gt;class jC extends jy{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class XC extends jC{static get type(){return"PassMultipleTextureNode"}constructor(e,t,i=!1){super(e,null),this.textureName=t,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class $C extends jf{static get type(){return"PassNode"}constructor(e,t,i,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=i,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const r=new da;r.isRenderTargetTexture=!0,r.name="depth";const s=new ci(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ce,...n});s.texture.name="output",s.depthTexture=r,this.renderTarget=s,this._textures={output:s.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=$_(0),this._cameraFar=$_(0),this._mrt=null,this._layers=null,this._resolution=1,this.isPassNode=!0,this.updateBeforeType=Uf.FRAME}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const i=this._textures[e],n=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(t=Ng(new XC(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),t=Ng(new XC(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const i=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=wM(this.getTextureNode(e),i,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const i=this._cameraNear,n=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=SM(r,i,n)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,!0===e.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.texture.type=e.getColorBufferType(),this.scope===$C.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:i}=this;let n,r;const s=t.getOutputRenderTarget();s&&!0===s.isXRRenderTarget?(r=1,n=t.xr.getCamera(),t.xr.updateCamera(n),WC.set(s.width,s.height)):(n=this.camera,r=t.getPixelRatio(),t.getSize(WC)),this._pixelRatio=r,this.setSize(WC.width,WC.height);const a=t.getRenderTarget(),o=t.getMRT(),l=n.layers.mask;this._cameraNear.value=n.near,this._cameraFar.value=n.far,null!==this._layers&&(n.layers.mask=this._layers.mask);for(const u in this._previousTextures)this.toggleTexture(u);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(i,n),t.setRenderTarget(a),t.setMRT(o),n.layers.mask=l}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio*this._resolution,n=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}$C.COLOR="color",$C.DEPTH="depth";class qC extends $C{static get type(){return"ToonOutlinePassNode"}constructor(e,t,i,n,r){super($C.COLOR,e,t),this.colorNode=i,this.thicknessNode=n,this.alphaNode=r,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,i=t.getRenderObjectFunction();t.setRenderObjectFunction(((e,i,n,r,s,a,o,l)=>{if((s.isMeshToonMaterial||s.isMeshToonNodeMaterial)&&!1===s.wireframe){const u=this._getOutlineMaterial(s);t.renderObject(e,i,n,r,u,a,o,l)}t.renderObject(e,i,n,r,s,a,o,l)})),super.updateBefore(e),t.setRenderObjectFunction(i)}_createMaterial(){const e=new OM;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=1;const t=kb.negate(),i=nb.mul(Eb),n=Gg(1),r=i.mul(e_(Pb,1)),s=i.mul(e_(Pb.add(t),1)),a=Xv(r.sub(s));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(n)),e.colorNode=e_(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return void 0===t&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const YC=Fg((([e,t])=>e.mul(t).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),KC=Fg((([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ZC=Fg((([e,t])=>{const i=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),n=e.mul(e.mul(6.2).add(1.7)).add(.06);return i.div(n).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),QC=Fg((([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),i=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(i)})),JC=Fg((([e,t])=>{const i=s_(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=s_(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=i.mul(e),e=QC(e),(e=n.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),eN=s_(Kg(1.6605,-.1246,-.0182),Kg(-.5876,1.1329,-.1006),Kg(-.0728,-.0083,1.1187)),tN=s_(Kg(.6274,.0691,.0164),Kg(.3293,.9195,.088),Kg(.0433,.0113,.8956)),iN=Fg((([e])=>{const t=Kg(e).toVar(),i=Kg(t.mul(t)).toVar(),n=Kg(i.mul(i)).toVar();return Gg(15.5).mul(n.mul(i)).sub(rv(40.14,n.mul(t))).add(rv(31.96,n).sub(rv(6.868,i.mul(t))).add(rv(.4298,i).add(rv(.1191,t).sub(.00232))))})),nN=Fg((([e,t])=>{const i=Kg(e).toVar(),n=s_(Kg(.856627153315983,.137318972929847,.11189821299995),Kg(.0951212405381588,.761241990602591,.0767994186031903),Kg(.0482516061458583,.101439036467562,.811302368396859)),r=s_(Kg(1.1271005818144368,-.1413297634984383,-.14132976349843826),Kg(-.11060664309660323,1.157823702216272,-.11060664309660294),Kg(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=Gg(-12.47393),a=Gg(4.026069);return i.mulAssign(t),i.assign(tN.mul(i)),i.assign(n.mul(i)),i.assign(fx(i,1e-10)),i.assign(kv(i)),i.assign(i.sub(s).div(a.sub(s))),i.assign(Nx(i,0,1)),i.assign(iN(i)),i.assign(r.mul(i)),i.assign(Tx(fx(Kg(0),i),Kg(2.2))),i.assign(eN.mul(i)),i.assign(Nx(i,0,1)),i})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),rN=Fg((([e,t])=>{const i=Gg(.76),n=Gg(.15);e=e.mul(t);const r=mx(e.r,mx(e.g,e.b)),s=Gx(r.lessThan(.08),r.sub(rv(6.25,r.mul(r))),.04);e.subAssign(s);const a=fx(e.r,fx(e.g,e.b));Vg(a.lessThan(i),(()=>e));const o=nv(1,i),l=nv(1,o.mul(o).div(a.add(o.sub(i))));e.mulAssign(l.div(a));const u=nv(1,sv(1,n.mul(a.sub(l)).add(1)));return Cx(e,Kg(l),u)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class sN extends Gf{static get type(){return"CodeNode"}constructor(e="",t=[],i=""){super("code"),this.isCodeNode=!0,this.code=e,this.includes=t,this.language=i}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const aN=Ig(sN).setParameterLength(1,3);class oN extends sN{static get type(){return"FunctionNode"}constructor(e="",t=[],i=""){super(e,t,i)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let i=t.nodeFunction;return void 0===i&&(i=e.parser.parseFunction(this.code),t.nodeFunction=i),i}generate(e,t){super.generate(e);const i=this.getNodeFunction(e),n=i.name,r=i.type,s=e.getCodeFromNode(this,r);""!==n&&(s.name=n);const a=e.getPropertyName(s),o=this.getNodeFunction(e).getCode(a);return s.code=o+"\n","property"===t?a:e.format(`${a}()`,r,t)}}const lN=(e,t=[],i="")=>{for(let s=0;s<t.length;s++){const e=t[s];"function"==typeof e&&(t[s]=e.functionNode)}const n=Ng(new oN(e,t,i)),r=(...e)=>n.call(...e);return r.functionNode=n,r};class uN extends Gf{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new Nt,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:Gg()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=Lf(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?If(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const cN=Ig(uN).setParameterLength(1);class hN extends Map{get(e,t=null,...i){if(this.has(e))return super.get(e);if(null!==t){const n=t(...i);return this.set(e,n),n}}}class dN{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const pN=new hN;class mN extends Gf{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new hN,this._output=cN(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const i=this._outputs;return void 0===i[e]?i[e]=cN(t):i[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const i=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),i[e]=t,i[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),i[e]=t,i[e].events.addEventListener("refresh",this.onRefresh)):void 0===i[e]?(i[e]=cN(t),i[e].events.addEventListener("refresh",this.onRefresh)):i[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const i=this.getObject()[e];if("function"==typeof i)return i(...t)}async callAsync(e,...t){const i=this.getObject()[e];if("function"==typeof i)return"AsyncFunction"===i.constructor.name?await i(...t):i(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new dN(this),t=pN.get("THREE"),i=pN.get("TSL"),n=this.getMethod(),r=[e,this._local,pN,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,i];this._object=n(...r);const s=this._object.layout;if(s&&(!1===s.cache&&this._local.clear(),this._output.outputType=s.outputType||null,Array.isArray(s.elements)))for(const a of s.elements){const e=a.id||a.name;a.inputType&&(void 0===this.getParameter(e)&&this.setParameter(e,null),this.getParameter(e).inputType=a.inputType),a.outputType&&(void 0===this.getOutput(e)&&this.setOutput(e,null),this.getOutput(e).outputType=a.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let e=this.parameters[t];e.isScriptableNode&&(e=e.getDefaultOutput()),e.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:Gg()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",i="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],i),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[xf(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const i in this.parameters)t.push(this.parameters[i].getCacheKey(e));return yf(t)}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const fN=Ig(mN).setParameterLength(1,2);function gN(e){let t;const i=e.context.getViewZ;return void 0!==i&&(t=i(this)),(t||Ub.z).negate()}const _N=Fg((([e,t],i)=>{const n=gN(i);return Ix(e,t,n)})),vN=Fg((([e],t)=>{const i=gN(t);return e.mul(e,i,i).negate().exp().oneMinus()})),xN=Fg((([e,t])=>e_(t.toFloat().mix(N_.rgb,e.toVec3()),N_.a)));let yN=null,bN=null;class TN extends Gf{static get type(){return"RangeNode"}constructor(e=Gg(),t=Gg()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(Cf(this.minNode.value)),i=e.getTypeLength(Cf(this.maxNode.value));return t>i?t:i}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let i=null;if(t.count>1){const n=this.minNode.value,r=this.maxNode.value,s=e.getTypeLength(Cf(n)),a=e.getTypeLength(Cf(r));yN=yN||new ui,bN=bN||new ui,yN.setScalar(0),bN.setScalar(0),1===s?yN.setScalar(n):n.isColor?yN.set(n.r,n.g,n.b,1):yN.set(n.x,n.y,n.z||0,n.w||0),1===a?bN.setScalar(r):r.isColor?bN.set(r.r,r.g,r.b,1):bN.set(r.x,r.y,r.z||0,r.w||0);const o=4,l=o*t.count,u=new Float32Array(l);for(let e=0;e<l;e++){const t=e%o,i=yN.getComponent(t),n=bN.getComponent(t);u[e]=kt.lerp(i,n,Math.random())}const c=this.getNodeType(e);if(t.count<=4096)i=Yy(u,"vec4",t.count).element(wS).convert(c);else{const t=new Ss(u,4);e.geometry.setAttribute("__range"+this.id,t),i=yy(t).convert(c)}}else i=Gg(0);return i}}const SN=Ig(TN).setParameterLength(2);class MN extends Gf{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const i=this.getBuiltinName(e),n=this.getNodeType(e);return"compute"===e.shaderStage?e.format(i,n,t):e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const wN=(e,t)=>Ng(new MN(e,t)),EN=wN("numWorkgroups","uvec3"),AN=wN("workgroupId","uvec3"),RN=wN("globalId","uvec3"),CN=wN("localId","uvec3"),NN=wN("subgroupSize","uint");const PN=Ig(class extends Gf{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:i}=e;!0===i.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`,this)}});class LN extends Hf{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let i;const n=e.context.assign;if(i=super.generate(e),!0!==n){const n=this.getNodeType(e);i=e.format(i,n,t)}return i}}class IN extends Gf{constructor(e,t,i=0){super(t),this.bufferType=t,this.bufferCount=i,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e}label(e){return this.name=e,this}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return Ng(new LN(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}class DN extends Gf{static get type(){return"AtomicFunctionNode"}constructor(e,t,i){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=i,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),i=t.parents,n=this.method,r=this.getNodeType(e),s=this.getInputType(e),a=this.pointerNode,o=this.valueNode,l=[];l.push(`&${a.build(e,s)}`),null!==o&&l.push(o.build(e,s));const u=`${e.getMethod(n,r)}( ${l.join(", ")} )`;if(!(1===i.length&&!0===i[0].isStackNode))return void 0===t.constNode&&(t.constNode=Ly(u,r).toConst()),t.constNode.build(e);e.addLineFlowCode(u,this)}}DN.ATOMIC_LOAD="atomicLoad",DN.ATOMIC_STORE="atomicStore",DN.ATOMIC_ADD="atomicAdd",DN.ATOMIC_SUB="atomicSub",DN.ATOMIC_MAX="atomicMax",DN.ATOMIC_MIN="atomicMin",DN.ATOMIC_AND="atomicAnd",DN.ATOMIC_OR="atomicOr",DN.ATOMIC_XOR="atomicXor";const UN=Ig(DN),FN=(e,t,i)=>UN(e,t,i).toStack();let ON;function BN(e){ON=ON||new WeakMap;let t=ON.get(e);return void 0===t&&ON.set(e,t={}),t}function VN(e){const t=BN(e);return t.shadowMatrix||(t.shadowMatrix=$_("mat4").setGroup(W_).onRenderUpdate((()=>(!0!==e.castShadow&&e.shadow.updateMatrices(e),e.shadow.matrix))))}function zN(e,t=Ib){const i=VN(e).mul(t);return i.xyz.div(i.w)}function kN(e){const t=BN(e);return t.position||(t.position=$_(new fi).setGroup(W_).onRenderUpdate(((t,i)=>i.value.setFromMatrixPosition(e.matrixWorld))))}function GN(e){const t=BN(e);return t.targetPosition||(t.targetPosition=$_(new fi).setGroup(W_).onRenderUpdate(((t,i)=>i.value.setFromMatrixPosition(e.target.matrixWorld))))}function HN(e){const t=BN(e);return t.viewPosition||(t.viewPosition=$_(new fi).setGroup(W_).onRenderUpdate((({camera:t},i)=>{i.value=i.value||new fi,i.value.setFromMatrixPosition(e.matrixWorld),i.value.applyMatrix4(t.matrixWorldInverse)})))}const WN=e=>sb.transformDirection(kN(e).sub(GN(e))),jN=(e,t)=>{for(const i of t)if(i.isAnalyticLightNode&&i.light.id===e)return i;return null},XN=new WeakMap;class $N extends Gf{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Kg().toVar(),this.totalSpecularNode=Kg().toVar(),this.outgoingLightNode=Kg().toVar(),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=[],t=this._lights;for(let i=0;i<t.length;i++){const n=t[i];if(e.push(n.id),!0===n.isSpotLight){const t=null!==n.map?n.map.id:-1;e.push(t)}}return yf(e)}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const i of t.nodes)i.build(e)}setupLightsNode(e){const t=[],i=this._lightNodes,n=(e=>e.sort(((e,t)=>e.id-t.id)))(this._lights),r=e.renderer.library;for(const s of n)if(s.isNode)t.push(Ng(s));else{let e=null;if(null!==i&&(e=jN(s.id,i)),null===e){const e=r.getLightNodeClass(s.constructor);if(null===e)continue;let i=null;XN.has(s)?i=XN.get(s):(i=Ng(new e(s)),XN.set(s,i)),t.push(i)}}this._lightNodes=t}setupDirectLight(e,t,i){const{lightingModel:n,reflectedLight:r}=e.context;n.direct({...i,lightNode:t,reflectedLight:r},e)}setupDirectRectAreaLight(e,t,i){const{lightingModel:n,reflectedLight:r}=e.context;n.directRectArea({...i,lightNode:t,reflectedLight:r},e)}setupLights(e,t){for(const i of t)i.build(e)}getLightNodes(e){return null===this._lightNodes&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let i=this.outgoingLightNode;const n=e.context,r=n.lightingModel,s=e.getDataFromNode(this);if(r){const{totalDiffuseNode:t,totalSpecularNode:a}=this;n.outgoingLight=i;const o=e.addStack();s.nodes=o.nodes,r.start(e);const{backdrop:l,backdropAlpha:u}=n,{directDiffuse:c,directSpecular:h,indirectDiffuse:d,indirectSpecular:p}=n.reflectedLight;let m=c.add(d);null!==l&&(m=Kg(null!==u?u.mix(m,l):l),n.material.transparent=!0),t.assign(m),a.assign(h.add(p)),i.assign(t.add(a)),r.finish(e),i=i.bypass(e.removeStack())}else s.nodes=[];return e.lightsNode=t,i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}class qN extends Gf{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=Uf.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){YN.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||Ib)}dispose(){this.updateBeforeType=Uf.NONE}}const YN=c_("vec3","shadowPositionWorld");function KN(e,t){return t=function(e,t={}){return t.toneMapping=e.toneMapping,t.toneMappingExposure=e.toneMappingExposure,t.outputColorSpace=e.outputColorSpace,t.renderTarget=e.getRenderTarget(),t.activeCubeFace=e.getActiveCubeFace(),t.activeMipmapLevel=e.getActiveMipmapLevel(),t.renderObjectFunction=e.getRenderObjectFunction(),t.pixelRatio=e.getPixelRatio(),t.mrt=e.getMRT(),t.clearColor=e.getClearColor(t.clearColor||new Bn),t.clearAlpha=e.getClearAlpha(),t.autoClear=e.autoClear,t.scissorTest=e.getScissorTest(),t}(e,t),e.setMRT(null),e.setRenderObjectFunction(null),e.setClearColor(0,1),e.autoClear=!0,t}const ZN=new WeakMap,QN=Fg((({depthTexture:e,shadowCoord:t,depthLayer:i})=>{let n=Xy(e,t.xy).label("t_basic");return e.isDepthArrayTexture&&(n=n.depth(i)),n.compare(t.z)})),JN=Fg((({depthTexture:e,shadowCoord:t,shadow:i,depthLayer:n})=>{const r=(t,i)=>{let r=Xy(e,t);return e.isDepthArrayTexture&&(r=r.depth(n)),r.compare(i)},s=uT("mapSize","vec2",i).setGroup(W_),a=uT("radius","float",i).setGroup(W_),o=Xg(1).div(s),l=o.x.negate().mul(a),u=o.y.negate().mul(a),c=o.x.mul(a),h=o.y.mul(a),d=l.div(2),p=u.div(2),m=c.div(2),f=h.div(2);return iv(r(t.xy.add(Xg(l,u)),t.z),r(t.xy.add(Xg(0,u)),t.z),r(t.xy.add(Xg(c,u)),t.z),r(t.xy.add(Xg(d,p)),t.z),r(t.xy.add(Xg(0,p)),t.z),r(t.xy.add(Xg(m,p)),t.z),r(t.xy.add(Xg(l,0)),t.z),r(t.xy.add(Xg(d,0)),t.z),r(t.xy,t.z),r(t.xy.add(Xg(m,0)),t.z),r(t.xy.add(Xg(c,0)),t.z),r(t.xy.add(Xg(d,f)),t.z),r(t.xy.add(Xg(0,f)),t.z),r(t.xy.add(Xg(m,f)),t.z),r(t.xy.add(Xg(l,h)),t.z),r(t.xy.add(Xg(0,h)),t.z),r(t.xy.add(Xg(c,h)),t.z)).mul(1/17)})),eP=Fg((({depthTexture:e,shadowCoord:t,shadow:i,depthLayer:n})=>{const r=(t,i)=>{let r=Xy(e,t);return e.isDepthArrayTexture&&(r=r.depth(n)),r.compare(i)},s=uT("mapSize","vec2",i).setGroup(W_),a=Xg(1).div(s),o=a.x,l=a.y,u=t.xy,c=$v(u.mul(s).add(.5));return u.subAssign(c.mul(a)),iv(r(u,t.z),r(u.add(Xg(o,0)),t.z),r(u.add(Xg(0,l)),t.z),r(u.add(a),t.z),Cx(r(u.add(Xg(o.negate(),0)),t.z),r(u.add(Xg(o.mul(2),0)),t.z),c.x),Cx(r(u.add(Xg(o.negate(),l)),t.z),r(u.add(Xg(o.mul(2),l)),t.z),c.x),Cx(r(u.add(Xg(0,l.negate())),t.z),r(u.add(Xg(0,l.mul(2))),t.z),c.y),Cx(r(u.add(Xg(o,l.negate())),t.z),r(u.add(Xg(o,l.mul(2))),t.z),c.y),Cx(Cx(r(u.add(Xg(o.negate(),l.negate())),t.z),r(u.add(Xg(o.mul(2),l.negate())),t.z),c.x),Cx(r(u.add(Xg(o.negate(),l.mul(2))),t.z),r(u.add(Xg(o.mul(2),l.mul(2))),t.z),c.x),c.y)).mul(1/9)})),tP=Fg((({depthTexture:e,shadowCoord:t,depthLayer:i})=>{const n=Gg(1).toVar();let r=Xy(e).sample(t.xy);(e.isDepthArrayTexture||e.isDataArrayTexture)&&(r=r.depth(i)),r=r.rg;const s=gx(t.z,r.x);return Vg(s.notEqual(Gg(1)),(()=>{const e=t.z.sub(r.x),i=fx(0,r.y.mul(r.y));let a=i.div(i.add(e.mul(e)));a=Nx(nv(a,.3).div(.95-.3)),n.assign(Nx(fx(s,a)))})),n})),iP=Fg((([e,t,i])=>{let n=Ib.sub(e).length();return n=n.sub(t).div(i.sub(t)),n=n.saturate(),n})),nP=e=>{let t=ZN.get(e);if(void 0===t){const i=e.isPointLight?(e=>{const t=e.shadow.camera,i=uT("near","float",t).setGroup(W_),n=uT("far","float",t).setGroup(W_),r=pb(e);return iP(r,i,n)})(e):null;t=new OM,t.colorNode=e_(0,0,0,1),t.depthNode=i,t.isShadowPassMaterial=!0,t.name="ShadowMaterial",t.fog=!1,ZN.set(e,t)}return t},rP=new MA,sP=[],aP=(e,t,i,n)=>{sP[0]=e,sP[1]=t;let r=rP.get(sP);return void 0!==r&&r.shadowType===i&&r.useVelocity===n||(r=(r,s,a,o,l,u,...c)=>{(!0===r.castShadow||r.receiveShadow&&3===i)&&(n&&(Pf(r).useVelocity=!0),r.onBeforeShadow(e,r,a,t.camera,o,s.overrideMaterial,u),e.renderObject(r,s,a,o,l,u,...c),r.onAfterShadow(e,r,a,t.camera,o,s.overrideMaterial,u))},r.shadowType=i,r.useVelocity=n,rP.set(sP,r)),sP[0]=null,sP[1]=null,r},oP=Fg((({samples:e,radius:t,size:i,shadowPass:n,depthLayer:r})=>{const s=Gg(0).toVar("meanVertical"),a=Gg(0).toVar("squareMeanVertical"),o=e.lessThanEqual(Gg(1)).select(Gg(0),Gg(2).div(e.sub(1))),l=e.lessThanEqual(Gg(1)).select(Gg(0),Gg(-1));WS({start:Hg(0),end:Hg(e),type:"int",condition:"<"},(({i:e})=>{const u=l.add(Gg(e).mul(o));let c=n.sample(iv(oM.xy,Xg(0,u).mul(t)).div(i));(n.value.isDepthArrayTexture||n.value.isDataArrayTexture)&&(c=c.depth(r)),c=c.x,s.addAssign(c),a.addAssign(c.mul(c))})),s.divAssign(e),a.divAssign(e);const u=Gv(a.sub(s.mul(s)));return Xg(s,u)})),lP=Fg((({samples:e,radius:t,size:i,shadowPass:n,depthLayer:r})=>{const s=Gg(0).toVar("meanHorizontal"),a=Gg(0).toVar("squareMeanHorizontal"),o=e.lessThanEqual(Gg(1)).select(Gg(0),Gg(2).div(e.sub(1))),l=e.lessThanEqual(Gg(1)).select(Gg(0),Gg(-1));WS({start:Hg(0),end:Hg(e),type:"int",condition:"<"},(({i:e})=>{const u=l.add(Gg(e).mul(o));let c=n.sample(iv(oM.xy,Xg(u,0).mul(t)).div(i));(n.value.isDepthArrayTexture||n.value.isDataArrayTexture)&&(c=c.depth(r)),s.addAssign(c.x),a.addAssign(iv(c.y.mul(c.y),c.x.mul(c.x)))})),s.divAssign(e),a.divAssign(e);const u=Gv(a.sub(s.mul(s)));return Xg(s,u)})),uP=[QN,JN,eP,tP];let cP;const hP=new nC;class dP extends qN{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:i,shadowCoord:n,shadow:r,depthLayer:s}){const a=n.x.greaterThanEqual(0).and(n.x.lessThanEqual(1)).and(n.y.greaterThanEqual(0)).and(n.y.lessThanEqual(1)).and(n.z.lessThanEqual(1)),o=t({depthTexture:i,shadowCoord:n,shadow:r,depthLayer:s});return a.select(o,Gg(1))}setupShadowCoord(e,t){const{shadow:i}=this,{renderer:n}=e,r=uT("bias","float",i).setGroup(W_);let s,a=t;if(i.camera.isOrthographicCamera||!0!==n.logarithmicDepthBuffer)a=a.xyz.div(a.w),s=a.z,n.coordinateSystem===Ct&&(s=s.mul(2).sub(1));else{const e=a.w;a=a.xy.div(e);const t=uT("near","float",i.camera).setGroup(W_),n=uT("far","float",i.camera).setGroup(W_);s=EM(e.negate(),t,n)}return a=Kg(a.x,a.y.oneMinus(),s.add(r)),a}getShadowFilterFn(e){return uP[e]}setupRenderTarget(e,t){const i=new da(e.mapSize.width,e.mapSize.height);i.name="ShadowDepthTexture",i.compareFunction=vt;const n=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return n.texture.name="ShadowMap",n.texture.type=e.mapType,n.depthTexture=i,{shadowMap:n,depthTexture:i}}setupShadow(e){const{renderer:t}=e,{light:i,shadow:n}=this,r=t.shadowMap.type,{depthTexture:s,shadowMap:a}=this.setupRenderTarget(n,e);if(n.camera.updateProjectionMatrix(),3===r){s.compareFunction=null,a.isRenderTargetArray?(a._vsmShadowMapVertical||(a._vsmShadowMapVertical=e.createRenderTargetArray(n.mapSize.width,n.mapSize.height,a.depth,{format:Te,type:ce,depthBuffer:!1}),a._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=a._vsmShadowMapVertical,a._vsmShadowMapHorizontal||(a._vsmShadowMapHorizontal=e.createRenderTargetArray(n.mapSize.width,n.mapSize.height,a.depth,{format:Te,type:ce,depthBuffer:!1}),a._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=a._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Te,type:ce,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Te,type:ce,depthBuffer:!1}));let t=Xy(s);s.isDepthArrayTexture&&(t=t.depth(this.depthLayer));let i=Xy(this.vsmShadowMapVertical.texture);s.isDepthArrayTexture&&(i=i.depth(this.depthLayer));const r=uT("blurSamples","float",n).setGroup(W_),o=uT("radius","float",n).setGroup(W_),l=uT("mapSize","vec2",n).setGroup(W_);let u=this.vsmMaterialVertical||(this.vsmMaterialVertical=new OM);u.fragmentNode=oP({samples:r,radius:o,size:l,shadowPass:t,depthLayer:this.depthLayer}).context(e.getSharedContext()),u.name="VSMVertical",u=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new OM),u.fragmentNode=lP({samples:r,radius:o,size:l,shadowPass:i,depthLayer:this.depthLayer}).context(e.getSharedContext()),u.name="VSMHorizontal"}const o=uT("intensity","float",n).setGroup(W_),l=uT("normalBias","float",n).setGroup(W_),u=VN(i).mul(YN.add(Xb.mul(l))),c=this.setupShadowCoord(e,u),h=n.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(null===h)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const d=3===r?this.vsmShadowMapHorizontal.texture:s,p=this.setupShadowFilter(e,{filterFn:h,shadowTexture:a.texture,depthTexture:d,shadowCoord:c,shadow:n,depthLayer:this.depthLayer});let m=Xy(a.texture,c);s.isDepthArrayTexture&&(m=m.depth(this.depthLayer));const f=Cx(1,p.rgb.mix(m,1),o.mul(m.a)).toVar();return this.shadowMap=a,this.shadow.map=a,f}setup(e){if(!1!==e.renderer.shadowMap.enabled)return Fg((()=>{let t=this._node;return this.setupShadowPosition(e),null===t&&(this._node=t=this.setupShadow(e)),e.material.shadowNode,e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t}))()}renderShadow(e){const{shadow:t,shadowMap:i,light:n}=this,{renderer:r,scene:s}=e;t.updateMatrices(n),i.setSize(t.mapSize.width,t.mapSize.height,i.depth),r.render(s,t.camera)}updateShadow(e){const{shadowMap:t,light:i,shadow:n}=this,{renderer:r,scene:s,camera:a}=e,o=r.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const u=n.camera.layers.mask;4294967294&n.camera.layers.mask||(n.camera.layers.mask=a.layers.mask);const c=r.getRenderObjectFunction(),h=r.getMRT(),d=!!h&&h.has("velocity");cP=function(e,t,i){return i=function(e,t){return t=function(e,t={}){return t.background=e.background,t.backgroundNode=e.backgroundNode,t.overrideMaterial=e.overrideMaterial,t}(e,t),e.background=null,e.backgroundNode=null,e.overrideMaterial=null,t}(t,i=KN(e,i)),i}(r,s,cP),s.overrideMaterial=nP(i),r.setRenderObjectFunction(aP(r,n,o,d)),r.setClearColor(0,0),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(c),!0!==i.isPointLight&&3===o&&this.vsmPass(r),n.camera.layers.mask=u,function(e,t,i){!function(e,t){e.toneMapping=t.toneMapping,e.toneMappingExposure=t.toneMappingExposure,e.outputColorSpace=t.outputColorSpace,e.setRenderTarget(t.renderTarget,t.activeCubeFace,t.activeMipmapLevel),e.setRenderObjectFunction(t.renderObjectFunction),e.setPixelRatio(t.pixelRatio),e.setMRT(t.mrt),e.setClearColor(t.clearColor,t.clearAlpha),e.autoClear=t.autoClear,e.setScissorTest(t.scissorTest)}(e,i),function(e,t){e.background=t.background,e.backgroundNode=t.backgroundNode,e.overrideMaterial=t.overrideMaterial}(t,i)}(r,s,cP)}vsmPass(e){const{shadow:t}=this,i=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,i),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,i),e.setRenderTarget(this.vsmShadowMapVertical),hP.material=this.vsmMaterialVertical,hP.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),hP.material=this.vsmMaterialHorizontal,hP.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let i=t.needsUpdate||t.autoUpdate;i&&(this._cameraFrameId[e.camera]===e.frameId&&(i=!1),this._cameraFrameId[e.camera]=e.frameId),i&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const pP=(e,t)=>Ng(new dP(e,t)),mP=new Bn,fP=Fg((([e,t])=>{const i=e.toVar(),n=ex(i),r=sv(1,fx(n.x,fx(n.y,n.z)));n.mulAssign(r),i.mulAssign(r.mul(t.mul(2).oneMinus()));const s=Xg(i.xy).toVar(),a=t.mul(1.5).oneMinus();return Vg(n.z.greaterThanEqual(a),(()=>{Vg(i.z.greaterThan(0),(()=>{s.x.assign(nv(4,i.x))}))})).ElseIf(n.x.greaterThanEqual(a),(()=>{const e=tx(i.x);s.x.assign(i.z.mul(e).add(e.mul(2)))})).ElseIf(n.y.greaterThanEqual(a),(()=>{const e=tx(i.y);s.x.assign(i.x.add(e.mul(2)).add(2)),s.y.assign(i.z.mul(e).sub(2))})),Xg(.125,.25).mul(s).add(Xg(.375,.75)).flipY()})).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),gP=Fg((({depthTexture:e,bd3D:t,dp:i,texelSize:n})=>Xy(e,fP(t,n.y)).compare(i))),_P=Fg((({depthTexture:e,bd3D:t,dp:i,texelSize:n,shadow:r})=>{const s=uT("radius","float",r).setGroup(W_),a=Xg(-1,1).mul(s).mul(n.y);return Xy(e,fP(t.add(a.xyy),n.y)).compare(i).add(Xy(e,fP(t.add(a.yyy),n.y)).compare(i)).add(Xy(e,fP(t.add(a.xyx),n.y)).compare(i)).add(Xy(e,fP(t.add(a.yyx),n.y)).compare(i)).add(Xy(e,fP(t,n.y)).compare(i)).add(Xy(e,fP(t.add(a.xxy),n.y)).compare(i)).add(Xy(e,fP(t.add(a.yxy),n.y)).compare(i)).add(Xy(e,fP(t.add(a.xxx),n.y)).compare(i)).add(Xy(e,fP(t.add(a.yxx),n.y)).compare(i)).mul(1/9)})),vP=Fg((({filterFn:e,depthTexture:t,shadowCoord:i,shadow:n})=>{const r=i.xyz.toVar(),s=r.length(),a=$_("float").setGroup(W_).onRenderUpdate((()=>n.camera.near)),o=$_("float").setGroup(W_).onRenderUpdate((()=>n.camera.far)),l=uT("bias","float",n).setGroup(W_),u=$_(n.mapSize).setGroup(W_),c=Gg(1).toVar();return Vg(s.sub(o).lessThanEqual(0).and(s.sub(a).greaterThanEqual(0)),(()=>{const i=s.sub(a).div(o.sub(a)).toVar();i.addAssign(l);const h=r.normalize(),d=Xg(1).div(u.mul(Xg(4,2)));c.assign(e({depthTexture:t,bd3D:h,dp:i,texelSize:d,shadow:n}))})),c})),xP=new ui,yP=new Gt,bP=new Gt;class TP extends dP{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return 0===e?gP:_P}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:i,depthTexture:n,shadowCoord:r,shadow:s}){return vP({filterFn:t,shadowTexture:i,depthTexture:n,shadowCoord:r,shadow:s})}renderShadow(e){const{shadow:t,shadowMap:i,light:n}=this,{renderer:r,scene:s}=e,a=t.getFrameExtents();bP.copy(t.mapSize),bP.multiply(a),i.setSize(bP.width,bP.height),yP.copy(t.mapSize);const o=r.autoClear,l=r.getClearColor(mP),u=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const c=t.getViewportCount();for(let h=0;h<c;h++){const e=t.getViewport(h),a=yP.x*e.x,o=bP.y-yP.y-yP.y*e.y;xP.set(a,o,yP.x*e.z,yP.y*e.w),i.viewport.copy(xP),t.updateMatrices(n,h),r.render(s,t.camera)}r.autoClear=o,r.setClearColor(l,u)}}const SP=(e,t)=>Ng(new TP(e,t));class MP extends ZS{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new Bn,this.colorNode=e&&e.colorNode||$_(this.color).setGroup(W_),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Uf.FRAME}customCacheKey(){return bf(this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}getLightVector(e){return HN(this.light).sub(e.context.positionView||Ub)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return pP(this.light)}setupShadow(e){const{renderer:t}=e;if(!1===t.shadowMap.enabled)return;let i=this.shadowColorNode;if(null===i){const e=this.light.shadow.shadowNode;let t;t=void 0!==e?Ng(e):this.setupShadowNode(),this.shadowNode=t,this.shadowColorNode=i=this.colorNode.mul(t),this.baseColorNode=this.colorNode}this.colorNode=i}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),i=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),i&&e.lightsNode.setupDirectRectAreaLight(e,this,i)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const wP=Fg((({lightDistance:e,cutoffDistance:t,decayExponent:i})=>{const n=e.pow(i).max(.01).reciprocal();return t.greaterThan(0).select(n.mul(e.div(t).pow4().oneMinus().clamp().pow2()),n)})),EP=({color:e,lightVector:t,cutoffDistance:i,decayExponent:n})=>{const r=t.normalize(),s=t.length(),a=wP({lightDistance:s,cutoffDistance:i,decayExponent:n});return{lightDirection:r,lightColor:e.mul(a)}};class AP extends MP{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=$_(0).setGroup(W_),this.decayExponentNode=$_(2).setGroup(W_)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return SP(this.light)}setupDirect(e){return EP({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const RP=Fg((([e=zy()])=>{const t=e.mul(2),i=t.x.floor(),n=t.y.floor();return i.add(n).mod(2).sign()})),CP=Fg((([e=zy()],{renderer:t,material:i})=>{const n=Gg(1).toVar(),r=Rx(e.mul(2).sub(1));if(i.alphaToCoverage&&t.samples>1){const e=Gg(r.fwidth()).toVar();n.assign(Ix(e.oneMinus(),e.add(1),r).oneMinus())}else r.greaterThan(1).discard();return n})),NP=Fg((([e,t,i])=>{const n=Gg(i).toVar(),r=Gg(t).toVar(),s=jg(e).toVar();return Gx(s,r,n)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),PP=Fg((([e,t])=>{const i=jg(t).toVar(),n=Gg(e).toVar();return Gx(i,n.negate(),n)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),LP=Fg((([e])=>{const t=Gg(e).toVar();return Hg(Wv(t))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),IP=Fg((([e,t])=>{const i=Gg(e).toVar();return t.assign(LP(i)),i.sub(Gg(t))})),DP=ER([Fg((([e,t,i,n,r,s])=>{const a=Gg(s).toVar(),o=Gg(r).toVar(),l=Gg(n).toVar(),u=Gg(i).toVar(),c=Gg(t).toVar(),h=Gg(e).toVar(),d=Gg(nv(1,o)).toVar();return nv(1,a).mul(h.mul(d).add(c.mul(o))).add(a.mul(u.mul(d).add(l.mul(o))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Fg((([e,t,i,n,r,s])=>{const a=Gg(s).toVar(),o=Gg(r).toVar(),l=Kg(n).toVar(),u=Kg(i).toVar(),c=Kg(t).toVar(),h=Kg(e).toVar(),d=Gg(nv(1,o)).toVar();return nv(1,a).mul(h.mul(d).add(c.mul(o))).add(a.mul(u.mul(d).add(l.mul(o))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),UP=ER([Fg((([e,t,i,n,r,s,a,o,l,u,c])=>{const h=Gg(c).toVar(),d=Gg(u).toVar(),p=Gg(l).toVar(),m=Gg(o).toVar(),f=Gg(a).toVar(),g=Gg(s).toVar(),_=Gg(r).toVar(),v=Gg(n).toVar(),x=Gg(i).toVar(),y=Gg(t).toVar(),b=Gg(e).toVar(),T=Gg(nv(1,p)).toVar(),S=Gg(nv(1,d)).toVar();return Gg(nv(1,h)).toVar().mul(S.mul(b.mul(T).add(y.mul(p))).add(d.mul(x.mul(T).add(v.mul(p))))).add(h.mul(S.mul(_.mul(T).add(g.mul(p))).add(d.mul(f.mul(T).add(m.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),Fg((([e,t,i,n,r,s,a,o,l,u,c])=>{const h=Gg(c).toVar(),d=Gg(u).toVar(),p=Gg(l).toVar(),m=Kg(o).toVar(),f=Kg(a).toVar(),g=Kg(s).toVar(),_=Kg(r).toVar(),v=Kg(n).toVar(),x=Kg(i).toVar(),y=Kg(t).toVar(),b=Kg(e).toVar(),T=Gg(nv(1,p)).toVar(),S=Gg(nv(1,d)).toVar();return Gg(nv(1,h)).toVar().mul(S.mul(b.mul(T).add(y.mul(p))).add(d.mul(x.mul(T).add(v.mul(p))))).add(h.mul(S.mul(_.mul(T).add(g.mul(p))).add(d.mul(f.mul(T).add(m.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),FP=ER([Fg((([e,t,i])=>{const n=Gg(i).toVar(),r=Gg(t).toVar(),s=Wg(e).toVar(),a=Wg(s.bitAnd(Wg(7))).toVar(),o=Gg(NP(a.lessThan(Wg(4)),r,n)).toVar(),l=Gg(rv(2,NP(a.lessThan(Wg(4)),n,r))).toVar();return PP(o,jg(a.bitAnd(Wg(1)))).add(PP(l,jg(a.bitAnd(Wg(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Gg(t).toVar(),o=Wg(e).toVar(),l=Wg(o.bitAnd(Wg(15))).toVar(),u=Gg(NP(l.lessThan(Wg(8)),a,s)).toVar(),c=Gg(NP(l.lessThan(Wg(4)),s,NP(l.equal(Wg(12)).or(l.equal(Wg(14))),a,r))).toVar();return PP(u,jg(l.bitAnd(Wg(1)))).add(PP(c,jg(l.bitAnd(Wg(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]})]),OP=ER([Fg((([e,t,i])=>{const n=Gg(i).toVar(),r=Gg(t).toVar(),s=Qg(e).toVar();return Kg(FP(s.x,r,n),FP(s.y,r,n),FP(s.z,r,n))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Gg(t).toVar(),o=Qg(e).toVar();return Kg(FP(o.x,a,s,r),FP(o.y,a,s,r),FP(o.z,a,s,r))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]})]),BP=Fg((([e])=>{const t=Gg(e).toVar();return rv(.6616,t)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),VP=Fg((([e])=>{const t=Gg(e).toVar();return rv(.982,t)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),zP=ER([BP,Fg((([e])=>{const t=Kg(e).toVar();return rv(.6616,t)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),kP=ER([VP,Fg((([e])=>{const t=Kg(e).toVar();return rv(.982,t)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),GP=Fg((([e,t])=>{const i=Hg(t).toVar(),n=Wg(e).toVar();return n.shiftLeft(i).bitOr(n.shiftRight(Hg(32).sub(i)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),HP=Fg((([e,t,i])=>{e.subAssign(i),e.bitXorAssign(GP(i,Hg(4))),i.addAssign(t),t.subAssign(e),t.bitXorAssign(GP(e,Hg(6))),e.addAssign(i),i.subAssign(t),i.bitXorAssign(GP(t,Hg(8))),t.addAssign(e),e.subAssign(i),e.bitXorAssign(GP(i,Hg(16))),i.addAssign(t),t.subAssign(e),t.bitXorAssign(GP(e,Hg(19))),e.addAssign(i),i.subAssign(t),i.bitXorAssign(GP(t,Hg(4))),t.addAssign(e)})),WP=Fg((([e,t,i])=>{const n=Wg(i).toVar(),r=Wg(t).toVar(),s=Wg(e).toVar();return n.bitXorAssign(r),n.subAssign(GP(r,Hg(14))),s.bitXorAssign(n),s.subAssign(GP(n,Hg(11))),r.bitXorAssign(s),r.subAssign(GP(s,Hg(25))),n.bitXorAssign(r),n.subAssign(GP(r,Hg(16))),s.bitXorAssign(n),s.subAssign(GP(n,Hg(4))),r.bitXorAssign(s),r.subAssign(GP(s,Hg(14))),n.bitXorAssign(r),n.subAssign(GP(r,Hg(24))),n})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),jP=Fg((([e])=>{const t=Wg(e).toVar();return Gg(t).div(Gg(Wg(Hg(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),XP=Fg((([e])=>{const t=Gg(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),$P=ER([Fg((([e])=>{const t=Hg(e).toVar(),i=Wg(Wg(1)).toVar(),n=Wg(Wg(Hg(3735928559)).add(i.shiftLeft(Wg(2))).add(Wg(13))).toVar();return WP(n.add(Wg(t)),n,n)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),Fg((([e,t])=>{const i=Hg(t).toVar(),n=Hg(e).toVar(),r=Wg(Wg(2)).toVar(),s=Wg().toVar(),a=Wg().toVar(),o=Wg().toVar();return s.assign(a.assign(o.assign(Wg(Hg(3735928559)).add(r.shiftLeft(Wg(2))).add(Wg(13))))),s.addAssign(Wg(n)),a.addAssign(Wg(i)),WP(s,a,o)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Hg(t).toVar(),s=Hg(e).toVar(),a=Wg(Wg(3)).toVar(),o=Wg().toVar(),l=Wg().toVar(),u=Wg().toVar();return o.assign(l.assign(u.assign(Wg(Hg(3735928559)).add(a.shiftLeft(Wg(2))).add(Wg(13))))),o.addAssign(Wg(s)),l.addAssign(Wg(r)),u.addAssign(Wg(n)),WP(o,l,u)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Fg((([e,t,i,n])=>{const r=Hg(n).toVar(),s=Hg(i).toVar(),a=Hg(t).toVar(),o=Hg(e).toVar(),l=Wg(Wg(4)).toVar(),u=Wg().toVar(),c=Wg().toVar(),h=Wg().toVar();return u.assign(c.assign(h.assign(Wg(Hg(3735928559)).add(l.shiftLeft(Wg(2))).add(Wg(13))))),u.addAssign(Wg(o)),c.addAssign(Wg(a)),h.addAssign(Wg(s)),HP(u,c,h),u.addAssign(Wg(r)),WP(u,c,h)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),Fg((([e,t,i,n,r])=>{const s=Hg(r).toVar(),a=Hg(n).toVar(),o=Hg(i).toVar(),l=Hg(t).toVar(),u=Hg(e).toVar(),c=Wg(Wg(5)).toVar(),h=Wg().toVar(),d=Wg().toVar(),p=Wg().toVar();return h.assign(d.assign(p.assign(Wg(Hg(3735928559)).add(c.shiftLeft(Wg(2))).add(Wg(13))))),h.addAssign(Wg(u)),d.addAssign(Wg(l)),p.addAssign(Wg(o)),HP(h,d,p),h.addAssign(Wg(a)),d.addAssign(Wg(s)),WP(h,d,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),qP=ER([Fg((([e,t])=>{const i=Hg(t).toVar(),n=Hg(e).toVar(),r=Wg($P(n,i)).toVar(),s=Qg().toVar();return s.x.assign(r.bitAnd(Hg(255))),s.y.assign(r.shiftRight(Hg(8)).bitAnd(Hg(255))),s.z.assign(r.shiftRight(Hg(16)).bitAnd(Hg(255))),s})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Hg(t).toVar(),s=Hg(e).toVar(),a=Wg($P(s,r,n)).toVar(),o=Qg().toVar();return o.x.assign(a.bitAnd(Hg(255))),o.y.assign(a.shiftRight(Hg(8)).bitAnd(Hg(255))),o.z.assign(a.shiftRight(Hg(16)).bitAnd(Hg(255))),o})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),YP=ER([Fg((([e])=>{const t=Xg(e).toVar(),i=Hg().toVar(),n=Hg().toVar(),r=Gg(IP(t.x,i)).toVar(),s=Gg(IP(t.y,n)).toVar(),a=Gg(XP(r)).toVar(),o=Gg(XP(s)).toVar(),l=Gg(DP(FP($P(i,n),r,s),FP($P(i.add(Hg(1)),n),r.sub(1),s),FP($P(i,n.add(Hg(1))),r,s.sub(1)),FP($P(i.add(Hg(1)),n.add(Hg(1))),r.sub(1),s.sub(1)),a,o)).toVar();return zP(l)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),Fg((([e])=>{const t=Kg(e).toVar(),i=Hg().toVar(),n=Hg().toVar(),r=Hg().toVar(),s=Gg(IP(t.x,i)).toVar(),a=Gg(IP(t.y,n)).toVar(),o=Gg(IP(t.z,r)).toVar(),l=Gg(XP(s)).toVar(),u=Gg(XP(a)).toVar(),c=Gg(XP(o)).toVar(),h=Gg(UP(FP($P(i,n,r),s,a,o),FP($P(i.add(Hg(1)),n,r),s.sub(1),a,o),FP($P(i,n.add(Hg(1)),r),s,a.sub(1),o),FP($P(i.add(Hg(1)),n.add(Hg(1)),r),s.sub(1),a.sub(1),o),FP($P(i,n,r.add(Hg(1))),s,a,o.sub(1)),FP($P(i.add(Hg(1)),n,r.add(Hg(1))),s.sub(1),a,o.sub(1)),FP($P(i,n.add(Hg(1)),r.add(Hg(1))),s,a.sub(1),o.sub(1)),FP($P(i.add(Hg(1)),n.add(Hg(1)),r.add(Hg(1))),s.sub(1),a.sub(1),o.sub(1)),l,u,c)).toVar();return kP(h)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),KP=ER([Fg((([e])=>{const t=Xg(e).toVar(),i=Hg().toVar(),n=Hg().toVar(),r=Gg(IP(t.x,i)).toVar(),s=Gg(IP(t.y,n)).toVar(),a=Gg(XP(r)).toVar(),o=Gg(XP(s)).toVar(),l=Kg(DP(OP(qP(i,n),r,s),OP(qP(i.add(Hg(1)),n),r.sub(1),s),OP(qP(i,n.add(Hg(1))),r,s.sub(1)),OP(qP(i.add(Hg(1)),n.add(Hg(1))),r.sub(1),s.sub(1)),a,o)).toVar();return zP(l)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Fg((([e])=>{const t=Kg(e).toVar(),i=Hg().toVar(),n=Hg().toVar(),r=Hg().toVar(),s=Gg(IP(t.x,i)).toVar(),a=Gg(IP(t.y,n)).toVar(),o=Gg(IP(t.z,r)).toVar(),l=Gg(XP(s)).toVar(),u=Gg(XP(a)).toVar(),c=Gg(XP(o)).toVar(),h=Kg(UP(OP(qP(i,n,r),s,a,o),OP(qP(i.add(Hg(1)),n,r),s.sub(1),a,o),OP(qP(i,n.add(Hg(1)),r),s,a.sub(1),o),OP(qP(i.add(Hg(1)),n.add(Hg(1)),r),s.sub(1),a.sub(1),o),OP(qP(i,n,r.add(Hg(1))),s,a,o.sub(1)),OP(qP(i.add(Hg(1)),n,r.add(Hg(1))),s.sub(1),a,o.sub(1)),OP(qP(i,n.add(Hg(1)),r.add(Hg(1))),s,a.sub(1),o.sub(1)),OP(qP(i.add(Hg(1)),n.add(Hg(1)),r.add(Hg(1))),s.sub(1),a.sub(1),o.sub(1)),l,u,c)).toVar();return kP(h)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),ZP=ER([Fg((([e])=>{const t=Gg(e).toVar(),i=Hg(LP(t)).toVar();return jP($P(i))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),Fg((([e])=>{const t=Xg(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar();return jP($P(i,n))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),Fg((([e])=>{const t=Kg(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar(),r=Hg(LP(t.z)).toVar();return jP($P(i,n,r))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),Fg((([e])=>{const t=e_(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar(),r=Hg(LP(t.z)).toVar(),s=Hg(LP(t.w)).toVar();return jP($P(i,n,r,s))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),QP=ER([Fg((([e])=>{const t=Gg(e).toVar(),i=Hg(LP(t)).toVar();return Kg(jP($P(i,Hg(0))),jP($P(i,Hg(1))),jP($P(i,Hg(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),Fg((([e])=>{const t=Xg(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar();return Kg(jP($P(i,n,Hg(0))),jP($P(i,n,Hg(1))),jP($P(i,n,Hg(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Fg((([e])=>{const t=Kg(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar(),r=Hg(LP(t.z)).toVar();return Kg(jP($P(i,n,r,Hg(0))),jP($P(i,n,r,Hg(1))),jP($P(i,n,r,Hg(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Fg((([e])=>{const t=e_(e).toVar(),i=Hg(LP(t.x)).toVar(),n=Hg(LP(t.y)).toVar(),r=Hg(LP(t.z)).toVar(),s=Hg(LP(t.w)).toVar();return Kg(jP($P(i,n,r,s,Hg(0))),jP($P(i,n,r,s,Hg(1))),jP($P(i,n,r,s,Hg(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),JP=Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Hg(t).toVar(),o=Kg(e).toVar(),l=Gg(0).toVar(),u=Gg(1).toVar();return WS(a,(()=>{l.addAssign(u.mul(YP(o))),u.mulAssign(r),o.mulAssign(s)})),l})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),eL=Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Hg(t).toVar(),o=Kg(e).toVar(),l=Kg(0).toVar(),u=Gg(1).toVar();return WS(a,(()=>{l.addAssign(u.mul(KP(o))),u.mulAssign(r),o.mulAssign(s)})),l})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),tL=Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Hg(t).toVar(),o=Kg(e).toVar();return Xg(JP(o,a,s,r),JP(o.add(Kg(Hg(19),Hg(193),Hg(17))),a,s,r))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),iL=Fg((([e,t,i,n])=>{const r=Gg(n).toVar(),s=Gg(i).toVar(),a=Hg(t).toVar(),o=Kg(e).toVar(),l=Kg(eL(o,a,s,r)).toVar(),u=Gg(JP(o.add(Kg(Hg(19),Hg(193),Hg(17))),a,s,r)).toVar();return e_(l,u)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),nL=ER([Fg((([e,t,i,n,r,s,a])=>{const o=Hg(a).toVar(),l=Gg(s).toVar(),u=Hg(r).toVar(),c=Hg(n).toVar(),h=Hg(i).toVar(),d=Hg(t).toVar(),p=Xg(e).toVar(),m=Kg(QP(Xg(d.add(c),h.add(u)))).toVar(),f=Xg(m.x,m.y).toVar();f.subAssign(.5),f.mulAssign(l),f.addAssign(.5);const g=Xg(Xg(Gg(d),Gg(h)).add(f)).toVar(),_=Xg(g.sub(p)).toVar();return Vg(o.equal(Hg(2)),(()=>ex(_.x).add(ex(_.y)))),Vg(o.equal(Hg(3)),(()=>fx(ex(_.x),ex(_.y)))),yx(_,_)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Fg((([e,t,i,n,r,s,a,o,l])=>{const u=Hg(l).toVar(),c=Gg(o).toVar(),h=Hg(a).toVar(),d=Hg(s).toVar(),p=Hg(r).toVar(),m=Hg(n).toVar(),f=Hg(i).toVar(),g=Hg(t).toVar(),_=Kg(e).toVar(),v=Kg(QP(Kg(g.add(p),f.add(d),m.add(h)))).toVar();v.subAssign(.5),v.mulAssign(c),v.addAssign(.5);const x=Kg(Kg(Gg(g),Gg(f),Gg(m)).add(v)).toVar(),y=Kg(x.sub(_)).toVar();return Vg(u.equal(Hg(2)),(()=>ex(y.x).add(ex(y.y)).add(ex(y.z)))),Vg(u.equal(Hg(3)),(()=>fx(fx(ex(y.x),ex(y.y)),ex(y.z)))),yx(y,y)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),rL=Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Xg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Xg(IP(s.x,a),IP(s.y,o)).toVar(),u=Gg(1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{const i=Gg(nL(l,e,t,a,o,r,n)).toVar();u.assign(mx(u,i))}))})),Vg(n.equal(Hg(0)),(()=>{u.assign(Gv(u))})),u})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),sL=Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Xg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Xg(IP(s.x,a),IP(s.y,o)).toVar(),u=Xg(1e6,1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{const i=Gg(nL(l,e,t,a,o,r,n)).toVar();Vg(i.lessThan(u.x),(()=>{u.y.assign(u.x),u.x.assign(i)})).ElseIf(i.lessThan(u.y),(()=>{u.y.assign(i)}))}))})),Vg(n.equal(Hg(0)),(()=>{u.assign(Gv(u))})),u})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),aL=Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Xg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Xg(IP(s.x,a),IP(s.y,o)).toVar(),u=Kg(1e6,1e6,1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{const i=Gg(nL(l,e,t,a,o,r,n)).toVar();Vg(i.lessThan(u.x),(()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(i)})).ElseIf(i.lessThan(u.y),(()=>{u.z.assign(u.y),u.y.assign(i)})).ElseIf(i.lessThan(u.z),(()=>{u.z.assign(i)}))}))})),Vg(n.equal(Hg(0)),(()=>{u.assign(Gv(u))})),u})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),oL=ER([rL,Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Kg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Hg().toVar(),u=Kg(IP(s.x,a),IP(s.y,o),IP(s.z,l)).toVar(),c=Gg(1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{WS({start:-1,end:Hg(1),name:"z",condition:"<="},(({z:i})=>{const s=Gg(nL(u,e,t,i,a,o,l,r,n)).toVar();c.assign(mx(c,s))}))}))})),Vg(n.equal(Hg(0)),(()=>{c.assign(Gv(c))})),c})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),lL=ER([sL,Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Kg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Hg().toVar(),u=Kg(IP(s.x,a),IP(s.y,o),IP(s.z,l)).toVar(),c=Xg(1e6,1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{WS({start:-1,end:Hg(1),name:"z",condition:"<="},(({z:i})=>{const s=Gg(nL(u,e,t,i,a,o,l,r,n)).toVar();Vg(s.lessThan(c.x),(()=>{c.y.assign(c.x),c.x.assign(s)})).ElseIf(s.lessThan(c.y),(()=>{c.y.assign(s)}))}))}))})),Vg(n.equal(Hg(0)),(()=>{c.assign(Gv(c))})),c})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),uL=ER([aL,Fg((([e,t,i])=>{const n=Hg(i).toVar(),r=Gg(t).toVar(),s=Kg(e).toVar(),a=Hg().toVar(),o=Hg().toVar(),l=Hg().toVar(),u=Kg(IP(s.x,a),IP(s.y,o),IP(s.z,l)).toVar(),c=Kg(1e6,1e6,1e6).toVar();return WS({start:-1,end:Hg(1),name:"x",condition:"<="},(({x:e})=>{WS({start:-1,end:Hg(1),name:"y",condition:"<="},(({y:t})=>{WS({start:-1,end:Hg(1),name:"z",condition:"<="},(({z:i})=>{const s=Gg(nL(u,e,t,i,a,o,l,r,n)).toVar();Vg(s.lessThan(c.x),(()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(s)})).ElseIf(s.lessThan(c.y),(()=>{c.z.assign(c.y),c.y.assign(s)})).ElseIf(s.lessThan(c.z),(()=>{c.z.assign(s)}))}))}))})),Vg(n.equal(Hg(0)),(()=>{c.assign(Gv(c))})),c})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),cL=Fg((([e])=>{const t=e.y,i=e.z,n=Kg().toVar();return Vg(t.lessThan(1e-4),(()=>{n.assign(Kg(i,i,i))})).Else((()=>{let r=e.x;r=r.sub(Wv(r)).mul(6).toVar();const s=Hg(ux(r)),a=r.sub(Gg(s)),o=i.mul(t.oneMinus()),l=i.mul(t.mul(a).oneMinus()),u=i.mul(t.mul(a.oneMinus()).oneMinus());Vg(s.equal(Hg(0)),(()=>{n.assign(Kg(i,u,o))})).ElseIf(s.equal(Hg(1)),(()=>{n.assign(Kg(l,i,o))})).ElseIf(s.equal(Hg(2)),(()=>{n.assign(Kg(o,i,u))})).ElseIf(s.equal(Hg(3)),(()=>{n.assign(Kg(o,l,i))})).ElseIf(s.equal(Hg(4)),(()=>{n.assign(Kg(u,o,i))})).Else((()=>{n.assign(Kg(i,o,l))}))})),n})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),hL=Fg((([e])=>{const t=Kg(e).toVar(),i=Gg(t.x).toVar(),n=Gg(t.y).toVar(),r=Gg(t.z).toVar(),s=Gg(mx(i,mx(n,r))).toVar(),a=Gg(fx(i,fx(n,r))).toVar(),o=Gg(a.sub(s)).toVar(),l=Gg().toVar(),u=Gg().toVar(),c=Gg().toVar();return c.assign(a),Vg(a.greaterThan(0),(()=>{u.assign(o.div(a))})).Else((()=>{u.assign(0)})),Vg(u.lessThanEqual(0),(()=>{l.assign(0)})).Else((()=>{Vg(i.greaterThanEqual(a),(()=>{l.assign(n.sub(r).div(o))})).ElseIf(n.greaterThanEqual(a),(()=>{l.assign(iv(2,r.sub(i).div(o)))})).Else((()=>{l.assign(iv(4,i.sub(n).div(o)))})),l.mulAssign(1/6),Vg(l.lessThan(0),(()=>{l.addAssign(1)}))})),Kg(l,u,c)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),dL=Fg((([e])=>{const t=Kg(e).toVar(),i=Jg(cv(t,Kg(.04045))).toVar(),n=Kg(t.div(12.92)).toVar(),r=Kg(Tx(fx(t.add(Kg(.055)),Kg(0)).div(1.055),Kg(2.4))).toVar();return Cx(n,r,i)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),pL=(e,t)=>{e=Gg(e),t=Gg(t);const i=Xg(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return Ix(e.sub(i),e.add(i),t)},mL=(e,t,i,n)=>Cx(e,t,i[n].clamp()),fL=(e,t,i,n,r)=>Cx(e,t,pL(i,n[r])),gL=Fg((([e,t,i])=>{const n=Xv(e).toVar(),r=nv(Gg(.5).mul(t.sub(i)),Ib).div(n).toVar(),s=nv(Gg(-.5).mul(t.sub(i)),Ib).div(n).toVar(),a=Kg().toVar();a.x=n.x.greaterThan(Gg(0)).select(r.x,s.x),a.y=n.y.greaterThan(Gg(0)).select(r.y,s.y),a.z=n.z.greaterThan(Gg(0)).select(r.z,s.z);const o=mx(mx(a.x,a.y),a.z).toVar();return Ib.add(n.mul(o)).toVar().sub(i)})),_L=Fg((([e,t])=>{const i=e.x,n=e.y,r=e.z;let s=t.element(0).mul(.886227);return s=s.add(t.element(1).mul(1.023328).mul(n)),s=s.add(t.element(2).mul(1.023328).mul(r)),s=s.add(t.element(3).mul(1.023328).mul(i)),s=s.add(t.element(4).mul(.858086).mul(i).mul(n)),s=s.add(t.element(5).mul(.858086).mul(n).mul(r)),s=s.add(t.element(6).mul(r.mul(r).mul(.743125).sub(.247708))),s=s.add(t.element(7).mul(.858086).mul(i).mul(r)),s=s.add(t.element(8).mul(.429043).mul(rv(i,i).sub(rv(n,n)))),s}));var vL=Object.freeze({__proto__:null,BRDF_GGX:Mw,BRDF_Lambert:uw,BasicPointShadowFilter:gP,BasicShadowFilter:QN,Break:jS,Const:Kx,Continue:()=>Ly("continue").toStack(),DFGApprox:ww,D_GGX:bw,Discard:Iy,EPSILON:Nv,F_Schlick:lw,Fn:Fg,INFINITY:Pv,If:Vg,Loop:WS,NodeAccess:Ff,NodeShaderStage:Df,NodeType:{BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},NodeUpdateType:Uf,PCFShadowFilter:JN,PCFSoftShadowFilter:eP,PI:Lv,PI2:Iv,PointShadowFilter:_P,Return:()=>Ly("return").toStack(),Schlick_to_F0:Aw,ScriptableNodeResources:pN,ShaderNode:Cg,Stack:zg,Switch:(...e)=>tg.Switch(...e),TBNViewMatrix:ET,VSMShadowFilter:tP,V_GGX_SmithCorrelated:xw,Var:Yx,abs:ex,acesFilmicToneMapping:JC,acos:Qv,add:iv,addMethodChaining:ng,addNodeElement:function(e){},agxToneMapping:nN,all:Dv,alphaT:S_,and:pv,anisotropy:M_,anisotropyB:E_,anisotropyT:w_,any:Uv,append:e=>zg(e),array:Y_,arrayBuffer:e=>Ng(new Jf(e,"ArrayBuffer")),asin:Zv,assign:Z_,atan:Jv,atan2:Bx,atomicAdd:(e,t)=>FN(DN.ATOMIC_ADD,e,t),atomicAnd:(e,t)=>FN(DN.ATOMIC_AND,e,t),atomicFunc:FN,atomicLoad:e=>FN(DN.ATOMIC_LOAD,e,null),atomicMax:(e,t)=>FN(DN.ATOMIC_MAX,e,t),atomicMin:(e,t)=>FN(DN.ATOMIC_MIN,e,t),atomicOr:(e,t)=>FN(DN.ATOMIC_OR,e,t),atomicStore:(e,t)=>FN(DN.ATOMIC_STORE,e,t),atomicSub:(e,t)=>FN(DN.ATOMIC_SUB,e,t),atomicXor:(e,t)=>FN(DN.ATOMIC_XOR,e,t),attenuationColor:B_,attenuationDistance:O_,attribute:Vy,attributeArray:(e,t="float")=>{let i,n;!0===t.isStruct?(i=t.layout.getLength(),n=Af("float")):(i=Rf(t),n=Af(t));const r=new hC(e,i,n);return VS(r,t,e)},backgroundBlurriness:_C,backgroundIntensity:vC,backgroundRotation:xC,batch:US,billboarding:LR,bitAnd:_v,bitNot:vv,bitOr:xv,bitXor:yv,bitangentGeometry:yT,bitangentLocal:bT,bitangentView:TT,bitangentWorld:ST,bitcast:dx,blendBurn:PC,blendColor:UC,blendDodge:LC,blendOverlay:DC,blendScreen:IC,blur:wE,bool:jg,buffer:Yy,bufferAttribute:vy,bumpMap:UT,burn:(...e)=>PC(e),bvec2:Yg,bvec3:Jg,bvec4:n_,bypass:Ay,cache:wy,call:J_,cameraFar:ib,cameraIndex:eb,cameraNear:tb,cameraNormalMatrix:ob,cameraPosition:lb,cameraProjectionMatrix:nb,cameraProjectionMatrixInverse:rb,cameraViewMatrix:sb,cameraWorldMatrix:ab,cbrt:Ax,cdl:kC,ceil:jv,checker:RP,cineonToneMapping:ZC,clamp:Nx,clearcoat:g_,clearcoatRoughness:__,code:aN,color:kg,colorSpaceToWorking:uy,colorToDirection:e=>Ng(e).mul(2).sub(1),compute:Sy,computeSkinning:(e,t=null)=>{const i=new kS(e);return i.positionNode=VS(new Ss(e.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(wS).toVar(),i.skinIndexNode=VS(new Ss(new Uint32Array(e.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(wS).toVar(),i.skinWeightNode=VS(new Ss(e.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(wS).toVar(),i.bindMatrixNode=$_(e.bindMatrix,"mat4"),i.bindMatrixInverseNode=$_(e.bindMatrixInverse,"mat4"),i.boneMatricesNode=Yy(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length),i.toPositionNode=t,Ng(i)},cond:Hx,context:jx,convert:l_,convertColorSpace:(e,t,i)=>Ng(new sy(Ng(e),t,i)),convertToTexture:(e,...t)=>e.isTextureNode?e:e.isPassNode?e.getTextureNode():aC(e,...t),cos:Yv,cross:bx,cubeTexture:aT,cubeToUV:fP,dFdx:sx,dFdy:ax,dashSize:P_,debug:Oy,decrement:Ev,decrementBefore:Mv,defaultBuildStages:Bf,defaultShaderStages:Of,defined:Ag,degrees:Ov,deltaTime:RR,densityFog:function(e,t){return xN(e,vN(t))},densityFogFactor:vN,depth:RM,depthPass:(e,t,i)=>Ng(new $C($C.DEPTH,e,t,i)),difference:xx,diffuseColor:d_,directPointLight:EP,directionToColor:jM,dispersion:V_,distance:vx,div:sv,dodge:(...e)=>LC(e),dot:yx,drawIndex:CS,dynamicBufferAttribute:xy,element:o_,emissive:p_,equal:ov,equals:px,equirectUV:YM,exp:Bv,exp2:Vv,expression:Ly,faceDirection:Vb,faceForward:Dx,faceforward:Vx,float:Gg,floor:Wv,fog:xN,fract:$v,frameGroup:H_,frameId:CR,frontFacing:Bb,fwidth:cx,gain:(e,t)=>e.lessThan(.5)?yR(e.mul(2),t).div(2):nv(1,yR(rv(nv(1,e),2),t).div(2)),gapSize:L_,getConstNodeType:Rg,getCurrentStack:Bg,getDirection:bE,getDistanceAttenuation:wP,getGeometryRoughness:_w,getNormalFromDepth:uC,getParallaxCorrectNormal:gL,getRoughness:vw,getScreenPosition:lC,getShIrradianceAt:_L,getShadowMaterial:nP,getShadowRenderObjectFunction:aP,getTextureIndex:gR,getViewPosition:oC,globalId:RN,glsl:(e,t)=>aN(e,t,"glsl"),glslFn:(e,t)=>lN(e,t,"glsl"),grayscale:FC,greaterThan:cv,greaterThanEqual:dv,hash:xR,highpModelNormalViewMatrix:Cb,highpModelViewMatrix:Rb,hue:VC,increment:wv,incrementBefore:Sv,instance:PS,instanceIndex:wS,instancedArray:(e,t="float")=>{let i,n;!0===t.isStruct?(i=t.layout.getLength(),n=Af("float")):(i=Rf(t),n=Af(t));const r=new cC(e,i,n);return VS(r,t,e)},instancedBufferAttribute:yy,instancedDynamicBufferAttribute:by,instancedMesh:IS,int:Hg,inverseSqrt:Hv,inversesqrt:zx,invocationLocalIndex:RS,invocationSubgroupIndex:AS,ior:D_,iridescence:y_,iridescenceIOR:b_,iridescenceThickness:T_,ivec2:$g,ivec3:Zg,ivec4:t_,js:(e,t)=>aN(e,t,"js"),label:Xx,length:ix,lengthSq:Rx,lessThan:uv,lessThanEqual:hv,lightPosition:kN,lightProjectionUV:zN,lightShadowMatrix:VN,lightTargetDirection:WN,lightTargetPosition:GN,lightViewPosition:HN,lightingContext:eM,lights:(e=[])=>Ng(new $N).setLights(e),linearDepth:CM,linearToneMapping:YC,localId:CN,log:zv,log2:kv,logarithmicDepthToViewZ:(e,t,i)=>{const n=e.mul(zv(i.div(t)));return Gg(Math.E).pow(n).mul(t).negate()},loop:(...e)=>WS(...e),luminance:zC,mat2:r_,mat3:s_,mat4:a_,matcapUV:hA,materialAO:yS,materialAlphaTest:BT,materialAnisotropy:nS,materialAnisotropyVector:bS,materialAttenuationColor:hS,materialAttenuationDistance:cS,materialClearcoat:ZT,materialClearcoatNormal:JT,materialClearcoatRoughness:QT,materialColor:VT,materialDispersion:vS,materialEmissive:kT,materialEnvIntensity:Jb,materialEnvRotation:eT,materialIOR:uS,materialIridescence:rS,materialIridescenceIOR:sS,materialIridescenceThickness:aS,materialLightMap:xS,materialLineDashOffset:gS,materialLineDashSize:pS,materialLineGapSize:mS,materialLineScale:dS,materialLineWidth:fS,materialMetalness:YT,materialNormal:KT,materialOpacity:GT,materialPointSize:_S,materialReference:dT,materialReflectivity:$T,materialRefractionRatio:Qb,materialRotation:eS,materialRoughness:qT,materialSheen:tS,materialSheenRoughness:iS,materialShininess:zT,materialSpecular:HT,materialSpecularColor:jT,materialSpecularIntensity:WT,materialSpecularStrength:XT,materialThickness:lS,materialTransmission:oS,max:fx,maxMipLevel:Wy,mediumpModelViewMatrix:Ab,metalness:f_,min:mx,mix:Cx,mixElement:Fx,mod:av,modInt:Rv,modelDirection:vb,modelNormalMatrix:Mb,modelPosition:yb,modelRadius:Sb,modelScale:bb,modelViewMatrix:Eb,modelViewPosition:Tb,modelViewProjection:TS,modelWorldMatrix:xb,modelWorldMatrixInverse:wb,morphReference:KS,mrt:vR,mul:rv,mx_aastep:pL,mx_cell_noise_float:(e=zy())=>ZP(e.convert("vec2|vec3")),mx_contrast:(e,t=1,i=.5)=>Gg(e).sub(i).mul(t).add(i),mx_fractal_noise_float:(e=zy(),t=3,i=2,n=.5,r=1)=>JP(e,Hg(t),i,n).mul(r),mx_fractal_noise_vec2:(e=zy(),t=3,i=2,n=.5,r=1)=>tL(e,Hg(t),i,n).mul(r),mx_fractal_noise_vec3:(e=zy(),t=3,i=2,n=.5,r=1)=>eL(e,Hg(t),i,n).mul(r),mx_fractal_noise_vec4:(e=zy(),t=3,i=2,n=.5,r=1)=>iL(e,Hg(t),i,n).mul(r),mx_hsvtorgb:cL,mx_noise_float:(e=zy(),t=1,i=0)=>YP(e.convert("vec2|vec3")).mul(t).add(i),mx_noise_vec3:(e=zy(),t=1,i=0)=>KP(e.convert("vec2|vec3")).mul(t).add(i),mx_noise_vec4:(e=zy(),t=1,i=0)=>{e=e.convert("vec2|vec3");return e_(KP(e),YP(e.add(Xg(19,73)))).mul(t).add(i)},mx_ramplr:(e,t,i=zy())=>mL(e,t,i,"x"),mx_ramptb:(e,t,i=zy())=>mL(e,t,i,"y"),mx_rgbtohsv:hL,mx_safepower:(e,t=1)=>(e=Gg(e)).abs().pow(t).mul(e.sign()),mx_splitlr:(e,t,i,n=zy())=>fL(e,t,i,n,"x"),mx_splittb:(e,t,i,n=zy())=>fL(e,t,i,n,"y"),mx_srgb_texture_to_lin_rec709:dL,mx_transform_uv:(e=1,t=0,i=zy())=>i.mul(e).add(t),mx_worley_noise_float:(e=zy(),t=1)=>oL(e.convert("vec2|vec3"),t,Hg(1)),mx_worley_noise_vec2:(e=zy(),t=1)=>lL(e.convert("vec2|vec3"),t,Hg(1)),mx_worley_noise_vec3:(e=zy(),t=1)=>uL(e.convert("vec2|vec3"),t,Hg(1)),negate:nx,neutralToneMapping:rN,nodeArray:Lg,nodeImmutable:Dg,nodeObject:Ng,nodeObjects:Pg,nodeProxy:Ig,normalFlat:Gb,normalGeometry:zb,normalLocal:kb,normalMap:PT,normalView:Hb,normalWorld:Wb,normalize:Xv,not:fv,notEqual:lv,numWorkgroups:EN,objectDirection:hb,objectGroup:j_,objectPosition:pb,objectRadius:gb,objectScale:mb,objectViewPosition:fb,objectWorldMatrix:db,oneMinus:rx,or:mv,orthographicDepthToViewZ:(e,t,i)=>t.sub(i).mul(e).sub(t),oscSawtooth:(e=AR)=>e.fract(),oscSine:(e=AR)=>e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5),oscSquare:(e=AR)=>e.fract().round(),oscTriangle:(e=AR)=>e.add(.5).fract().mul(2).sub(1).abs(),output:N_,outputStruct:fR,overlay:(...e)=>DC(e),overloadingFn:ER,parabola:yR,parallaxDirection:AT,parallaxUV:(e,t)=>e.sub(AT.mul(t)),parameter:(e,t)=>Ng(new uR(e,t)),pass:(e,t,i)=>Ng(new $C($C.COLOR,e,t,i)),passTexture:(e,t)=>Ng(new jC(e,t)),pcurve:(e,t,i)=>Tx(sv(Tx(e,t),iv(Tx(e,t),Tx(nv(1,e),i))),1/t),perspectiveDepthToViewZ:wM,pmremTexture:ZE,pointShadow:SP,pointUV:pC,pointWidth:I_,positionGeometry:Nb,positionLocal:Pb,positionPrevious:Lb,positionView:Ub,positionViewDirection:Fb,positionWorld:Ib,positionWorldDirection:Db,posterize:HC,pow:Tx,pow2:Sx,pow3:Mx,pow4:wx,property:c_,radians:Fv,rand:Ux,range:SN,rangeFog:function(e,t,i){return xN(e,_N(t,i))},rangeFogFactor:_N,reciprocal:lx,reference:uT,referenceBuffer:cT,reflect:_x,reflectVector:nT,reflectView:tT,reflector:e=>Ng(new QR(e)),refract:Lx,refractVector:rT,refractView:iT,reinhardToneMapping:KC,remainder:Av,remap:Cy,remapClamp:Ny,renderGroup:W_,renderOutput:Uy,rendererReference:py,rotate:fA,rotateUV:NR,roughness:m_,round:ox,rtt:aC,sRGBTransferEOTF:ty,sRGBTransferOETF:iy,sampler:e=>(!0===e.isNode?e:Xy(e)).convert("sampler"),samplerComparison:e=>(!0===e.isNode?e:Xy(e)).convert("samplerComparison"),saturate:Px,saturation:OC,screen:(...e)=>IC(e),screenCoordinate:oM,screenSize:aM,screenUV:sM,scriptable:fN,scriptableValue:cN,select:Gx,setCurrentStack:Og,shaderStages:Vf,shadow:pP,shadowPositionWorld:YN,shapeCircle:CP,sharedUniformGroup:G_,sheen:v_,sheenRoughness:x_,shiftLeft:bv,shiftRight:Tv,shininess:C_,sign:tx,sin:qv,sinc:(e,t)=>qv(Lv.mul(t.mul(e).sub(1))).div(Lv.mul(t.mul(e).sub(1))),skinning:GS,smoothstep:Ix,smoothstepElement:Ox,specularColor:A_,specularF90:R_,spherizeUV:PR,split:(e,t)=>Ng(new qf(Ng(e),t)),spritesheetUV:UR,sqrt:Gv,stack:hR,step:gx,storage:VS,storageBarrier:()=>PN("storage").toStack(),storageObject:(e,t,i)=>VS(e,t,i).setPBO(!0),storageTexture:bC,string:(e="")=>Ng(new Jf(e,"string")),struct:(e,t=null)=>{const i=new dR(e,t),n=(...t)=>{let n=null;if(t.length>0)if(t[0].isNode){n={};const i=Object.keys(e);for(let e=0;e<t.length;e++)n[i[e]]=t[e]}else n=t[0];return Ng(new pR(i,n))};return n.layout=i,n.isStruct=!0,n},sub:nv,subgroupIndex:ES,subgroupSize:NN,tan:Kv,tangentGeometry:pT,tangentLocal:mT,tangentView:fT,tangentWorld:gT,temp:Zx,texture:Xy,texture3D:MC,textureBarrier:()=>PN("texture").toStack(),textureBicubic:jw,textureCubeUV:TE,textureLoad:$y,textureSize:Gy,textureStore:(e,t,i)=>{const n=bC(e,t,i);return null!==i&&n.toStack(),n},thickness:F_,time:AR,timerDelta:(e=1)=>RR.mul(e),timerGlobal:(e=1)=>AR.mul(e),timerLocal:(e=1)=>AR.mul(e),toOutputColorSpace:ay,toWorkingColorSpace:oy,toneMapping:fy,toneMappingExposure:gy,toonOutlinePass:(e,t,i=new Bn(0,0,0),n=.003,r=1)=>Ng(new qC(e,t,Ng(i),Ng(n),Ng(r))),transformDirection:Ex,transformNormal:qb,transformNormalToView:Yb,transformedBentNormalView:RT,transformedBitangentView:MT,transformedBitangentWorld:wT,transformedClearcoatNormalView:$b,transformedNormalView:jb,transformedNormalWorld:Xb,transformedTangentView:_T,transformedTangentWorld:vT,transmission:U_,transpose:hx,triNoise3D:SR,triplanarTexture:(...e)=>OR(...e),triplanarTextures:OR,trunc:ux,tslFn:(...e)=>Fg(...e),uint:Wg,uniform:$_,uniformArray:Qy,uniformGroup:k_,uniforms:(e,t)=>Ng(new Zy(e,t)),userData:(e,t,i)=>Ng(new wC(e,t,i)),uv:zy,uvec2:qg,uvec3:Qg,uvec4:i_,varying:Jx,varyingProperty:h_,vec2:Xg,vec3:Kg,vec4:e_,vectorComponents:zf,velocity:NC,vertexColor:FM,vertexIndex:MS,vertexStage:ey,vibrance:BC,viewZToLogarithmicDepth:EM,viewZToOrthographicDepth:SM,viewZToPerspectiveDepth:MM,viewport:lM,viewportBottomLeft:mM,viewportCoordinate:cM,viewportDepthTexture:bM,viewportLinearDepth:NM,viewportMipTexture:vM,viewportResolution:dM,viewportSafeUV:IR,viewportSharedTexture:WM,viewportSize:uM,viewportTexture:_M,viewportTopLeft:pM,viewportUV:hM,wgsl:(e,t)=>aN(e,t,"wgsl"),wgslFn:(e,t)=>lN(e,t,"wgsl"),workgroupArray:(e,t)=>Ng(new IN("Workgroup",e,t)),workgroupBarrier:()=>PN("workgroup").toStack(),workgroupId:AN,workingToColorSpace:ly,xor:gv});const xL=new lR;class yL extends CA{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,i){const n=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let s=!1;if(null===r)n._clearColor.getRGB(xL),xL.a=n._clearColor.a;else if(!0===r.isColor)r.getRGB(xL),xL.a=1,s=!0;else if(!0===r.isNode){const i=this.get(e),s=r;xL.copy(n._clearColor);let a=i.backgroundMesh;if(void 0===a){let e=function(){r.removeEventListener("dispose",e),a.material.dispose(),a.geometry.dispose()};const t=jx(e_(s).mul(vC),{getUV:()=>xC.mul(Wb),getTextureLevel:()=>_C});let n=TS;n=n.setZ(n.w);const o=new OM;o.name="Background.material",o.side=1,o.depthTest=!1,o.depthWrite=!1,o.allowOverride=!1,o.fog=!1,o.lights=!1,o.vertexNode=n,o.colorNode=t,i.backgroundMeshNode=t,i.backgroundMesh=a=new br(new Ao(1,32,32),o),a.frustumCulled=!1,a.name="Background.mesh",a.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},r.addEventListener("dispose",e)}const o=s.getCacheKey();i.backgroundCacheKey!==o&&(i.backgroundMeshNode.node=e_(s).mul(vC),i.backgroundMeshNode.needsUpdate=!0,a.material.needsUpdate=!0,i.backgroundCacheKey=o),t.unshift(a,a.geometry,a.material,0,0,null,null)}const a=n.xr.getEnvironmentBlendMode();if("additive"===a?xL.set(0,0,0,1):"alpha-blend"===a&&xL.set(0,0,0,0),!0===n.autoClear||!0===s){const e=i.clearColorValue;e.r=xL.r,e.g=xL.g,e.b=xL.b,e.a=xL.a,!0!==n.backend.isWebGLBackend&&!0!==n.alpha||(e.r*=e.a,e.g*=e.a,e.b*=e.a),i.depthClearValue=n._clearDepth,i.stencilClearValue=n._clearStencil,i.clearColor=!0===n.autoClearColor,i.clearDepth=!0===n.autoClearDepth,i.clearStencil=!0===n.autoClearStencil}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let bL=0;class TL{constructor(e="",t=[],i=0,n=[]){this.name=e,this.bindings=t,this.index=i,this.bindingsReference=n,this.id=bL++}}class SL{constructor(e,t,i,n,r,s,a,o,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=i,this.transforms=u,this.nodeAttributes=n,this.bindings=r,this.updateNodes=s,this.updateBeforeNodes=a,this.updateAfterNodes=o,this.observer=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==t.bindings[0].groupNode.shared){const i=new TL(t.name,[],t.index,t);e.push(i);for(const e of t.bindings)i.bindings.push(e.clone())}else e.push(t)}return e}}class ML{constructor(e,t,i=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=i}}class wL{constructor(e,t,i){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=i.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class EL{constructor(e,t,i=!1,n=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=i,this.count=n}}class AL extends EL{constructor(e,t,i=null,n=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=i,this.interpolationSampling=n}}class RL{constructor(e,t,i=""){this.name=e,this.type=t,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let CL=0;class NL{constructor(e=null){this.id=CL++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class PL{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class LL{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class IL extends LL{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class DL extends LL{constructor(e,t=new Gt){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class UL extends LL{constructor(e,t=new fi){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class FL extends LL{constructor(e,t=new ui){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class OL extends LL{constructor(e,t=new Bn){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class BL extends LL{constructor(e,t=new gu){super(e,t),this.isMatrix2Uniform=!0,this.boundary=16,this.itemSize=4}}class VL extends LL{constructor(e,t=new Ht){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class zL extends LL{constructor(e,t=new ji){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class kL extends IL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class GL extends DL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class HL extends UL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class WL extends FL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class jL extends OL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class XL extends BL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class $L extends VL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class qL extends zL{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const YL=new WeakMap,KL=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),ZL=e=>/e/g.test(e)?String(e).replace(/\+/g,""):(e=Number(e))+(e%1?"":".0");class QL{constructor(e,t,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=hR(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new NL,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null}getBindGroupsCache(){let e=YL.get(this.renderer);return void 0===e&&(e=new MA,YL.set(this.renderer,e)),e}createRenderTarget(e,t,i){return new ci(e,t,i)}createRenderTargetArray(e,t,i,n){return new uu(e,t,i,n)}createCubeRenderTarget(e,t){return new KM(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const i=this.getBindGroupsCache(),n=[];let r,s=!0;for(const a of t)n.push(a),s=s&&!0!==a.groupNode.shared;return s?(r=i.get(n),void 0===r&&(r=new TL(e,n,this.bindingsIndexes[e].group,n),i.set(n,r))):r=new TL(e,n,this.bindingsIndexes[e].group,n),r}getBindGroupArray(e,t){const i=this.bindings[t];let n=i[e];return void 0===n&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(null===e){const t={},i=this.bindings;for(const e of Vf)for(const n in i[e]){const r=i[e][n];(t[n]||(t[n]=[])).push(...r)}e=[];for(const n in t){const i=t[n],r=this._getBindGroup(n,i);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort(((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order));for(let t=0;t<e.length;t++){const i=e[t];this.bindingsIndexes[i.name].group=t,i.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){!1===this.sequentialNodes.includes(e)&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes){e.getUpdateType()!==Uf.NONE&&this.updateNodes.push(e.getSelf())}for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),i=e.getUpdateAfterType();t!==Uf.NONE&&this.updateBeforeNodes.push(e.getSelf()),i!==Uf.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===ee||e.magFilter===te||e.magFilter===J||e.magFilter===ie||e.minFilter===ee||e.minFilter===te||e.minFilter===J||e.minFilter===ie}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const i=this.getDataFromNode(e);return void 0===i.cache&&(i.cache=new NL(t?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){}getInstanceIndex(){}getDrawIndex(){}getFrontFacing(){}getFragCoord(){}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){}generateTextureLod(){}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,i=null){let n=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const s=i?i[r]:null;n+=null!==s?s.build(this,e):this.generateConst(e),r<t-1&&(n+=", ")}return n+=" )",n}generateStruct(e,t,i=null){const n=[];for(const r of t){const{name:e,type:t}=r;i&&i[e]&&i[e].isNode?n.push(i[e].build(this,t)):n.push(this.generateConst(t))}return e+"( "+n.join(", ")+" )"}generateConst(e,t=null){if(null===t&&("float"===e||"int"===e||"uint"===e?t=0:"bool"===e?t=!1:"color"===e?t=new Bn:"vec2"===e?t=new Gt:"vec3"===e?t=new fi:"vec4"===e&&(t=new ui)),"float"===e)return ZL(t);if("int"===e)return`${Math.round(t)}`;if("uint"===e)return t>=0?`${Math.round(t)}u`:"0u";if("bool"===e)return t?"true":"false";if("color"===e)return`${this.getType("vec3")}( ${ZL(t.r)}, ${ZL(t.g)}, ${ZL(t.b)} )`;const i=this.getTypeLength(e),n=this.getComponentType(e),r=e=>this.generateConst(n,e);if(2===i)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(3===i)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(4===i&&"mat2"!==e)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(i>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const i=this.attributes;for(const r of i)if(r.name===e)return r;const n=new ML(e,t);return this.registerDeclaration(n),i.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"samplerComparison"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===oe)return"int";if(t===le)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;let i=Ef(e);const n="float"===t?"":t[0];return!0===/mat2/.test(t)&&(i=i.replace("vec","mat")),n+i}getTypeFromArray(e){return KL.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const i=t.array,n=e.itemSize,r=e.normalized;let s;return e instanceof er||!0===r||(s=this.getTypeFromArray(i)),this.getTypeFromLength(n,s)}getTypeLength(e){const t=this.getVectorType(e),i=/vec([2-4])/.exec(t);return null!==i?Number(i[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=hR(this.stack),this.stacks.push(Bg()||this.stack),Og(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Og(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,i=null){let n=(i=null===i?e.isGlobal(this)?this.globalCache:this.cache:i).getData(e);return void 0===n&&(n={},i.setData(e,n)),void 0===n[t]&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const i=this.getDataFromNode(e,t);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const i=this.getDataFromNode(e);let n=i.bufferAttribute;if(void 0===n){const r=this.uniforms.index++;n=new ML("nodeAttribute"+r,t,e),this.bufferAttributes.push(n),i.bufferAttribute=n}return n}getStructTypeFromNode(e,t,i=null,n=this.shaderStage){const r=this.getDataFromNode(e,n,this.globalCache);let s=r.structType;if(void 0===s){const e=this.structs.index++;null===i&&(i="StructType"+e),s=new PL(i,t),this.structs[n].push(s),r.structType=s}return s}getOutputStructTypeFromNode(e,t){const i=this.getStructTypeFromNode(e,t,"OutputType","fragment");return i.output=!0,i}getUniformFromNode(e,t,i=this.shaderStage,n=null){const r=this.getDataFromNode(e,i,this.globalCache);let s=r.uniform;if(void 0===s){const a=this.uniforms.index++;s=new wL(n||"nodeUniform"+a,t,e),this.uniforms[i].push(s),this.registerDeclaration(s),r.uniform=s}return s}getArrayCount(e){let t=null;return e.isArrayNode?t=e.count:e.isVarNode&&e.node.isArrayNode&&(t=e.node.count),t}getVarFromNode(e,t=null,i=e.getNodeType(this),n=this.shaderStage,r=!1){const s=this.getDataFromNode(e,n);let a=s.variable;if(void 0===a){const o=r?"_const":"_var",l=this.vars[n]||(this.vars[n]=[]),u=this.vars[o]||(this.vars[o]=0);null===t&&(t=(r?"nodeConst":"nodeVar")+u,this.vars[o]++);const c=this.getArrayCount(e);a=new EL(t,i,r,c),r||l.push(a),this.registerDeclaration(a),s.variable=a}return a}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode))&&(!e.cNode||this.isDeterministic(e.cNode));if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(!e.bNode||this.isDeterministic(e.bNode));if(e.isArrayNode){if(null!==e.values)for(const t of e.values)if(!this.isDeterministic(t))return!1;return!0}return!!e.isConstNode}getVaryingFromNode(e,t=null,i=e.getNodeType(this),n=null,r=null){const s=this.getDataFromNode(e,"any");let a=s.varying;if(void 0===a){const e=this.varyings,o=e.length;null===t&&(t="nodeVarying"+o),a=new AL(t,i,n,r),e.push(a),this.registerDeclaration(a),s.varying=a}return a}registerDeclaration(e){const t=this.shaderStage,i=this.declarations[t]||(this.declarations[t]={}),n=this.getPropertyName(e);let r=1,s=n;for(;void 0!==i[s];)s=n+"_"+r++;r>1&&(e.name=s),i[s]=e}getCodeFromNode(e,t,i=this.shaderStage){const n=this.getDataFromNode(e);let r=n.code;if(void 0===r){const e=this.codes[i]||(this.codes[i]=[]),s=e.length;r=new RL("nodeCode"+s,t),e.push(r),n.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:i,flowCodeBlock:n}=this.getDataFromNode(e);let r=!0,s=t;for(;s;){if(!0===n.get(s)){r=!1;break}s=this.getDataFromNode(s).parentNodeBlock}if(r)for(const a of i)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,i){const n=this.getDataFromNode(e),r=n.flowCodes||(n.flowCodes=[]),s=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);r.push(t),s.set(i,!0)}addLineFlowCode(e,t=null){return""===e||(null!==t&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),i=this.flowChildNode(e,t);return this.flowsData.set(e,i),i}addInclude(e){null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new oN,i=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=i,t}flowShaderNode(e){const t=e.layout,i={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const s of t.inputs)i[s.name]=new uR(s.type,s.name);e.layout=null;const n=e.call(i),r=this.flowStagesNode(n,t.type);return e.layout=t,r}flowStagesNode(e,t=null){const i=this.flow,n=this.vars,r=this.declarations,s=this.cache,a=this.buildStage,o=this.stack,l={code:""};this.flow=l,this.vars={},this.declarations={},this.cache=new NL,this.stack=hR();for(const u of Bf)this.setBuildStage(u),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=n,this.declarations=r,this.cache=s,this.stack=o,this.setBuildStage(a),l}getFunctionOperator(){return null}buildFunctionCode(){}flowChildNode(e,t=null){const i=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=i,n}flowNodeFromShaderStage(e,t,i=null,n=null){const r=this.shaderStage;this.setShaderStage(e);const s=this.flowChildNode(t,i);return null!==n&&(s.code+=`${this.tab+n} = ${s.result};\n`),this.flowCode[e]=this.flowCode[e]+s.code,this.setShaderStage(r),s}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){}getVaryings(){}getVar(e,t,i=null){return`${null!==i?this.generateArrayDeclaration(e,i):this.getType(e)} ${t}`}getVars(e){let t="";const i=this.vars[e];if(void 0!==i)for(const n of i)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){}getCodes(e){const t=this.codes[e];let i="";if(void 0!==t)for(const n of t)i+=n.code+"\n";return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){}build(){const{object:e,material:t,renderer:i}=this;if(null!==t){let e=i.library.fromMaterial(t);null===e&&(e=new OM),e.build(this)}else this.addFlow("compute",e);for(const n of Bf){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const e of Vf){this.setShaderStage(e);const t=this.flowNodes[e];for(const e of t)"generate"===n?this.flowNode(e):e.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new kL(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new GL(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new HL(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new WL(e);if("color"===t)return new jL(e);if("mat2"===t)return new XL(e);if("mat3"===t)return new $L(e);if("mat4"===t)return new qL(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,i){if((t=this.getVectorType(t))===(i=this.getVectorType(i))||null===i||this.isReference(i))return e;const n=this.getTypeLength(t),r=this.getTypeLength(i);return 16===n&&9===r?`${this.getType(i)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:9===n&&4===r?`${this.getType(i)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:n>4||r>4||0===r?e:n===r?`${this.getType(i)}( ${e} )`:n>r?(e="bool"===i?`all( ${e} )`:`${e}.${"xyz".slice(0,r)}`,this.format(e,this.getTypeFromLength(r,this.getComponentType(t)),i)):4===r&&n>1?`${this.getType(i)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===n?`${this.getType(i)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===n&&r>1&&t!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${i} - Node System\n`}*[Symbol.iterator](){}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}}class JL{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let i=e.get(t);return void 0===i&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,i)),i}updateBeforeNode(e){const t=e.getUpdateBeforeType(),i=e.updateReference(this);if(t===Uf.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,i);t.get(i)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(i,this.frameId)}else if(t===Uf.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,i);t.get(i)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(i,this.renderId)}else t===Uf.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),i=e.updateReference(this);if(t===Uf.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,i);t.get(i)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(i,this.frameId)}else if(t===Uf.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,i);t.get(i)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(i,this.renderId)}else t===Uf.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),i=e.updateReference(this);if(t===Uf.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,i);t.get(i)!==this.frameId&&!1!==e.update(this)&&t.set(i,this.frameId)}else if(t===Uf.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,i);t.get(i)!==this.renderId&&!1!==e.update(this)&&t.set(i,this.renderId)}else t===Uf.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class eI{constructor(e,t,i=null,n="",r=!1){this.type=e,this.name=t,this.count=i,this.qualifier=n,this.isConst=r}}eI.isNodeFunctionInput=!0;class tI extends MP{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:WN(this.light),lightColor:e}}}const iI=new ji,nI=new ji;let rI=null;class sI extends MP{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=$_(new fi).setGroup(W_),this.halfWidth=$_(new fi).setGroup(W_),this.updateType=Uf.RENDER}update(e){super.update(e);const{light:t}=this,i=e.camera.matrixWorldInverse;nI.identity(),iI.copy(t.matrixWorld),iI.premultiply(i),nI.extractRotation(iI),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(nI),this.halfHeight.value.applyMatrix4(nI)}setupDirectRectArea(e){let t,i;e.isAvailable("float32Filterable")?(t=Xy(rI.LTC_FLOAT_1),i=Xy(rI.LTC_FLOAT_2)):(t=Xy(rI.LTC_HALF_1),i=Xy(rI.LTC_HALF_2));const{colorNode:n,light:r}=this;return{lightColor:n,lightPosition:HN(r),halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:i}}static setLTC(e){rI=e}}class aI extends MP{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=$_(0).setGroup(W_),this.penumbraCosNode=$_(0).setGroup(W_),this.cutoffDistanceNode=$_(0).setGroup(W_),this.decayExponentNode=$_(0).setGroup(W_)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:i}=this;return Ix(t,i,e)}setupDirect(e){const{colorNode:t,cutoffDistanceNode:i,decayExponentNode:n,light:r}=this,s=this.getLightVector(e),a=s.normalize(),o=a.dot(WN(r)),l=this.getSpotAttenuation(o),u=s.length(),c=wP({lightDistance:u,cutoffDistance:i,decayExponent:n});let h=t.mul(l).mul(c);if(r.map){const t=zN(r,e.context.positionWorld),i=Xy(r.map,t.xy).onRenderUpdate((()=>r.map));h=t.mul(2).sub(1).abs().lessThan(1).all().select(h.mul(i),h)}return{lightColor:h,lightDirection:a}}}class oI extends aI{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let i=null;if(t&&!0===t.isTexture){const n=e.acos().mul(1/Math.PI);i=Xy(t,Xg(n,0),0).r}else i=super.getSpotAttenuation(e);return i}}class lI extends MP{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class uI extends MP{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=kN(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=$_(new Bn).setGroup(W_)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:i,lightDirectionNode:n}=this,r=Hb.dot(n).mul(.5).add(.5),s=Cx(i,t,r);e.context.irradiance.addAssign(s)}}class cI extends MP{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let i=0;i<9;i++)t.push(new fi);this.lightProbe=Qy(t)}update(e){const{light:t}=this;super.update(e);for(let i=0;i<9;i++)this.lightProbe.array[i].copy(t.sh.coefficients[i]).multiplyScalar(t.intensity)}setup(e){const t=_L(Wb,this.lightProbe);e.context.irradiance.addAssign(t)}}class hI{parseFunction(){}}class dI{constructor(e,t,i="",n=""){this.type=e,this.inputs=t,this.name=i,this.precision=n}getCode(){}}dI.isNodeFunction=!0;const pI=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,mI=/[a-z_0-9]+/gi,fI="#pragma main";class gI extends dI{constructor(e){const{type:t,inputs:i,name:n,precision:r,inputsCode:s,blockCode:a,headerCode:o}=(e=>{const t=(e=e.trim()).indexOf(fI),i=-1!==t?e.slice(t+12):e,n=i.match(pI);if(null!==n&&5===n.length){const r=n[4],s=[];let a=null;for(;null!==(a=mI.exec(r));)s.push(a);const o=[];let l=0;for(;l<s.length;){const e="const"===s[l][0];!0===e&&l++;let t=s[l][0];"in"===t||"out"===t||"inout"===t?l++:t="";const i=s[l++][0];let n=Number.parseInt(s[l][0]);!1===Number.isNaN(n)?l++:n=null;const r=s[l++][0];o.push(new eI(i,r,n,t,e))}const u=i.substring(n[0].length),c=void 0!==n[3]?n[3]:"";return{type:n[2],inputs:o,name:c,precision:void 0!==n[1]?n[1]:"",inputsCode:r,blockCode:u,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,i,n,r),this.inputsCode=s,this.blockCode=a,this.headerCode=o}getCode(e=this.name){let t;const i=this.blockCode;if(""!==i){const{type:n,inputsCode:r,headerCode:s,precision:a}=this;let o=`${n} ${e} ( ${r.trim()} )`;""!==a&&(o=`${a} ${o}`),t=s+o+i}else t="";return t}}class _I extends hI{parseFunction(e){return new gI(e)}}const vI=new WeakMap,xI=[],yI=[];class bI extends CA{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new JL,this.nodeBuilderCache=new Map,this.callHashCache=new MA,this.groupsData=new MA,this.cacheLib={}}updateGroup(e){const t=e.groupNode,i=t.name;if(i===j_.name)return!0;if(i===W_.name){const t=this.get(e),i=this.nodeFrame.renderId;return t.renderId!==i&&(t.renderId=i,!0)}if(i===H_.name){const t=this.get(e),i=this.nodeFrame.frameId;return t.frameId!==i&&(t.frameId=i,!0)}xI[0]=t,xI[1]=e;let n=this.groupsData.get(xI);return void 0===n&&this.groupsData.set(xI,n={}),xI.length=0,n.version!==t.version&&(n.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let i=t.nodeBuilderState;if(void 0===i){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(e);if(i=n.get(r),void 0===i){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,this.renderer.getRenderTarget()&&this.renderer.getRenderTarget().multiview&&t.enableMultiview(),t.build(),i=this._createNodeBuilderState(t),n.set(r,i)}i.usedTimes++,t.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let i=t.nodeBuilderState;if(void 0===i){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),i=this._createNodeBuilderState(n),t.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new SL(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const i=this.get(e);i.environmentNode&&(t=i.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const i=this.get(e);i.backgroundNode&&(t=i.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){xI[0]=e,xI[1]=t;const i=this.renderer.info.calls,n=this.callHashCache.get(xI)||{};if(n.callId!==i){const r=this.getEnvironmentNode(e),s=this.getFogNode(e);t&&yI.push(t.getCacheKey(!0)),r&&yI.push(r.getCacheKey()),s&&yI.push(s.getCacheKey()),yI.push(this.renderer.shadowMap.enabled?1:0),n.callId=i,n.cacheKey=yf(yI),this.callHashCache.set(xI,n),yI.length=0}return xI.length=0,n.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),i=e.background;if(i){const n=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==i||n){const r=this.getCacheNode("background",i,(()=>{if(!0===i.isCubeTexture||i.mapping===j||i.mapping===X||i.mapping===$){if(e.backgroundBlurriness>0||i.mapping===$)return ZE(i);{let e;return e=!0===i.isCubeTexture?aT(i):Xy(i),tw(e)}}if(!0===i.isTexture)return Xy(i,sM.flipY()).setUpdateMatrix(!0);i.isColor}),n);t.backgroundNode=r,t.background=i,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,i,n=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let s=r.get(t);return(void 0===s||n)&&(s=i(),r.set(t,s)),s}updateFog(e){const t=this.get(e),i=e.fog;if(i){if(t.fog!==i){const e=this.getCacheNode("fog",i,(()=>{if(i.isFogExp2){const e=uT("color","color",i).setGroup(W_),t=uT("density","float",i).setGroup(W_);return xN(e,vN(t))}if(i.isFog){const e=uT("color","color",i).setGroup(W_),t=uT("near","float",i).setGroup(W_),n=uT("far","float",i).setGroup(W_);return xN(e,_N(t,n))}}));t.fogNode=e,t.fog=i}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),i=e.environment;if(i){if(t.environment!==i){const e=this.getCacheNode("environment",i,(()=>!0===i.isCubeTexture?aT(i):!0===i.isTexture?Xy(i):void 0));t.environmentNode=e,t.environment=i}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,i=null,n=null,r=null){const s=this.nodeFrame;return s.renderer=e,s.scene=t,s.object=i,s.camera=n,s.material=r,s}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return vI.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,i=this.getOutputCacheKey(),n=e.isTextureArray?MC(e,Kg(sM,Jy("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):Xy(e,sM).renderOutput(t.toneMapping,t.currentColorSpace);return vI.set(e,i),n}updateBefore(e){const t=e.getNodeBuilderState();for(const i of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const t=e.getNodeBuilderState();for(const i of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const t=this.getNodeFrame(),i=this.getForCompute(e);for(const n of i.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const n of i.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new JL,this.nodeBuilderCache=new Map,this.cacheLib={}}}const TI=new Us;class SI{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Ht,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,null!==e&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,i){const n=e.length;for(let r=0;r<n;r++){TI.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const n=t[i+r],s=TI.normal;n.x=-s.x,n.y=-s.y,n.z=-s.z,n.w=TI.constant}}updateGlobal(e,t){this.shadowPass=null!==e.overrideMaterial&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let i=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,r=n.length;let s,a;if(this.clipIntersection?(s=this.intersectionPlanes,a=e.intersectionPlanes.length):(s=this.unionPlanes,a=e.unionPlanes.length),s.length!==a+r){s.length=a+r;for(let e=0;e<r;e++)s[a+e]=new ui;i=!0}this.projectPlanes(n,s,a),i&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return void 0===t&&(t=new SI(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class MI{constructor(e,t){this.bundleGroup=e,this.camera=t}}const wI=[];class EI{constructor(){this.bundles=new MA}get(e,t){const i=this.bundles;wI[0]=e,wI[1]=t;let n=i.get(wI);return void 0===n&&(n=new MI(e,t),i.set(wI,n)),wI.length=0,n}dispose(){this.bundles=new MA}}class AI{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const i=this.getMaterialNodeClass(e.type);if(null!==i){t=new i;for(const i in e)t[i]=e[i]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,i){if(!i.has(t)){if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);i.set(t,e)}}addClass(e,t,i){if(!i.has(t)){if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);i.set(t,e)}}}const RI=new $N,CI=[];class NI extends MA{constructor(){super()}createNode(e=[]){return(new $N).setLights(e)}getNode(e,t){if(e.isQuadMesh)return RI;CI[0]=e,CI[1]=t;let i=this.get(CI);return void 0===i&&(i=this.createNode(),this.set(CI,i)),CI.length=0,i}}class PI extends ci{constructor(e=1,t=1,i={}){super(e,t,i),this.isXRRenderTarget=!0,this.hasExternalTextures=!1,this.autoAllocateDepthBuffer=!0}copy(e){return super.copy(e),this.hasExternalTextures=e.hasExternalTextures,this.autoAllocateDepthBuffer=e.autoAllocateDepthBuffer,this}}const LI=new fi,II=new fi;class DI extends Nt{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Ir,this._cameraL.viewport=new ui,this._cameraR=new Ir,this._cameraR.viewport=new ui,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Gl,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._supportsLayers=!1,this._createXRLayer=VI.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new Gt,this._onSessionEvent=FI.bind(this),this._onSessionEnd=OI.bind(this),this._onInputSourcesChange=BI.bind(this),this._onAnimationFrame=zI.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers="undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(null!==this._glProjLayer||null!==this._glBaseLayer)return this._foveation}setFoveation(e){this._foveation=e,null!==this._glProjLayer&&(this._glProjLayer.fixedFoveation=e),null!==this._glBaseLayer&&void 0!==this._glBaseLayer.fixedFoveation&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(null!==this._session)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,i,n,r,s,a,o=[]){const l=new wo(e,t),u=new PI(r,s,{format:_e,type:ne,depthTexture:new da(r,s,o.stencil?pe:le,void 0,void 0,void 0,void 0,void 0,void 0,o.stencil?xe:ve),stencilBuffer:o.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),c=new Gn({color:16777215,side:0});c.map=u.texture,c.map.offset.y=1,c.map.repeat.y=-1;const h=new br(l,c);h.position.copy(i),h.quaternion.copy(n);const d={type:"quad",width:e,height:t,translation:i,quaternion:n,pixelwidth:r,pixelheight:s,plane:h,material:c,rendercall:a,renderTarget:u};if(this._layers.push(d),null!==this._session){d.plane.material=new Gn({color:16777215,side:0}),d.plane.material.blending=5,d.plane.material.blendEquation=f,d.plane.material.blendSrc=v,d.plane.material.blendDst=v,d.xrlayer=this._createXRLayer(d);const e=this._session.renderState.layers;e.unshift(d.xrlayer),this._session.updateRenderState({layers:e})}else u.isXRRenderTarget=!1;return h}createCylinderLayer(e,t,i,n,r,s,a,o,l=[]){const u=new ga(e,e,e*t/i,64,64,!0,Math.PI-t/2,t),c=new PI(s,a,{format:_e,type:ne,depthTexture:new da(s,a,l.stencil?pe:le,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?xe:ve),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),h=new Gn({color:16777215,side:1});h.map=c.texture,h.map.offset.y=1,h.map.repeat.y=-1;const d=new br(u,h);d.position.copy(n),d.quaternion.copy(r);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:i,translation:n,quaternion:r,pixelwidth:s,pixelheight:a,plane:d,material:h,rendercall:o,renderTarget:c};if(this._layers.push(p),null!==this._session){p.plane.material=new Gn({color:16777215,side:1}),p.plane.material.blending=5,p.plane.material.blendEquation=f,p.plane.material.blendSrc=v,p.plane.material.blendDst=v,p.xrlayer=this._createXRLayer(p);const e=this._session.renderState.layers;e.unshift(p.xrlayer),this._session.updateRenderState({layers:e})}else c.isXRRenderTarget=!1;return d}renderLayers(){const e=new fi,t=new mi,i=this.isPresenting;this.isPresenting=!1;for(const n of this._layers){if(n.renderTarget.isXRRenderTarget=null!==this._session,n.renderTarget.hasExternalTextures=n.renderTarget.isXRRenderTarget,n.renderTarget.autoAllocateDepthBuffer=!n.renderTarget.isXRRenderTarget,n.renderTarget.isXRRenderTarget&&this._supportsLayers){n.xrlayer.transform=new XRRigidTransform(n.plane.getWorldPosition(e),n.plane.getWorldQuaternion(t));const i=this._glBinding.getSubImage(n.xrlayer,this._xrFrame);this._renderer.backend.setXRRenderTargetTextures(n.renderTarget,i.colorTexture,i.depthStencilTexture)}this._renderer.setRenderTarget(n.renderTarget),n.rendercall()}this.isPresenting=i,this._renderer.setRenderTarget(null)}getSession(){return this._session}async setSession(e){const t=this._renderer,i=t.backend;this._gl=t.getContext();const n=this._gl,r=n.getContextAttributes();if(this._session=e,null!==e){if(!0===i.isWebGPUBackend)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await i.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),!0===this._useLayers){let i=null,s=null,a=null;t.depth&&(a=t.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,i=t.stencil?xe:ve,s=t.stencil?pe:le);const o={colorFormat:n.RGBA8,depthFormat:a,scaleFactor:this._framebufferScaleFactor};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(o.textureType="texture-array",this._useMultiview=!0);const l=new XRWebGLBinding(e,n),u=l.createProjectionLayer(o),c=[u];let h;if(this._glBinding=l,this._glProjLayer=u,t.setPixelRatio(1),t.setSize(u.textureWidth,u.textureHeight,!1),this._useMultiview?(h=new pa(u.textureWidth,u.textureHeight,2),h.type=s,h.format=i):h=new da(u.textureWidth,u.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,i),this._xrRenderTarget=new PI(u.textureWidth,u.textureHeight,{format:_e,type:ne,colorSpace:t.outputColorSpace,depthTexture:h,stencilBuffer:t.stencil,samples:r.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues,resolveStencilBuffer:!1===u.ignoreDepthValues,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget.hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._supportsLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._supportsLayers)for(const e of this._layers)e.plane.material=new Gn({color:16777215,side:"cylinder"===e.type?1:0}),e.plane.material.blending=5,e.plane.material.blendEquation=f,e.plane.material.blendSrc=v,e.plane.material.blendDst=v,e.xrlayer=this._createXRLayer(e),c.unshift(e.xrlayer);e.updateRenderState({layers:c})}else{const i={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},r=new XRWebGLLayer(e,n,i);this._glBaseLayer=r,e.updateRenderState({baseLayer:r}),t.setPixelRatio(1),t.setSize(r.framebufferWidth,r.framebufferHeight,!1),this._xrRenderTarget=new PI(r.framebufferWidth,r.framebufferHeight,{format:_e,type:ne,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:!1===r.ignoreDepthValues,resolveStencilBuffer:!1===r.ignoreDepthValues}),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(null===t)return;const i=e.near,n=e.far,r=this._cameraXR,s=this._cameraL,a=this._cameraR;r.near=a.near=s.near=i,r.far=a.far=s.far=n,r.isMultiViewCamera=this._useMultiview,this._currentDepthNear===r.near&&this._currentDepthFar===r.far||(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),s.layers.mask=2|e.layers.mask,a.layers.mask=4|e.layers.mask,r.layers.mask=s.layers.mask|a.layers.mask;const o=e.parent,l=r.cameras;UI(r,o);for(let u=0;u<l.length;u++)UI(l[u],o);2===l.length?function(e,t,i){LI.setFromMatrixPosition(t.matrixWorld),II.setFromMatrixPosition(i.matrixWorld);const n=LI.distanceTo(II),r=t.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],c=(r[8]-1)/r[0],h=(s[8]+1)/s[0],d=a*c,p=a*h,m=n/(-c+h),f=m*-c;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=a+m,i=o+m,r=d-f,s=p+(n-f),c=l*o/i*t,h=u*o/i*t;e.projectionMatrix.makePerspective(r,s,c,h,t,i),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(r,s,a):r.projectionMatrix.copy(s.projectionMatrix),function(e,t,i){null===i?e.matrix.copy(t.matrixWorld):(e.matrix.copy(i.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Dt*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,r,o)}_getController(e){let t=this._controllers[e];return void 0===t&&(t=new zr,this._controllers[e]=t),t}}function UI(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}function FI(e){const t=this._controllerInputSources.indexOf(e.inputSource);if(-1===t)return;const i=this._controllers[t];if(void 0!==i){const t=this.getReferenceSpace();i.update(e.inputSource,e.frame,t),i.dispatchEvent({type:e.type,data:e.inputSource})}}function OI(){const e=this._session,t=this._renderer;e.removeEventListener("select",this._onSessionEvent),e.removeEventListener("selectstart",this._onSessionEvent),e.removeEventListener("selectend",this._onSessionEvent),e.removeEventListener("squeeze",this._onSessionEvent),e.removeEventListener("squeezestart",this._onSessionEvent),e.removeEventListener("squeezeend",this._onSessionEvent),e.removeEventListener("end",this._onSessionEnd),e.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let i=0;i<this._controllers.length;i++){const e=this._controllerInputSources[i];null!==e&&(this._controllerInputSources[i]=null,this._controllers[i].disconnect(e))}if(this._currentDepthNear=null,this._currentDepthFar=null,t.backend.setXRTarget(null),t.setOutputRenderTarget(null),t.setRenderTarget(null),this._session=null,this._xrRenderTarget=null,!0===this._supportsLayers)for(const i of this._layers)i.renderTarget=new PI(i.pixelwidth,i.pixelheight,{format:_e,type:ne,depthTexture:new da(i.pixelwidth,i.pixelheight,i.stencilBuffer?pe:le,void 0,void 0,void 0,void 0,void 0,void 0,i.stencilBuffer?xe:ve),stencilBuffer:i.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),i.renderTarget.isXRRenderTarget=!1,i.plane.material=i.material,i.material.map=i.renderTarget.texture,delete i.xrlayer;this.isPresenting=!1,this._useMultiview=!1,t._animation.stop(),t._animation.setAnimationLoop(this._currentAnimationLoop),t._animation.setContext(this._currentAnimationContext),t._animation.start(),t.setPixelRatio(this._currentPixelRatio),t.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function BI(e){const t=this._controllers,i=this._controllerInputSources;for(let n=0;n<e.removed.length;n++){const r=e.removed[n],s=i.indexOf(r);s>=0&&(i[s]=null,t[s].disconnect(r))}for(let n=0;n<e.added.length;n++){const r=e.added[n];let s=i.indexOf(r);if(-1===s){for(let e=0;e<t.length;e++){if(e>=i.length){i.push(r),s=e;break}if(null===i[e]){i[e]=r,s=e;break}}if(-1===s)break}const a=t[s];a&&a.connect(r)}}function VI(e){return"quad"===e.type?this._glBinding.createQuadLayer({transform:new XRRigidTransform(e.translation,e.quaternion),depthFormat:this._gl.DEPTH_COMPONENT,width:e.width/2,height:e.height/2,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(e.translation,e.quaternion),depthFormat:this._gl.DEPTH_COMPONENT,radius:e.radius,centralAngle:e.centralAngle,aspectRatio:e.aspectRatio,space:this._referenceSpace,viewPixelWidth:e.pixelwidth,viewPixelHeight:e.pixelheight})}function zI(e,t){if(void 0===t)return;const i=this._cameraXR,n=this._renderer,r=n.backend,s=this._glBaseLayer,a=this.getReferenceSpace(),o=t.getViewerPose(a);if(this._xrFrame=t,null!==o){const e=o.views;null!==this._glBaseLayer&&r.setXRTarget(s.framebuffer);let t=!1;e.length!==i.cameras.length&&(i.cameras.length=0,t=!0);for(let n=0;n<e.length;n++){const a=e[n];let o;if(!0===this._useLayers){const e=this._glBinding.getViewSubImage(this._glProjLayer,a);o=e.viewport,0===n&&r.setXRRenderTargetTextures(this._xrRenderTarget,e.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:e.depthStencilTexture)}else o=s.getViewport(a);let l=this._cameras[n];void 0===l&&(l=new Ir,l.layers.enable(n),l.viewport=new ui,this._cameras[n]=l),l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.quaternion,l.scale),l.projectionMatrix.fromArray(a.projectionMatrix),l.projectionMatrixInverse.copy(l.projectionMatrix).invert(),l.viewport.set(o.x,o.y,o.width,o.height),0===n&&(i.matrix.copy(l.matrix),i.matrix.decompose(i.position,i.quaternion,i.scale)),!0===t&&i.cameras.push(l)}n.setOutputRenderTarget(this._xrRenderTarget)}for(let l=0;l<this._controllers.length;l++){const e=this._controllerInputSources[l],i=this._controllers[l];null!==e&&void 0!==i&&i.update(e,t,a)}this._currentAnimationLoop&&this._currentAnimationLoop(e,t),t.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:t}),this._xrFrame=null}const kI=new Gr,GI=new Gt,HI=new ui,WI=new Bs,jI=new ks,XI=new ji,$I=new ui;class qI{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:n=!0,depth:r=!0,stencil:s=!1,antialias:a=!1,samples:o=0,getFallback:l=null,colorBufferType:u=ce,multiview:c=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=o||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=i,this.outputColorSpace=dt,this.toneMapping=0,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=s,this.info=new VA,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new AI,this.lighting=new NI,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new ui(0,0,this._width,this._height),this._scissor=new ui(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new nC(new OM),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=!0===this.alpha?0:1;this._clearColor=new lR(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=u,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:1},this.xr=new DI(this,c),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,i)=>{await this.compileAsync(e,t);const n=this._renderLists.get(e,t),r=this._renderContexts.get(e,t,this._renderTarget),s=e.overrideMaterial||i.material,a=this._objects.get(i,s,e,t,n.lightsNode,r,r.clippingContext),{fragmentShader:o,vertexShader:l}=a.getNodeBuilderState();return{fragmentShader:o,vertexShader:l}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{let i=this.backend;try{await i.init(this)}catch(n){if(null===this._getFallback)return void t(n);try{this.backend=i=this._getFallback(n),await i.init(this)}catch(r){return void t(r)}}this._nodes=new bI(this,i),this._animation=new SA(this._nodes,this.info),this._attributes=new UA(i),this._background=new yL(this,this._nodes),this._geometries=new BA(this._attributes,this.info),this._textures=new oR(this,i,this.info),this._pipelines=new jA(i,this._nodes),this._bindings=new XA(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new RA(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new QA(this.lighting),this._bundles=new EI,this._renderContexts=new sR,this._animation.start(),this._initialized=!0,e(this)}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,i=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const n=this._nodes.nodeFrame,r=n.renderId,s=this._currentRenderContext,a=this._currentRenderObjectFunction,o=this._compilationPromises,l=!0===e.isScene?e:kI;null===i&&(i=e);const u=this._renderTarget,c=this._renderContexts.get(i,t,u),h=this._activeMipmapLevel,d=[];this._currentRenderContext=c,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=d,n.renderId++,n.update(),c.depth=this.depth,c.stencil=this.stencil,c.clippingContext||(c.clippingContext=new SI),c.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,c.clippingContext),i!==e&&i.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)})),p.finish(),null!==u){this._textures.updateRenderTarget(u,h);const e=this._textures.get(u);c.textures=e.textures,c.depthTexture=e.depthTexture}else c.textures=null,c.depthTexture=null;this._background.update(l,p,c);const m=p.opaque,f=p.transparent,g=p.transparentDoublePass,_=p.lightsNode;!0===this.opaque&&m.length>0&&this._renderObjects(m,t,l,_),!0===this.transparent&&f.length>0&&this._renderTransparents(f,g,t,l,_),n.renderId=r,this._currentRenderContext=s,this._currentRenderObjectFunction=a,this._compilationPromises=o,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(d)}async renderAsync(e,t){!1===this._initialized&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){!0===e?(this.overrideNodes.modelViewMatrix=Rb,this.overrideNodes.modelNormalViewMatrix=Cb):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===Rb&&this.overrideNodes.modelNormalViewMatrix===Cb}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:\n\nMessage: ${e.message}`;e.reason&&(t+=`\nReason: ${e.reason}`),this._isDeviceLost=!0}_renderBundle(e,t,i){const{bundleGroup:n,camera:r,renderList:s}=e,a=this._currentRenderContext,o=this._bundles.get(n,r),l=this.backend.get(o);void 0===l.renderContexts&&(l.renderContexts=new Set);const u=n.version!==l.version,c=!1===l.renderContexts.has(a)||u;if(l.renderContexts.add(a),c){this.backend.beginBundle(a),(void 0===l.renderObjects||u)&&(l.renderObjects=[]),this._currentRenderBundle=o;const{transparentDoublePass:e,transparent:c,opaque:h}=s;!0===this.opaque&&h.length>0&&this._renderObjects(h,r,t,i),!0===this.transparent&&c.length>0&&this._renderTransparents(c,e,r,t,i),this._currentRenderBundle=null,this.backend.finishBundle(a,o),l.version=n.version}else{const{renderObjects:e}=l;for(let t=0,i=e.length;t<i;t++){const i=e[t];this._nodes.needsRefresh(i)&&(this._nodes.updateBefore(i),this._nodes.updateForRender(i),this._bindings.updateForRender(i),this._nodes.updateAfter(i))}}this.backend.addBundle(a,o)}render(e,t){if(!1===this._initialized)return this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(0!==e)&&!1===(t!==pt))return null;const{width:i,height:n}=this.getDrawingBufferSize(GI),{depth:r,stencil:s}=this;let a=this._frameBufferTarget;null===a&&(a=new ci(i,n,{depthBuffer:r,stencilBuffer:s,type:this._colorBufferType,format:_e,colorSpace:pt,generateMipmaps:!1,minFilter:ee,magFilter:ee,samples:this.samples}),a.isPostProcessingRenderTarget=!0,this._frameBufferTarget=a);const o=this.getOutputRenderTarget();return a.depthBuffer=r,a.stencilBuffer=s,a.setSize(i,n,null!==o?o.depth:1),a.viewport.copy(this._viewport),a.scissor.copy(this._scissor),a.viewport.multiplyScalar(this._pixelRatio),a.scissor.multiplyScalar(this._pixelRatio),a.scissorTest=this._scissorTest,a.multiview=null!==o&&o.multiview,a}_renderScene(e,t,i=!0){if(!0===this._isDeviceLost)return;const n=i?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,s=r.renderId,a=this._currentRenderContext,o=this._currentRenderObjectFunction,l=!0===e.isScene?e:kI,u=this._renderTarget||this._outputRenderTarget,c=this._activeCubeFace,h=this._activeMipmapLevel;let d;null!==n?(d=n,this.setRenderTarget(d)):d=u;const p=this._renderContexts.get(e,t,d);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const m=this.coordinateSystem,f=this.xr;if(t.coordinateSystem!==m&&!1===f.isPresenting&&(t.coordinateSystem=m,t.updateProjectionMatrix(),t.isArrayCamera))for(const R of t.cameras)R.coordinateSystem=m,R.updateProjectionMatrix();!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===f.enabled&&!0===f.isPresenting&&(!0===f.cameraAutoUpdate&&f.updateCamera(t),t=f.getCamera());let g=this._viewport,_=this._scissor,v=this._pixelRatio;null!==d&&(g=d.viewport,_=d.scissor,v=1),this.getDrawingBufferSize(GI),HI.set(0,0,GI.width,GI.height);const x=void 0===g.minDepth?0:g.minDepth,y=void 0===g.maxDepth?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(v).floor(),p.viewportValue.width>>=h,p.viewportValue.height>>=h,p.viewportValue.minDepth=x,p.viewportValue.maxDepth=y,p.viewport=!1===p.viewportValue.equals(HI),p.scissorValue.copy(_).multiplyScalar(v).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(HI),p.scissorValue.width>>=h,p.scissorValue.height>>=h,p.clippingContext||(p.clippingContext=new SI),p.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,d);const b=t.isArrayCamera?jI:WI;t.isArrayCamera||(XI.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),b.setFromProjectionMatrix(XI,m));const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T,p.clippingContext),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==d){this._textures.updateRenderTarget(d,h);const e=this._textures.get(d);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=d,p.depth=d.depthBuffer,p.stencil=d.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=h,p.height>>=h,p.activeCubeFace=c,p.activeMipmapLevel=h,p.occlusionQueryCount=T.occlusionQueryCount,this._background.update(l,T,p),p.camera=t,this.backend.beginRender(p);const{bundles:S,lightsNode:M,transparentDoublePass:w,transparent:E,opaque:A}=T;return S.length>0&&this._renderBundles(S,l,M),!0===this.opaque&&A.length>0&&this._renderObjects(A,t,l,M),!0===this.transparent&&E.length>0&&this._renderTransparents(E,w,t,l,M),this.backend.finishRender(p),r.renderId=s,this._currentRenderContext=a,this._currentRenderObjectFunction=o,null!==n&&(this.setRenderTarget(u,c,h),this._renderOutput(d)),l.onAfterRender(this,e,t,d),p}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const i=this.autoClear,n=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=i,this.xr.enabled=n}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,i){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(t*i),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,i=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===i&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,i,n){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,i,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,i,n,r=0,s=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,i,n),a.minDepth=r,a.maxDepth=s}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,i=!0){if(!1===this._initialized)return this.clearAsync(e,t,i);const n=this._renderTarget||this._getFrameBufferTarget();let r=null;if(null!==n){this._textures.updateRenderTarget(n);const e=this._textures.get(n);r=this._renderContexts.getForClear(n),r.textures=e.textures,r.depthTexture=e.depthTexture,r.width=e.width,r.height=e.height,r.renderTarget=n,r.depth=n.depthBuffer,r.stencil=n.stencilBuffer,r.clearColorValue=this.backend.getClearColor(),r.activeCubeFace=this.getActiveCubeFace(),r.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,i,r),null!==n&&null===this._renderTarget&&this._renderOutput(n)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,i=!0){!1===this._initialized&&await this.init(),this.clear(e,t,i)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:0}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:pt}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||null===this._renderTarget}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),null!==this._frameBufferTarget&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach((e=>{null!==e&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,i=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(!0===this._isDeviceLost)return;if(!1===this._initialized)return this.computeAsync(e);const t=this._nodes.nodeFrame,i=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const n=this.backend,r=this._pipelines,s=this._bindings,a=this._nodes,o=Array.isArray(e)?e:[e];if(void 0===o[0]||!0!==o[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(e);for(const l of o){if(!1===r.has(l)){const e=()=>{l.removeEventListener("dispose",e),r.delete(l),s.delete(l),a.delete(l)};l.addEventListener("dispose",e);const t=l.onInitFunction;null!==t&&t.call(l,{renderer:this})}a.updateForCompute(l),s.updateForCompute(l);const t=s.getForCompute(l),i=r.getForCompute(l,t);n.compute(e,l,t,i)}n.finishCompute(e),t.renderId=i}async computeAsync(e){!1===this._initialized&&await this.init(),this.compute(e)}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return!1===this._initialized&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return!1!==this._initialized&&this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){!1===this._initialized&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized,this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(null!==t)if(t.isVector2)t=$I.set(t.x,t.y,e.image.width,e.image.height).floor();else{if(!t.isVector4)return;t=$I.copy(t).floor()}else t=$I.set(0,0,e.image.width,e.image.height);let i,n=this._currentRenderContext;null!==n?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),null!==i&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(e,{renderTarget:i}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,i=null,n=null,r=0,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,i,n,r,s)}async readRenderTargetPixelsAsync(e,t,i,n,r,s=0,a=0){return this.backend.copyTextureToBuffer(e.textures[s],t,i,n,r,a)}_projectObject(e,t,i,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)i=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){const s=t.isArrayCamera?jI:WI;if(!e.frustumCulled||s.intersectsSprite(e,t)){!0===this.sortObjects&&$I.setFromMatrixPosition(e.matrixWorld).applyMatrix4(XI);const{geometry:t,material:s}=e;s.visible&&n.push(e,t,s,i,$I.z,null,r)}}else if(e.isLineLoop);else if(e.isMesh||e.isLine||e.isPoints){const s=t.isArrayCamera?jI:WI;if(!e.frustumCulled||s.intersectsObject(e,t)){const{geometry:t,material:s}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),$I.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(XI)),Array.isArray(s)){const a=t.groups;for(let o=0,l=a.length;o<l;o++){const l=a[o],u=s[l.materialIndex];u&&u.visible&&n.push(e,t,u,i,$I.z,l,r)}}else s.visible&&n.push(e,t,s,i,$I.z,null,r)}}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const i=n;(n=this._renderLists.get(e,t)).begin(),i.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const s=e.children;for(let a=0,o=s.length;a<o;a++)this._projectObject(s[a],t,i,n,r)}_renderBundles(e,t,i){for(const n of e)this._renderBundle(n,t,i)}_renderTransparents(e,t,i,n,r){if(t.length>0){for(const{material:e}of t)e.side=1;this._renderObjects(t,i,n,r,"backSide");for(const{material:e}of t)e.side=0;this._renderObjects(e,i,n,r);for(const{material:e}of t)e.side=2}else this._renderObjects(e,i,n,r)}_renderObjects(e,t,i,n,r=null){for(let s=0,a=e.length;s<a;s++){const{object:a,geometry:o,material:l,group:u,clippingContext:c}=e[s];this._currentRenderObjectFunction(a,i,t,o,l,u,n,c,r)}}renderObject(e,t,i,n,r,s,a,o=null,l=null){let u,c,h;if(e.onBeforeRender(this,t,i,n,r,s),!0===r.allowOverride&&null!==t.overrideMaterial){const e=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(u=e.positionNode,e.positionNode=r.positionNode),e.alphaTest=r.alphaTest,e.alphaMap=r.alphaMap,e.transparent=r.transparent||r.transmission>0,e.isShadowPassMaterial&&(e.side=null===r.shadowSide?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(h=e.depthNode,e.depthNode=r.depthNode),r.castShadowNode&&r.castShadowNode.isNode&&(c=e.colorNode,e.colorNode=r.castShadowNode),r.castShadowPositionNode&&r.castShadowPositionNode.isNode&&(u=e.positionNode,e.positionNode=r.castShadowPositionNode)),r=e}!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,this._handleObjectFunction(e,r,t,i,a,s,o,"backSide"),r.side=0,this._handleObjectFunction(e,r,t,i,a,s,o,l),r.side=2):this._handleObjectFunction(e,r,t,i,a,s,o,l),void 0!==u&&(t.overrideMaterial.positionNode=u),void 0!==h&&(t.overrideMaterial.depthNode=h),void 0!==c&&(t.overrideMaterial.colorNode=c),e.onAfterRender(this,t,i,n,r,s)}_renderObjectDirect(e,t,i,n,r,s,a,o){const l=this._objects.get(e,t,i,n,r,this._currentRenderContext,a,o);l.drawRange=e.geometry.drawRange,l.group=s;const u=this._nodes.needsRefresh(l);if(u&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.bundleGroup}this.backend.draw(l,this.info),u&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,i,n,r,s,a,o){const l=this._objects.get(e,t,i,n,r,this._currentRenderContext,a,o);l.drawRange=e.geometry.drawRange,l.group=s,this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l),this._pipelines.getForRender(l,this._compilationPromises),this._nodes.updateAfter(l)}get compile(){return this.compileAsync}}class YI{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class KI extends YI{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(DA-e%DA)%DA;var e}get buffer(){return this._buffer}update(){return!0}}class ZI extends KI{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let QI=0;class JI extends ZI{constructor(e,t){super("UniformBuffer_"+QI++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class eD extends ZI{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,i=this.uniforms.length;t<i;t++){const i=this.uniforms[t],{boundary:n,itemSize:r}=i,s=e%DA;0!==s&&DA-s-n<0?e+=DA-s:s%n!=0&&(e+=s%n),i.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/DA)*DA}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void 0}updateNumber(e){let t=!1;const i=this.values,n=e.getValue(),r=e.offset,s=e.getType();if(i[r]!==n){this._getBufferForType(s)[r]=i[r]=n,t=!0}return t}updateVector2(e){let t=!1;const i=this.values,n=e.getValue(),r=e.offset,s=e.getType();if(i[r+0]!==n.x||i[r+1]!==n.y){const e=this._getBufferForType(s);e[r+0]=i[r+0]=n.x,e[r+1]=i[r+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const i=this.values,n=e.getValue(),r=e.offset,s=e.getType();if(i[r+0]!==n.x||i[r+1]!==n.y||i[r+2]!==n.z){const e=this._getBufferForType(s);e[r+0]=i[r+0]=n.x,e[r+1]=i[r+1]=n.y,e[r+2]=i[r+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const i=this.values,n=e.getValue(),r=e.offset,s=e.getType();if(i[r+0]!==n.x||i[r+1]!==n.y||i[r+2]!==n.z||i[r+4]!==n.w){const e=this._getBufferForType(s);e[r+0]=i[r+0]=n.x,e[r+1]=i[r+1]=n.y,e[r+2]=i[r+2]=n.z,e[r+3]=i[r+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const i=this.values,n=e.getValue(),r=e.offset;if(i[r+0]!==n.r||i[r+1]!==n.g||i[r+2]!==n.b){const e=this.buffer;e[r+0]=i[r+0]=n.r,e[r+1]=i[r+1]=n.g,e[r+2]=i[r+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const i=this.values,n=e.getValue().elements,r=e.offset;if(i[r+0]!==n[0]||i[r+1]!==n[1]||i[r+2]!==n[2]||i[r+4]!==n[3]||i[r+5]!==n[4]||i[r+6]!==n[5]||i[r+8]!==n[6]||i[r+9]!==n[7]||i[r+10]!==n[8]){const e=this.buffer;e[r+0]=i[r+0]=n[0],e[r+1]=i[r+1]=n[1],e[r+2]=i[r+2]=n[2],e[r+4]=i[r+4]=n[3],e[r+5]=i[r+5]=n[4],e[r+6]=i[r+6]=n[5],e[r+8]=i[r+8]=n[6],e[r+9]=i[r+9]=n[7],e[r+10]=i[r+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const i=this.values,n=e.getValue().elements,r=e.offset;if(!1===function(e,t,i){for(let n=0,r=t.length;n<r;n++)if(e[i+n]!==t[n])return!1;return!0}(i,n,r)){this.buffer.set(n,r),function(e,t,i){for(let n=0,r=t.length;n<r;n++)e[i+n]=t[n]}(i,n,r),t=!0}return t}_getBufferForType(e){return"int"===e||"ivec2"===e||"ivec3"===e||"ivec4"===e?new Int32Array(this.buffer.buffer):"uint"===e||"uvec2"===e||"uvec3"===e||"uvec4"===e?new Uint32Array(this.buffer.buffer):this.buffer}}let tD=0;class iD extends eD{constructor(e,t){super(e),this.id=tD++,this.groupNode=t,this.isNodeUniformsGroup=!0}}let nD=0;class rD extends YI{constructor(e,t){super(e),this.id=nD++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class sD extends rD{constructor(e,t,i,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i,this.access=n}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class aD extends sD{constructor(e,t,i,n=null){super(e,t,i,n),this.isSampledCubeTexture=!0}}class oD extends sD{constructor(e,t,i,n=null){super(e,t,i,n),this.isSampledTexture3D=!0}}const lD={textureDimensions:"textureSize",equals:"equal"},uD={low:"lowp",medium:"mediump",high:"highp"},cD={swizzleAssign:!0,storageBuffer:!1},hD={perspective:"smooth",linear:"noperspective"},dD={centroid:"centroid","flat first":"flat","flat either":"flat"},pD="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\nprecision lowp sampler2DArrayShadow;\nprecision lowp samplerCubeShadow;\n";class mD extends QL{constructor(e,t){super(e,t,new _I),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==ht}getMethod(e){return lD[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const r of t.inputs)n.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {\n\n\t${i.vars}\n\n${i.code}\n\treturn ${i.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,i=t.count*t.itemSize,{itemSize:n}=t,r=t.array.constructor.name.toLowerCase().includes("int");let s=r?be:ye;2===n?s=r?Se:Te:3===n?s=r?1032:ge:4===n&&(s=r?Me:_e);const a={Float32Array:ue,Uint8Array:ne,Uint16Array:ae,Uint32Array:le,Int8Array:re,Int16Array:se,Int32Array:oe,Uint8ClampedArray:ne},o=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/n))));let l=Math.ceil(i/n/o);o*l*n<i&&l++;const u=o*l*n,c=new e.constructor(u);c.set(e,0),t.array=c;const h=new xs(t.array,o,l,s,a[t.array.constructor.name]||ue);h.needsUpdate=!0,h.isPBOTexture=!0;const d=new jy(h,null,null);d.setPrecision("high"),t.pboNode=d,t.pbo=d.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:i}=e,n=t.value;if(this.renderer.backend.has(n)){this.renderer.backend.get(n).pbo=n.pbo}const r=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.label),s=this.getPropertyName(r);this.increaseUsage(i);const a=i.build(this,"uint"),o=this.getDataFromNode(e);let l=o.propertyName;if(void 0===l){const i=this.getVarFromNode(e);l=this.getPropertyName(i);const r=this.getDataFromNode(t);let u=r.propertySizeName;void 0===u&&(u=l+"Size",this.getVarFromNode(t,u,"uint"),this.addLineFlowCode(`${u} = uint( textureSize( ${s}, 0 ).x )`,e),r.propertySizeName=u);const{itemSize:c}=n,h="."+zf.join("").slice(0,c),d=`ivec2(${a} % ${u}, ${a} / ${u})`,p=this.generateTextureLoad(null,s,d,null,"0");let m="vec4";n.pbo.type===le?m="uvec4":n.pbo.type===oe&&(m="ivec4"),this.addLineFlowCode(`${l} = ${m}(${p})${h}`,e),o.propertyName=l}return l}generateTextureLoad(e,t,i,n,r="0"){return n?`texelFetch( ${t}, ivec3( ${i}, ${n} ), ${r} )`:`texelFetch( ${t}, ${i}, ${r} )`}generateTexture(e,t,i,n){return e.isDepthTexture?(n&&(i=`vec4( ${i}, ${n} )`),`texture( ${t}, ${i} ).x`):(n&&(i=`vec3( ${i}, ${n} )`),`texture( ${t}, ${i} )`)}generateTextureLevel(e,t,i,n){return`textureLod( ${t}, ${i}, ${n} )`}generateTextureBias(e,t,i,n){return`texture( ${t}, ${i}, ${n} )`}generateTextureGrad(e,t,i,n){return`textureGrad( ${t}, ${i}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,i,n,r,s=this.shaderStage){if("fragment"===s)return r?`texture( ${t}, vec4( ${i}, ${r}, ${n} ) )`:`texture( ${t}, vec3( ${i}, ${n} ) )`}getVars(e){const t=[],i=this.vars[e];if(void 0!==i)for(const n of i)t.push(`${this.getVar(n.type,n.name,n.count)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],i=[],n={};for(const s of t){let t=null,r=!1;if("texture"===s.type||"texture3D"===s.type){const e=s.node.value;let i="";!0!==e.isDataTexture&&!0!==e.isData3DTexture||(e.type===le?i="u":e.type===oe&&(i="i")),t="texture3D"===s.type&&!1===e.isTextureArray?`${i}sampler3D ${s.name};`:e.compareFunction?!0===e.isDepthArrayTexture?`sampler2DArrayShadow ${s.name};`:`sampler2DShadow ${s.name};`:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture||!0===e.isTextureArray?`${i}sampler2DArray ${s.name};`:`${i}sampler2D ${s.name};`}else if("cubeTexture"===s.type)t=`samplerCube ${s.name};`;else if("buffer"===s.type){const e=s.node,i=this.getType(e.bufferType),n=e.bufferCount,r=n>0?n:"";t=`${e.name} {\n\t${i} ${s.name}[${r}];\n};\n`}else{t=`${this.getVectorType(s.type)} ${this.getPropertyName(s,e)};`,r=!0}const a=s.node.precision;if(null!==a&&(t=uD[a]+" "+t),r){t="\t"+t;const e=s.groupNode.name;(n[e]||(n[e]=[])).push(t)}else t="uniform "+t,i.push(t)}let r="";for(const s in n){const t=n[s];r+=this._getGLSLUniformStruct(e+"_"+s,t.join("\n"))+"\n"}return r+=i.join("\n"),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==oe){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const n=i.array;!1==(n instanceof Uint32Array||n instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let i=0;for(const n of e)t+=`layout( location = ${i++} ) in ${n.type} ${n.name};\n`}return t}getStructMembers(e){const t=[];for(const i of e.members)t.push(`\t${i.type} ${i.name};`);return t.join("\n")}getStructs(e){const t=[],i=this.structs[e],n=[];for(const r of i)if(r.output)for(const e of r.members)n.push(`layout( location = ${e.index} ) out ${e.type} ${e.name};`);else{let e="struct "+r.name+" {\n";e+=this.getStructMembers(r),e+="\n};\n",t.push(e)}return 0===n.length&&n.push("layout( location = 0 ) out vec4 fragColor;"),"\n"+n.join("\n")+"\n\n"+t.join("\n")}getVaryings(e){let t="";const i=this.varyings;if("vertex"===e||"compute"===e)for(const n of i){"compute"===e&&(n.needsInterpolation=!0);const i=this.getType(n.type);if(n.needsInterpolation)if(n.interpolationType){t+=`${hD[n.interpolationType]||n.interpolationType} ${dD[n.interpolationSampling]||""} out ${i} ${n.name};\n`}else{t+=`${i.includes("int")||i.includes("uv")||i.includes("iv")?"flat ":""}out ${i} ${n.name};\n`}else t+=`${i} ${n.name};\n`}else if("fragment"===e)for(const n of i)if(n.needsInterpolation){const e=this.getType(n.type);if(n.interpolationType){t+=`${hD[n.interpolationType]||n.interpolationType} ${dD[n.interpolationSampling]||""} in ${e} ${n.name};\n`}else{t+=`${e.includes("int")||e.includes("uv")||e.includes("iv")?"flat ":""}in ${e} ${n.name};\n`}}for(const n of this.builtins[e])t+=`${n};\n`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((e,t)=>e*t),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,i=this.shaderStage){const n=this.extensions[i]||(this.extensions[i]=new Map);!1===n.has(e)&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(void 0!==i)for(const{name:n,behavior:r}of i.values())t.push(`#extension ${n} : ${r}`);return t.join("\n")}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=cD[e];if(void 0===t){let i;switch(t=!1,e){case"float32Filterable":i="OES_texture_float_linear";break;case"clipDistance":i="WEBGL_clip_cull_distance"}if(void 0!==i){const e=this.renderer.backend.extensions;e.has(i)&&(e.get(i),t=!0)}cD[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let i=0;i<e.length;i++){const n=e[i],r=this.getPropertyName(n.attributeNode);r&&(t+=`${n.varyingName} = ${r};\n\t`)}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${pD}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions\n${e.extensions}\n\n// precision\n${pD}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n// structs\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let i="// code\n\n";i+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const e of n){const n=this.getFlowData(e),s=e.name;s&&(i.length>0&&(i+="\n"),i+=`\t// flow -> ${s}\n\t`),i+=`${n.code}\n\t`,e===r&&"compute"!==t&&(i+="// result\n\t","vertex"===t?(i+="gl_Position = ",i+=`${n.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${n.result};`)))}const s=e[t];s.extensions=this.getExtensions(t),s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.vars=this.getVars(t),s.structs=this.getStructs(t),s.codes=this.getCodes(t),s.transforms=this.getTransforms(t),s.flow=i}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,i,n=null){const r=super.getUniformFromNode(e,t,i,n),s=this.getDataFromNode(e,i,this.globalCache);let a=s.uniformGPU;if(void 0===a){const n=e.groupNode,o=n.name,l=this.getBindGroupArray(o,i);if("texture"===t)a=new sD(r.name,r.node,n),l.push(a);else if("cubeTexture"===t)a=new aD(r.name,r.node,n),l.push(a);else if("texture3D"===t)a=new oD(r.name,r.node,n),l.push(a);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const t=new JI(e,n);t.name=e.name,l.push(t),a=t}else{const e=this.uniformGroups[i]||(this.uniformGroups[i]={});let s=e[o];void 0===s&&(s=new iD(i+"_"+o,n),e[o]=s,l.push(s)),a=this.getNodeUniform(r,t),s.addUniform(a)}s.uniformGPU=a}return r}}let fD=null,gD=null;class _D{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=!0===e.trackTimestamp}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp)return void Yt("WebGPURenderer: Timestamp tracking is disabled.");const t=this.timestampQueryPool[e];if(!t)return void Yt(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);const i=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=i,i}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return fD=fD||new Gt,this.renderer.getDrawingBufferSize(fD)}setScissorTest(){}getClearColor(){const e=this.renderer;return gD=gD||new lR,e.getClearColor(gD),gD.getRGB(gD),gD}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:$t(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${i} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let vD,xD,yD=0;class bD{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class TD{constructor(e){this.backend=e}createAttribute(e,t){const i=this.backend,{gl:n}=i,r=e.array,s=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,o=i.get(a);let l,u=o.bufferGPU;if(void 0===u&&(u=this._createBuffer(n,t,r,s),o.bufferGPU=u,o.bufferType=t,o.version=a.version),r instanceof Float32Array)l=n.FLOAT;else if(r instanceof Uint16Array)l=e.isFloat16BufferAttribute?n.HALF_FLOAT:n.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=n.SHORT;else if(r instanceof Uint32Array)l=n.UNSIGNED_INT;else if(r instanceof Int32Array)l=n.INT;else if(r instanceof Int8Array)l=n.BYTE;else if(r instanceof Uint8Array)l=n.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);l=n.UNSIGNED_BYTE}let c={bufferGPU:u,bufferType:t,type:l,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:l===n.INT||l===n.UNSIGNED_INT||e.gpuType===oe,id:yD++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(n,t,r,s);c=new bD(c,e)}i.set(e,c)}updateAttribute(e){const t=this.backend,{gl:i}=t,n=e.array,r=e.isInterleavedBufferAttribute?e.data:e,s=t.get(r),a=s.bufferType,o=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(a,s.bufferGPU),0===o.length)i.bufferSubData(a,0,n);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];i.bufferSubData(a,t.start*n.BYTES_PER_ELEMENT,n,t.start,t.count)}r.clearUpdateRanges()}i.bindBuffer(a,null),s.version=r.version}destroyAttribute(e){const t=this.backend,{gl:i}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);i.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:i}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(n),s=e.array,a=s.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,r);const o=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,o),i.bufferData(i.COPY_WRITE_BUFFER,a,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(s.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,o),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,l),i.deleteBuffer(o),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,i,n){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,i,n),e.bindBuffer(t,null),r}}class SD{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;vD={[f]:e.FUNC_ADD,[g]:e.FUNC_SUBTRACT,[_]:e.FUNC_REVERSE_SUBTRACT},xD={[v]:e.ZERO,[x]:e.ONE,[y]:e.SRC_COLOR,[T]:e.SRC_ALPHA,[R]:e.SRC_ALPHA_SATURATE,[E]:e.DST_COLOR,[M]:e.DST_ALPHA,[b]:e.ONE_MINUS_SRC_COLOR,[S]:e.ONE_MINUS_SRC_ALPHA,[A]:e.ONE_MINUS_DST_COLOR,[w]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),i=e.getParameter(e.VIEWPORT);this.currentScissor=(new ui).fromArray(t),this.currentViewport=(new ui).fromArray(i),this._tempVec4=new ui}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;0!==e?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:i}=this;e!==t&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,i,n,r,s,a,o){const{gl:l}=this;if(0!==e){if(!1===this.currentBlendingEnabled&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),5===e)r=r||t,s=s||i,a=a||n,t===this.currentBlendEquation&&r===this.currentBlendEquationAlpha||(l.blendEquationSeparate(vD[t],vD[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),i===this.currentBlendSrc&&n===this.currentBlendDst&&s===this.currentBlendSrcAlpha&&a===this.currentBlendDstAlpha||(l.blendFuncSeparate(xD[i],xD[n],xD[s],xD[a]),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=s,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||o!==this.currentPremultipledAlpha){if(this.currentBlendEquation===f&&this.currentBlendEquationAlpha===f||(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=f,this.currentBlendEquationAlpha=f),o)switch(e){case 1:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case 2:l.blendFunc(l.ONE,l.ONE);break;case 3:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case 4:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA)}else switch(e){case 1:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case 2:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case 3:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case 4:l.blendFunc(l.ZERO,l.SRC_COLOR)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=o}}else!0===this.currentBlendingEnabled&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}this.currentDepthFunc=e}}scissor(e,t,i,n){const r=this._tempVec4.set(e,t,i,n);if(!1===this.currentScissor.equals(r)){const{gl:e}=this;e.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,i,n){const r=this._tempVec4.set(e,t,i,n);if(!1===this.currentViewport.equals(r)){const{gl:e}=this;e.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,i){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===i||(this.gl.stencilFunc(e,t,i),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=i)}setStencilOp(e,t,i){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===i||(this.gl.stencilOp(e,t,i),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=i)}setMaterial(e,t,i){const{gl:n}=this;2===e.side?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let r=1===e.side;t&&(r=!r),this.setFlipSided(r),1===e.blending&&!1===e.transparent?this.setBlending(0):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const s=e.stencilWrite;if(this.setStencilTest(s),s&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE),i>0&&this.currentClippingPlanes!==i){const e=12288;for(let t=0;t<8;t++)t<i?this.enable(e+t):this.disable(e+t)}}setPolygonOffset(e,t,i){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===i||(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}setVertexState(e,t=null){const i=this.gl;return(this.currentVAO!==e||this.currentIndex!==t)&&(i.bindVertexArray(e),null!==t&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0)}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:i,currentBoundFramebuffers:n}=this;return n[e]!==t&&(i.bindFramebuffer(e,t),n[e]=t,e===i.DRAW_FRAMEBUFFER&&(n[i.FRAMEBUFFER]=t),e===i.FRAMEBUFFER&&(n[i.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:i}=this;let n=[],r=!1;if(null!==e.textures){n=this.currentDrawbuffers.get(t),void 0===n&&(n=[],this.currentDrawbuffers.set(t,n));const s=e.textures;if(n.length!==s.length||n[0]!==i.COLOR_ATTACHMENT0){for(let e=0,t=s.length;e<t;e++)n[e]=i.COLOR_ATTACHMENT0+e;n.length=s.length,r=!0}}else n[0]!==i.BACK&&(n[0]=i.BACK,r=!0);r&&i.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:i,maxTextures:n}=this;void 0===e&&(e=t.TEXTURE0+n-1),i!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,i){const{gl:n,currentTextureSlot:r,currentBoundTextures:s,maxTextures:a}=this;void 0===i&&(i=null===r?n.TEXTURE0+a-1:r);let o=s[i];void 0===o&&(o={type:void 0,texture:void 0},s[i]=o),o.type===e&&o.texture===t||(r!==i&&(n.activeTexture(i),this.currentTextureSlot=i),n.bindTexture(e,t),o.type=e,o.texture=t)}bindBufferBase(e,t,i){const{gl:n}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==i&&(n.bindBufferBase(e,t,i),this.currentBoundBufferBases[r]=i,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:i}=this,n=i[t];void 0!==n&&void 0!==n.type&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class MD{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=""){const{gl:i,extensions:n}=this;let r;if(e===ne)return i.UNSIGNED_BYTE;if(e===he)return i.UNSIGNED_SHORT_4_4_4_4;if(e===de)return i.UNSIGNED_SHORT_5_5_5_1;if(e===me)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===re)return i.BYTE;if(e===se)return i.SHORT;if(e===ae)return i.UNSIGNED_SHORT;if(e===oe)return i.INT;if(e===le)return i.UNSIGNED_INT;if(e===ue)return i.FLOAT;if(e===ce)return i.HALF_FLOAT;if(e===fe)return i.ALPHA;if(e===ge)return i.RGB;if(e===_e)return i.RGBA;if(e===ve)return i.DEPTH_COMPONENT;if(e===xe)return i.DEPTH_STENCIL;if(e===ye)return i.RED;if(e===be)return i.RED_INTEGER;if(e===Te)return i.RG;if(e===Se)return i.RG_INTEGER;if(e===Me)return i.RGBA_INTEGER;if(e===we||e===Ee||e===Ae||e===Re)if(t===dt){if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(e===we)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Ee)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Ae)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Re)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=n.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(e===we)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Ee)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ae)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Re)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Ce||e===Ne||e===Pe||e===Le){if(r=n.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(e===Ce)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ne)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Pe)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Le)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===Ie||e===De||e===Ue){if(r=n.get("WEBGL_compressed_texture_etc"),null===r)return null;if(e===Ie||e===De)return t===dt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===Ue)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(e===Fe||e===Oe||e===Be||e===Ve||e===ze||e===ke||e===Ge||e===He||e===We||e===je||e===Xe||e===$e||e===qe||e===Ye){if(r=n.get("WEBGL_compressed_texture_astc"),null===r)return null;if(e===Fe)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Oe)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Be)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Ve)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===ze)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===ke)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ge)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===He)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===We)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===je)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Xe)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===$e)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===qe)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Ye)return t===dt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===Ke){if(r=n.get("EXT_texture_compression_bptc"),null===r)return null;if(e===Ke)return t===dt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===Je||e===et||e===tt||e===it){if(r=n.get("EXT_texture_compression_rgtc"),null===r)return null;if(e===Ke)return r.COMPRESSED_RED_RGTC1_EXT;if(e===et)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===tt)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===it)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===pe?i.UNSIGNED_INT_24_8:void 0!==i[e]?i[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((i,n)=>{!function r(){const s=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(s===e.WAIT_FAILED)return e.deleteSync(t),void n();s!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),i()):requestAnimationFrame(r)}()}))}}let wD,ED,AD,RD=!1;class CD{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===RD&&(this._init(),RD=!0)}_init(){const e=this.gl;wD={[q]:e.REPEAT,[Y]:e.CLAMP_TO_EDGE,[K]:e.MIRRORED_REPEAT},ED={[Z]:e.NEAREST,[Q]:e.NEAREST_MIPMAP_NEAREST,[J]:e.NEAREST_MIPMAP_LINEAR,[ee]:e.LINEAR,[te]:e.LINEAR_MIPMAP_NEAREST,[ie]:e.LINEAR_MIPMAP_LINEAR},AD={[_t]:e.NEVER,[Mt]:e.ALWAYS,[vt]:e.LESS,[yt]:e.LEQUAL,[xt]:e.EQUAL,[St]:e.GEQUAL,[bt]:e.GREATER,[Tt]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let i;return i=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDepthArrayTexture||!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture||!0===e.isTextureArray?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,i}getInternalFormat(e,t,i,n,r=!1){const{gl:s,extensions:a}=this;if(null!==e&&void 0!==s[e])return s[e];let o=t;return t===s.RED&&(i===s.FLOAT&&(o=s.R32F),i===s.HALF_FLOAT&&(o=s.R16F),i===s.UNSIGNED_BYTE&&(o=s.R8),i===s.UNSIGNED_SHORT&&(o=s.R16),i===s.UNSIGNED_INT&&(o=s.R32UI),i===s.BYTE&&(o=s.R8I),i===s.SHORT&&(o=s.R16I),i===s.INT&&(o=s.R32I)),t===s.RED_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.R8UI),i===s.UNSIGNED_SHORT&&(o=s.R16UI),i===s.UNSIGNED_INT&&(o=s.R32UI),i===s.BYTE&&(o=s.R8I),i===s.SHORT&&(o=s.R16I),i===s.INT&&(o=s.R32I)),t===s.RG&&(i===s.FLOAT&&(o=s.RG32F),i===s.HALF_FLOAT&&(o=s.RG16F),i===s.UNSIGNED_BYTE&&(o=s.RG8),i===s.UNSIGNED_SHORT&&(o=s.RG16),i===s.UNSIGNED_INT&&(o=s.RG32UI),i===s.BYTE&&(o=s.RG8I),i===s.SHORT&&(o=s.RG16I),i===s.INT&&(o=s.RG32I)),t===s.RG_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RG8UI),i===s.UNSIGNED_SHORT&&(o=s.RG16UI),i===s.UNSIGNED_INT&&(o=s.RG32UI),i===s.BYTE&&(o=s.RG8I),i===s.SHORT&&(o=s.RG16I),i===s.INT&&(o=s.RG32I)),t===s.RGB&&(i===s.FLOAT&&(o=s.RGB32F),i===s.HALF_FLOAT&&(o=s.RGB16F),i===s.UNSIGNED_BYTE&&(o=s.RGB8),i===s.UNSIGNED_SHORT&&(o=s.RGB16),i===s.UNSIGNED_INT&&(o=s.RGB32UI),i===s.BYTE&&(o=s.RGB8I),i===s.SHORT&&(o=s.RGB16I),i===s.INT&&(o=s.RGB32I),i===s.UNSIGNED_BYTE&&(o=n===dt&&!1===r?s.SRGB8:s.RGB8),i===s.UNSIGNED_SHORT_5_6_5&&(o=s.RGB565),i===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1),i===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGB4),i===s.UNSIGNED_INT_5_9_9_9_REV&&(o=s.RGB9_E5)),t===s.RGB_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RGB8UI),i===s.UNSIGNED_SHORT&&(o=s.RGB16UI),i===s.UNSIGNED_INT&&(o=s.RGB32UI),i===s.BYTE&&(o=s.RGB8I),i===s.SHORT&&(o=s.RGB16I),i===s.INT&&(o=s.RGB32I)),t===s.RGBA&&(i===s.FLOAT&&(o=s.RGBA32F),i===s.HALF_FLOAT&&(o=s.RGBA16F),i===s.UNSIGNED_BYTE&&(o=s.RGBA8),i===s.UNSIGNED_SHORT&&(o=s.RGBA16),i===s.UNSIGNED_INT&&(o=s.RGBA32UI),i===s.BYTE&&(o=s.RGBA8I),i===s.SHORT&&(o=s.RGBA16I),i===s.INT&&(o=s.RGBA32I),i===s.UNSIGNED_BYTE&&(o=n===dt&&!1===r?s.SRGB8_ALPHA8:s.RGBA8),i===s.UNSIGNED_SHORT_4_4_4_4&&(o=s.RGBA4),i===s.UNSIGNED_SHORT_5_5_5_1&&(o=s.RGB5_A1)),t===s.RGBA_INTEGER&&(i===s.UNSIGNED_BYTE&&(o=s.RGBA8UI),i===s.UNSIGNED_SHORT&&(o=s.RGBA16UI),i===s.UNSIGNED_INT&&(o=s.RGBA32UI),i===s.BYTE&&(o=s.RGBA8I),i===s.SHORT&&(o=s.RGBA16I),i===s.INT&&(o=s.RGBA32I)),t===s.DEPTH_COMPONENT&&(i===s.UNSIGNED_SHORT&&(o=s.DEPTH_COMPONENT16),i===s.UNSIGNED_INT&&(o=s.DEPTH_COMPONENT24),i===s.FLOAT&&(o=s.DEPTH_COMPONENT32F)),t===s.DEPTH_STENCIL&&i===s.UNSIGNED_INT_24_8&&(o=s.DEPTH24_STENCIL8),o!==s.R16F&&o!==s.R32F&&o!==s.RG16F&&o!==s.RG32F&&o!==s.RGBA16F&&o!==s.RGBA32F||a.get("EXT_color_buffer_float"),o}setTextureParameters(e,t){const{gl:i,extensions:n,backend:r}=this;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE),i.texParameteri(e,i.TEXTURE_WRAP_S,wD[t.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,wD[t.wrapT]),e!==i.TEXTURE_3D&&e!==i.TEXTURE_2D_ARRAY||!0!==t.isDepthArrayTexture&&!1===t.isTextureArray&&i.texParameteri(e,i.TEXTURE_WRAP_R,wD[t.wrapR]),i.texParameteri(e,i.TEXTURE_MAG_FILTER,ED[t.magFilter]);const s=void 0!==t.mipmaps&&t.mipmaps.length>0,a=t.minFilter===ee&&s?ie:t.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,ED[a]),t.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,AD[t.compareFunction])),!0===n.has("EXT_texture_filter_anisotropic")){if(t.magFilter===Z)return;if(t.minFilter!==J&&t.minFilter!==ie)return;if(t.type===ue&&!1===n.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const s=n.get("EXT_texture_filter_anisotropic");i.texParameterf(e,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:i,defaultTextures:n}=this,r=this.getGLTextureType(e);let s=n[r];void 0===s&&(s=t.createTexture(),i.state.bindTexture(r,s),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),n[r]=s),i.set(e,{textureGPU:s,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:i,backend:n}=this,{levels:r,width:s,height:a,depth:o}=t,l=n.utils.convert(e.format,e.colorSpace),u=n.utils.convert(e.type),c=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),h=i.createTexture(),d=this.getGLTextureType(e);n.state.bindTexture(d,h),this.setTextureParameters(d,e),e.isDepthArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture||e.isTextureArray?i.texStorage3D(i.TEXTURE_2D_ARRAY,r,c,s,a,o):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,r,c,s,a,o):e.isVideoTexture||i.texStorage2D(d,r,c,s,a),n.set(e,{textureGPU:h,glTextureType:d,glFormat:l,glType:u,glInternalFormat:c})}copyBufferToTexture(e,t){const{gl:i,backend:n}=this,{textureGPU:r,glTextureType:s,glFormat:a,glType:o}=n.get(t),{width:l,height:u}=t.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(s,r),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(s,0,0,0,l,u,a,o,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:i}=this,{width:n,height:r}=t,{textureGPU:s,glTextureType:a,glFormat:o,glType:l,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===s)return;const c=e=>e.isDataTexture?e.image.data:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||e instanceof OffscreenCanvas?e:e.data;if(this.backend.state.bindTexture(a,s),this.setTextureParameters(a,e),e.isCompressedTexture){const n=e.mipmaps,r=t.image;for(let t=0;t<n.length;t++){const s=n[t];e.isCompressedArrayTexture?e.format!==i.RGBA?null!==o&&i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,t,0,0,0,s.width,s.height,r.depth,o,s.data):i.texSubImage3D(i.TEXTURE_2D_ARRAY,t,0,0,0,s.width,s.height,r.depth,o,l,s.data):null!==o&&i.compressedTexSubImage2D(i.TEXTURE_2D,t,0,0,s.width,s.height,o,s.data)}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const s=c(e[t]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,n,r,o,l,s)}}else if(e.isDataArrayTexture||e.isDepthArrayTexture){const e=t.image;i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,o,l,e.data)}else if(e.isData3DTexture){const e=t.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,o,l,e.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(a,0,u,o,l,t.image);else{const e=c(t.image);i.texSubImage2D(a,0,0,0,n,r,o,l,e)}}generateMipmaps(e){const{gl:t,backend:i}=this,{textureGPU:n,glTextureType:r}=i.get(e);i.state.bindTexture(r,n),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:i}=this;if(e){const n=i.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const e in n.framebuffers)t.deleteFramebuffer(n.framebuffers[e]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let e=0;e<n.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(n.msaaRenderbuffers[e]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:i}=this,{textureGPU:n,renderTarget:r}=i.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(n),i.delete(e)}copyTextureToTexture(e,t,i=null,n=null,r=0,s=0){const{gl:a,backend:o}=this,{state:l}=this.backend,{textureGPU:u,glTextureType:c,glType:h,glFormat:d}=o.get(t);let p,m,f,g,_,v,x,y,b;l.bindTexture(c,u);const T=e.isCompressedTexture?e.mipmaps[s]:e.image;if(null!==i)p=i.max.x-i.min.x,m=i.max.y-i.min.y,f=i.isBox3?i.max.z-i.min.z:1,g=i.min.x,_=i.min.y,v=i.isBox3?i.min.z:0;else{const t=Math.pow(2,-r);p=Math.floor(T.width*t),m=Math.floor(T.height*t),f=e.isDataArrayTexture||e.isDepthArrayTexture?T.depth:e.isData3DTexture?Math.floor(T.depth*t):1,g=0,_=0,v=0}null!==n?(x=n.x,y=n.y,b=n.z):(x=0,y=0,b=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const S=a.getParameter(a.UNPACK_ROW_LENGTH),M=a.getParameter(a.UNPACK_IMAGE_HEIGHT),w=a.getParameter(a.UNPACK_SKIP_PIXELS),E=a.getParameter(a.UNPACK_SKIP_ROWS),A=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,T.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,T.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,g),a.pixelStorei(a.UNPACK_SKIP_ROWS,_),a.pixelStorei(a.UNPACK_SKIP_IMAGES,v);const R=t.isDataArrayTexture||t.isData3DTexture||t.isDepthArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const i=o.get(e),n=o.get(t),r=o.get(i.renderTarget),s=o.get(n.renderTarget),u=r.framebuffers[i.cacheKey],c=s.framebuffers[n.cacheKey];l.bindFramebuffer(a.READ_FRAMEBUFFER,u),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,c);let h=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(h=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(g,_,p,m,x,y,p,m,h,a.NEAREST),l.bindFramebuffer(a.READ_FRAMEBUFFER,null),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else R?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(c,s,x,y,b,p,m,f,d,h,T.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(c,s,x,y,b,p,m,f,d,T.data):a.texSubImage3D(c,s,x,y,b,p,m,f,d,h,T):e.isDataTexture?a.texSubImage2D(c,s,x,y,p,m,d,h,T.data):e.isCompressedTexture?a.compressedTexSubImage2D(c,s,x,y,T.width,T.height,d,T.data):a.texSubImage2D(c,s,x,y,p,m,d,h,T);a.pixelStorei(a.UNPACK_ROW_LENGTH,S),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,M),a.pixelStorei(a.UNPACK_SKIP_PIXELS,w),a.pixelStorei(a.UNPACK_SKIP_ROWS,E),a.pixelStorei(a.UNPACK_SKIP_IMAGES,A),0===s&&t.generateMipmaps&&a.generateMipmap(c),l.unbindTexture()}copyFramebufferToTexture(e,t,i){const{gl:n}=this,{state:r}=this.backend,{textureGPU:s}=this.backend.get(e),{x:a,y:o,z:l,w:u}=i,c=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,h=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(c){const i=0!==a||0!==o;let c,d;if(!0===e.isDepthTexture?(c=n.DEPTH_BUFFER_BIT,d=n.DEPTH_ATTACHMENT,t.stencil&&(c|=n.STENCIL_BUFFER_BIT)):(c=n.COLOR_BUFFER_BIT,d=n.COLOR_ATTACHMENT0),i){const e=this.backend.get(t.renderTarget),i=e.framebuffers[t.getCacheKey()],d=e.msaaFrameBuffer;r.bindFramebuffer(n.DRAW_FRAMEBUFFER,i),r.bindFramebuffer(n.READ_FRAMEBUFFER,d);const p=h-o-u;n.blitFramebuffer(a,p,a+l,p+u,a,p,a+l,p+u,c,n.NEAREST),r.bindFramebuffer(n.READ_FRAMEBUFFER,i),r.bindTexture(n.TEXTURE_2D,s),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,p,l,u),r.unbindTexture()}else{const e=n.createFramebuffer();r.bindFramebuffer(n.DRAW_FRAMEBUFFER,e),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,d,n.TEXTURE_2D,s,0),n.blitFramebuffer(0,0,l,u,0,0,l,u,c,n.NEAREST),n.deleteFramebuffer(e)}}else r.bindTexture(n.TEXTURE_2D,s),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,h-u-o,l,u),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,i,n=!1){const{gl:r}=this,s=t.renderTarget,{depthTexture:a,depthBuffer:o,stencilBuffer:l,width:u,height:c}=s;if(r.bindRenderbuffer(r.RENDERBUFFER,e),o&&!l){let t=r.DEPTH_COMPONENT24;if(!0===n){this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,s.samples,t,u,c)}else i>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(t=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,i,t,u,c)):r.renderbufferStorage(r.RENDERBUFFER,t,u,c);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else o&&l&&(i>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,i,r.DEPTH24_STENCIL8,u,c):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,u,c),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,i,n,r,s){const{backend:a,gl:o}=this,{textureGPU:l,glFormat:u,glType:c}=this.backend.get(e),h=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,h);const d=e.isCubeTexture?o.TEXTURE_CUBE_MAP_POSITIVE_X+s:o.TEXTURE_2D;o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,d,l,0);const p=this._getTypedArrayType(c),m=n*r*this._getBytesPerTexel(c,u),f=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.bufferData(o.PIXEL_PACK_BUFFER,m,o.STREAM_READ),o.readPixels(t,i,n,r,u,c,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const g=new p(m/p.BYTES_PER_ELEMENT);return o.bindBuffer(o.PIXEL_PACK_BUFFER,f),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,g),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(h),g}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:i}=this;let n=0;return e===i.UNSIGNED_BYTE&&(n=1),e!==i.UNSIGNED_SHORT_4_4_4_4&&e!==i.UNSIGNED_SHORT_5_5_5_1&&e!==i.UNSIGNED_SHORT_5_6_5&&e!==i.UNSIGNED_SHORT&&e!==i.HALF_FLOAT||(n=2),e!==i.UNSIGNED_INT&&e!==i.FLOAT||(n=4),t===i.RGBA?4*n:t===i.RGB?3*n:t===i.ALPHA?n:void 0}}class ND{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class PD{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const i=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const LD={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class ID{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:i,mode:n,object:r,type:s,info:a,index:o}=this;0!==o?i.drawElements(n,t,s,e):i.drawArrays(n,e,t),a.update(r,t,1)}renderInstances(e,t,i){const{gl:n,mode:r,type:s,index:a,object:o,info:l}=this;0!==i&&(0!==a?n.drawElementsInstanced(r,t,s,e,i):n.drawArraysInstanced(r,e,t,i),l.update(o,t,i))}renderMultiDraw(e,t,i){const{extensions:n,mode:r,object:s,info:a}=this;if(0===i)return;const o=n.get("WEBGL_multi_draw");if(null===o)for(let l=0;l<i;l++)this.render(e[l],t[l]);else{0!==this.index?o.multiDrawElementsWEBGL(r,t,0,this.type,e,0,i):o.multiDrawArraysWEBGL(r,e,0,t,0,i);let n=0;for(let e=0;e<i;e++)n+=t[e];a.update(s,n,1)}}renderMultiDrawInstances(e,t,i,n){const{extensions:r,mode:s,object:a,info:o}=this;if(0===i)return;const l=r.get("WEBGL_multi_draw");if(null===l)for(let u=0;u<i;u++)this.renderInstances(e[u],t[u],n[u]);else{0!==this.index?l.multiDrawElementsInstancedWEBGL(s,t,0,this.type,e,0,n,0,i):l.multiDrawArraysInstancedWEBGL(s,e,0,t,0,n,0,i);let r=0;for(let e=0;e<i;e++)r+=t[e]*n[e];o.update(a,r,1)}}}class DD{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class UD extends DD{constructor(e,t,i=2048){if(super(i),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),this.ext){this.queries=[];for(let t=0;t<this.maxQueries;t++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}else this.trackTimestamp=!1}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Yt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(null==t)return;if(null!==this.activeQuery)return;const i=this.queries[t];if(i)try{"inactive"===this.queryStates.get(t)&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,i),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(n){this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(null!=t&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(i){this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[i,n]of this.queryStates)if("ended"===n){const t=this.queries[i];e.push(this.resolveQuery(t))}if(0===e.length)return this.lastValue;const t=(await Promise.all(e)).reduce(((e,t)=>e+t),0);return this.lastValue=t,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,t}catch(e){return this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise((t=>{if(this.isDisposed)return void t(this.lastValue);let i,n=!1;const r=e=>{n||(n=!0,i&&(clearTimeout(i),i=null),t(e))},s=()=>{if(this.isDisposed)r(this.lastValue);else try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT))return void r(this.lastValue);if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE))return void(i=setTimeout(s,1));const n=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(n)/1e6)}catch(n){t(this.lastValue)}};s()}))}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class FD extends _D{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,i={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},n=void 0!==t.context?t.context:e.domElement.getContext("webgl2",i);function r(t){t.preventDefault();const i={api:"WebGL",message:t.statusMessage||"Unknown reason",reason:null,originalEvent:t};e.onDeviceLost(i)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=n,this.extensions=new ND(this),this.capabilities=new PD(this),this.attributeUtils=new TD(this),this.textureUtils=new CD(this),this.bufferRenderer=new ID(this),this.state=new SD(this),this.utils=new MD(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Rt}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){!0!==this.gl.getContextAttributes().xrCompatible&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,i=null){const n=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:n.RGBA8}),null!==i){const t=e.stencilBuffer?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:i,glInternalFormat:t}),!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!0===e.autoAllocateDepthBuffer&&e.multiview,e.autoAllocateDepthBuffer=!1}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new UD(this.gl,t,2048));const i=this.timestampQueryPool[t];null!==i.allocateQueriesForContext(e)&&i.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t,gl:i}=this,n=this.get(e);if(e.viewport?this.updateViewport(e):t.viewport(0,0,i.drawingBufferWidth,i.drawingBufferHeight),e.scissor){const{x:i,y:n,width:r,height:s}=e.scissorValue;t.scissor(i,e.height-s-n,r,s)}this.initTimestampQuery(e),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const r=e.occlusionQueryCount;r>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(r),n.occlusionQueryObjects=new Array(r),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:i}=this,n=this.get(e),r=n.previousContext;i.resetVertexState();const s=e.occlusionQueryCount;s>0&&(s>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(null!==a)for(let o=0;o<a.length;o++){const e=a[o];e.generateMipmaps&&this.generateMipmaps(e)}if(this._currentContext=r,null!==e.textures&&e.renderTarget){const n=this.get(e.renderTarget),{samples:r}=e.renderTarget;if(r>0&&!1===this._useMultisampledExtension(e.renderTarget)){const r=n.framebuffers[e.getCacheKey()],s=t.COLOR_BUFFER_BIT,a=n.msaaFrameBuffer,o=e.textures;i.bindFramebuffer(t.READ_FRAMEBUFFER,a),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,r);for(let i=0;i<o.length;i++)if(e.scissor){const{x:i,y:r,width:a,height:o}=e.scissorValue,l=e.height-o-r;t.blitFramebuffer(i,l,i+a,l+o,i,l,i+a,l+o,s,t.NEAREST),!0===this._supportsInvalidateFramebuffer&&t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,n.invalidationArray,i,l,a,o)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,s,t.NEAREST),!0===this._supportsInvalidateFramebuffer&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,n.invalidationArray)}}null!==r&&(this._setFramebuffer(r),r.viewport?this.updateViewport(r):i.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const e=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const s=()=>{let a=0;for(let t=0;t<i.length;t++){const s=i[t];null!==s&&(r.getQueryParameter(s,r.QUERY_RESULT_AVAILABLE)&&(0===r.getQueryParameter(s,r.QUERY_RESULT)&&e.add(n[t]),i[t]=null,r.deleteQuery(s),a++))}a<i.length?requestAnimationFrame(s):t.occluded=e};s()}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:i,y:n,width:r,height:s}=e.viewportValue;t.viewport(i,e.height-s-n,r,s)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,i,n=null,r=!0){const{gl:s,renderer:a}=this;if(null===n){n={textures:null,clearColorValue:this.getClearColor()}}let o=0;if(e&&(o|=s.COLOR_BUFFER_BIT),t&&(o|=s.DEPTH_BUFFER_BIT),i&&(o|=s.STENCIL_BUFFER_BIT),0!==o){let l;l=n.clearColorValue?n.clearColorValue:this.getClearColor();const u=a.getClearDepth(),c=a.getClearStencil();if(t&&this.state.setDepthMask(!0),null===n.textures)s.clearColor(l.r,l.g,l.b,l.a),s.clear(o);else{if(r&&this._setFramebuffer(n),e)for(let e=0;e<n.textures.length;e++)0===e?s.clearBufferfv(s.COLOR,e,[l.r,l.g,l.b,l.a]):s.clearBufferfv(s.COLOR,e,[0,0,0,1]);t&&i?s.clearBufferfi(s.DEPTH_STENCIL,0,u,c):t?s.clearBufferfv(s.DEPTH,0,[u]):i&&s.clearBufferiv(s.STENCIL,0,[c])}}}beginCompute(e){const{state:t,gl:i}=this;t.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,i,n){const{state:r,gl:s}=this;!1===this.discard&&(s.enable(s.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:o,attributes:l}=this.get(n),u=this._getVaoKey(l),c=this.vaoCache[u];void 0===c?this._createVao(l):r.setVertexState(c),r.useProgram(a),this._bindUniforms(i);const h=this._getTransformFeedback(o);s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,h),s.beginTransformFeedback(s.POINTS),l[0].isStorageInstancedBufferAttribute?s.drawArraysInstanced(s.POINTS,0,1,t.count):s.drawArrays(s.POINTS,0,t.count),s.endTransformFeedback(),s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,null);for(let d=0;d<o.length;d++){const e=o[d];e.pbo&&this.textureUtils.copyBufferToTexture(e.transformBuffer,e.pbo),e.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isDepthArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:i,material:n,context:r,hardwareClippingPlanes:s}=e,{programGPU:a}=this.get(i),{gl:o,state:l}=this,u=this.get(r),c=e.getDrawParameters();if(null===c)return;this._bindUniforms(e.getBindings());const h=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(n,h,s),l.useProgram(a);const d=this.get(e);let p=d.staticVao;if(void 0===p||d.geometryId!==e.geometry.id){const t=this._getVaoKey(e.getAttributes());if(p=this.vaoCache[t],void 0===p){let t;({vaoGPU:p,staticVao:t}=this._createVao(e.getAttributes())),t&&(d.staticVao=p,d.geometryId=e.geometry.id)}}const m=e.getIndex(),f=null!==m?this.get(m).bufferGPU:null;l.setVertexState(p,f);const g=u.lastOcclusionObject;if(g!==t&&void 0!==g){if(null!==g&&!0===g.occlusionTest&&(o.endQuery(o.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),!0===t.occlusionTest){const e=o.createQuery();o.beginQuery(o.ANY_SAMPLES_PASSED,e),u.occlusionQueries[u.occlusionQueryIndex]=e,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const _=this.bufferRenderer;t.isPoints?_.mode=o.POINTS:t.isLineSegments?_.mode=o.LINES:t.isLine?_.mode=o.LINE_STRIP:t.isLineLoop?_.mode=o.LINE_LOOP:!0===n.wireframe?(l.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),_.mode=o.LINES):_.mode=o.TRIANGLES;const{vertexCount:v,instanceCount:x}=c;let{firstVertex:y}=c;if(_.object=t,null!==m){y*=m.array.BYTES_PER_ELEMENT;const e=this.get(m);_.index=m.count,_.type=e.type}else _.index=0;const b=()=>{t.isBatchedMesh?null!==t._multiDrawInstances?(Yt("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),_.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?_.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Yt("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):x>1?_.renderInstances(y,v,x):_.render(y,v)};if(!0===e.camera.isArrayCamera&&e.camera.cameras.length>0&&!1===e.camera.isMultiViewCamera){const i=this.get(e.camera),n=e.camera.cameras,r=e.getBindingGroup("cameraIndex").bindings[0];if(void 0===i.indexesGPU||i.indexesGPU.length!==n.length){const e=new Uint32Array([0,0,0,0]),t=[];for(let i=0,r=n.length;i<r;i++){const n=o.createBuffer();e[0]=i,o.bindBuffer(o.UNIFORM_BUFFER,n),o.bufferData(o.UNIFORM_BUFFER,e,o.STATIC_DRAW),t.push(n)}i.indexesGPU=t}const s=this.get(r),a=this.renderer.getPixelRatio(),u=this._currentContext.renderTarget,c=this._isRenderCameraDepthArray(this._currentContext),h=this._currentContext.activeCubeFace;if(c){const e=this.get(u.depthTexture);if(e.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){e.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:t}=u;for(let e=0,i=n.length;e<i;e++)this.renderer._activeCubeFace=e,this._currentContext.activeCubeFace=e,this._setFramebuffer(this._currentContext),this.clear(!1,!0,t,this._currentContext,!1);this.renderer._activeCubeFace=h,this._currentContext.activeCubeFace=h}}for(let d=0,p=n.length;d<p;d++){const r=n[d];if(t.layers.test(r.layers)){c&&(this.renderer._activeCubeFace=d,this._currentContext.activeCubeFace=d,this._setFramebuffer(this._currentContext));const t=r.viewport;if(void 0!==t){const i=t.x*a,n=t.y*a,r=t.width*a,s=t.height*a;l.viewport(Math.floor(i),Math.floor(e.context.height-s-n),Math.floor(r),Math.floor(s))}l.bindBufferBase(o.UNIFORM_BUFFER,s.index,i.indexesGPU[d]),b()}this._currentContext.activeCubeFace=h,this.renderer._activeCubeFace=h}}else b()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,i,n,r,s){return this.textureUtils.copyTextureToBuffer(e,t,i,n,r,s)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new mD(e,t)}createProgram(e){const t=this.gl,{stage:i,code:n}=e,r="fragment"===i?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,n),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const i=this.gl,n=e.pipeline,{fragmentProgram:r,vertexProgram:s}=n,a=i.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU;if(i.attachShader(a,o),i.attachShader(a,l),i.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:o,vertexShader:l}),null!==t&&this.parallel){const r=new Promise((t=>{const r=this.parallel,s=()=>{i.getProgramParameter(a,r.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),t()):requestAnimationFrame(s)};s()}));t.push(r)}else this._completeCompile(e,n)}_handleSource(e,t){const i=e.split("\n"),n=[],r=Math.max(t-6,0),s=Math.min(t+6,i.length);for(let a=r;a<s;a++){const e=a+1;n.push(`${e===t?">":" "} ${e}: ${i[a]}`)}return n.join("\n")}_getShaderErrors(e,t,i){const n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+this._handleSource(e.getShaderSource(t),n)}return r}_logProgramError(e,t,i){if(this.renderer.debug.checkShaderErrors){const n=this.gl;n.getProgramInfoLog(e).trim();if(!1===n.getProgramParameter(e,n.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(n,e,i,t);else{this._getShaderErrors(n,i,"vertex"),this._getShaderErrors(n,t,"fragment")}}}_completeCompile(e,t){const{state:i,gl:n}=this,r=this.get(t),{programGPU:s,fragmentShader:a,vertexShader:o}=r;!1===n.getProgramParameter(s,n.LINK_STATUS)&&this._logProgramError(s,a,o),i.useProgram(s);const l=e.getBindings();this._setupBindings(l,s),this.set(t,{programGPU:s})}createComputePipeline(e,t){const{state:i,gl:n}=this,r={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(r);const{computeProgram:s}=e,a=n.createProgram(),o=this.get(r).shaderGPU,l=this.get(s).shaderGPU,u=s.transforms,c=[],h=[];for(let f=0;f<u.length;f++){const e=u[f];c.push(e.varyingName),h.push(e.attributeNode)}n.attachShader(a,o),n.attachShader(a,l),n.transformFeedbackVaryings(a,c,n.SEPARATE_ATTRIBS),n.linkProgram(a),!1===n.getProgramParameter(a,n.LINK_STATUS)&&this._logProgramError(a,o,l),i.useProgram(a),this._setupBindings(t,a);const d=s.attributes,p=[],m=[];for(let f=0;f<d.length;f++){const e=d[f].node.attribute;p.push(e),this.has(e)||this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER)}for(let f=0;f<h.length;f++){const e=h[f].attribute;this.has(e)||this.attributeUtils.createAttribute(e,n.ARRAY_BUFFER);const t=this.get(e);m.push(t)}this.set(e,{programGPU:a,transformBuffers:m,attributes:p})}createBindings(e,t){if(!1===this._knownBindings.has(t)){this._knownBindings.add(t);let e=0,i=0;for(const n of t){this.set(n,{textures:i,uniformBuffers:e});for(const t of n.bindings)t.isUniformBuffer&&e++,t.isSampledTexture&&i++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,i=this.get(e);let n=i.uniformBuffers,r=i.textures;for(const s of e.bindings)if(s.isUniformsGroup||s.isUniformBuffer){const e=s.buffer,i=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,e,t.DYNAMIC_DRAW),this.set(s,{index:n++,bufferGPU:i})}else if(s.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(s.texture);this.set(s,{index:r++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const i=this.get(e).bufferGPU,n=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,n,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(LD).filter((t=>LD[t]===e)),i=this.extensions;for(let n=0;n<t.length;n++)if(i.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,i=null,n=null,r=0,s=0){this.textureUtils.copyTextureToTexture(e,t,i,n,r,s)}copyFramebufferToTexture(e,t,i){this.textureUtils.copyFramebufferToTexture(e,t,i)}_setFramebuffer(e){const{gl:t,state:i}=this;let n=null;if(null!==e.textures){const r=e.renderTarget,s=this.get(r),{samples:a,depthBuffer:o,stencilBuffer:l}=r,u=!0===r.isWebGLCubeRenderTarget,c=!0===r.isRenderTarget3D,h=!0===r.isRenderTargetArray,d=!0===r.isXRRenderTarget,p=!0===d&&!0===r.hasExternalTextures;let m=s.msaaFrameBuffer,f=s.depthRenderbuffer;const g=this.extensions.get("WEBGL_multisampled_render_to_texture"),_=this.extensions.get("OVR_multiview2"),v=this._useMultisampledExtension(r),x=tR(e);let y;if(u?(s.cubeFramebuffers||(s.cubeFramebuffers={}),y=s.cubeFramebuffers[x]):d&&!1===p?y=this._xrFramebuffer:(s.framebuffers||(s.framebuffers={}),y=s.framebuffers[x]),void 0===y){y=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,y);const n=e.textures;if(u){s.cubeFramebuffers[x]=y;const{textureGPU:e}=this.get(n[0]),i=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+i,e,0)}else{s.framebuffers[x]=y;for(let i=0;i<n.length;i++){const s=n[i],o=this.get(s);o.renderTarget=e.renderTarget,o.cacheKey=x;const l=t.COLOR_ATTACHMENT0+i;if(c||h){const e=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,l,o.textureGPU,0,e)}else r.multiview?_.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,l,o.textureGPU,0,a,0,2):p&&v?g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,t.TEXTURE_2D,o.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,l,t.TEXTURE_2D,o.textureGPU,0)}i.drawBuffers(e,y)}if(r.isXRRenderTarget&&!0===r.autoAllocateDepthBuffer){const i=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(i,e,0,v),s.xrDepthRenderbuffer=i}else if(null!==e.depthTexture){const i=this.get(e.depthTexture),n=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(i.renderTarget=e.renderTarget,i.cacheKey=x,r.multiview)_.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,n,i.textureGPU,0,a,0,2);else if(p&&v)g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,n,t.TEXTURE_2D,i.textureGPU,0,a);else if(e.depthTexture.isDepthArrayTexture){const e=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,n,i.textureGPU,0,e)}else t.framebufferTexture2D(t.FRAMEBUFFER,n,t.TEXTURE_2D,i.textureGPU,0)}}else{if(this._isRenderCameraDepthArray(e)){i.bindFramebuffer(t.FRAMEBUFFER,y);const n=this.renderer._activeCubeFace,r=this.get(e.depthTexture),s=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,s,r.textureGPU,0,n)}if(d&&p||r.multiview){i.bindFramebuffer(t.FRAMEBUFFER,y);const n=this.get(e.textures[0]);r.multiview?_.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,n.textureGPU,0,a,0,2):v?g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n.textureGPU,0);const o=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(!0===r.autoAllocateDepthBuffer){const e=s.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,e),t.framebufferRenderbuffer(t.FRAMEBUFFER,o,t.RENDERBUFFER,e)}else{const i=this.get(e.depthTexture);r.multiview?_.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,o,i.textureGPU,0,a,0,2):v?g.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,o,t.TEXTURE_2D,i.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,i.textureGPU,0)}}}if(a>0&&!1===v&&!r.multiview){if(void 0===m){const n=[];m=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,m);const r=[],u=e.textures;for(let i=0;i<u.length;i++){if(r[i]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,r[i]),n.push(t.COLOR_ATTACHMENT0+i),o){const e=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;n.push(e)}const s=e.textures[i],u=this.get(s);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,u.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+i,t.RENDERBUFFER,r[i])}if(s.msaaFrameBuffer=m,s.msaaRenderbuffers=r,void 0===f){f=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(f,e,a),s.depthRenderbuffer=f;const i=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;n.push(i)}s.invalidationArray=n}n=s.msaaFrameBuffer}else n=y}i.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e){let t="";for(let i=0;i<e.length;i++){t+=":"+this.get(e[i]).id}return t}_createVao(e){const{gl:t}=this,i=t.createVertexArray();let n="",r=!0;t.bindVertexArray(i);for(let s=0;s<e.length;s++){const i=e[s],a=this.get(i);let o,l;n+=":"+a.id,t.bindBuffer(t.ARRAY_BUFFER,a.bufferGPU),t.enableVertexAttribArray(s),(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&(r=!1),!0===i.isInterleavedBufferAttribute?(o=i.data.stride*a.bytesPerElement,l=i.offset*a.bytesPerElement):(o=0,l=0),a.isInteger?t.vertexAttribIPointer(s,i.itemSize,a.type,o,l):t.vertexAttribPointer(s,i.itemSize,a.type,i.normalized,o,l),i.isInstancedBufferAttribute&&!i.isInterleavedBufferAttribute?t.vertexAttribDivisor(s,i.meshPerAttribute):i.isInterleavedBufferAttribute&&i.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(s,i.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),this.vaoCache[n]=i,{vaoGPU:i,staticVao:r}}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let i=this.transformFeedbackCache[t];if(void 0!==i)return i;const{gl:n}=this;i=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,i);for(let r=0;r<e.length;r++){const t=e[r];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,r,t.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=i,i}_setupBindings(e,t){const i=this.gl;for(const n of e)for(const e of n.bindings){const n=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const r=i.getUniformBlockIndex(t,e.name);i.uniformBlockBinding(t,r,n)}else if(e.isSampledTexture){const r=i.getUniformLocation(t,e.name);i.uniform1i(r,n)}}}_bindUniforms(e){const{gl:t,state:i}=this;for(const n of e)for(const e of n.bindings){const n=this.get(e),r=n.index;e.isUniformsGroup||e.isUniformBuffer?i.bindBufferBase(t.UNIFORM_BUFFER,r,n.bufferGPU):e.isSampledTexture&&i.bindTexture(n.glTextureType,n.textureGPU,t.TEXTURE0+r)}}_useMultisampledExtension(e){return!0===e.multiview||e.samples>0&&!0===this.extensions.has("WEBGL_multisampled_render_to_texture")&&!1!==e.autoAllocateDepthBuffer}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const OD="point-list",BD="line-list",VD="line-strip",zD="triangle-list",kD="triangle-strip",GD="never",HD="less",WD="equal",jD="less-equal",XD="greater",$D="not-equal",qD="greater-equal",YD="always",KD="store",ZD="load",QD="clear",JD="ccw",eU="none",tU="front",iU="back",nU="uint16",rU="uint32",sU="r8unorm",aU="r8snorm",oU="r8uint",lU="r8sint",uU="r16uint",cU="r16sint",hU="r16float",dU="rg8unorm",pU="rg8snorm",mU="rg8uint",fU="rg8sint",gU="r32uint",_U="r32sint",vU="r32float",xU="rg16uint",yU="rg16sint",bU="rg16float",TU="rgba8unorm",SU="rgba8unorm-srgb",MU="rgba8snorm",wU="rgba8uint",EU="rgba8sint",AU="bgra8unorm",RU="bgra8unorm-srgb",CU="rgb9e5ufloat",NU="rgb10a2unorm",PU="rgb10a2unorm",LU="rg32uint",IU="rg32sint",DU="rg32float",UU="rgba16uint",FU="rgba16sint",OU="rgba16float",BU="rgba32uint",VU="rgba32sint",zU="rgba32float",kU="depth16unorm",GU="depth24plus",HU="depth24plus-stencil8",WU="depth32float",jU="depth32float-stencil8",XU="bc1-rgba-unorm",$U="bc1-rgba-unorm-srgb",qU="bc2-rgba-unorm",YU="bc2-rgba-unorm-srgb",KU="bc3-rgba-unorm",ZU="bc3-rgba-unorm-srgb",QU="bc4-r-unorm",JU="bc4-r-snorm",eF="bc5-rg-unorm",tF="bc5-rg-snorm",iF="bc6h-rgb-ufloat",nF="bc6h-rgb-float",rF="bc7-rgba-unorm",sF="bc7-rgba-srgb",aF="etc2-rgb8unorm",oF="etc2-rgb8unorm-srgb",lF="etc2-rgb8a1unorm",uF="etc2-rgb8a1unorm-srgb",cF="etc2-rgba8unorm",hF="etc2-rgba8unorm-srgb",dF="eac-r11unorm",pF="eac-r11snorm",mF="eac-rg11unorm",fF="eac-rg11snorm",gF="astc-4x4-unorm",_F="astc-4x4-unorm-srgb",vF="astc-5x4-unorm",xF="astc-5x4-unorm-srgb",yF="astc-5x5-unorm",bF="astc-5x5-unorm-srgb",TF="astc-6x5-unorm",SF="astc-6x5-unorm-srgb",MF="astc-6x6-unorm",wF="astc-6x6-unorm-srgb",EF="astc-8x5-unorm",AF="astc-8x5-unorm-srgb",RF="astc-8x6-unorm",CF="astc-8x6-unorm-srgb",NF="astc-8x8-unorm",PF="astc-8x8-unorm-srgb",LF="astc-10x5-unorm",IF="astc-10x5-unorm-srgb",DF="astc-10x6-unorm",UF="astc-10x6-unorm-srgb",FF="astc-10x8-unorm",OF="astc-10x8-unorm-srgb",BF="astc-10x10-unorm",VF="astc-10x10-unorm-srgb",zF="astc-12x10-unorm",kF="astc-12x10-unorm-srgb",GF="astc-12x12-unorm",HF="astc-12x12-unorm-srgb",WF="clamp-to-edge",jF="repeat",XF="mirror-repeat",$F="linear",qF="nearest",YF="zero",KF="one",ZF="src",QF="one-minus-src",JF="src-alpha",eO="one-minus-src-alpha",tO="dst",iO="one-minus-dst",nO="dst-alpha",rO="one-minus-dst-alpha",sO="src-alpha-saturated",aO="constant",oO="one-minus-constant",lO="add",uO="subtract",cO="reverse-subtract",hO="min",dO="max",pO=0,mO=15,fO="keep",gO="zero",_O="replace",vO="invert",xO="increment-clamp",yO="decrement-clamp",bO="increment-wrap",TO="decrement-wrap",SO="storage",MO="read-only-storage",wO="write-only",EO="read-only",AO="read-write",RO="non-filtering",CO="comparison",NO="float",PO="unfilterable-float",LO="depth",IO="sint",DO="uint",UO="2d",FO="3d",OO="2d",BO="2d-array",VO="cube",zO="3d",kO="all",GO="vertex",HO="instance",WO={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class jO extends YI{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class XO extends jO{constructor(e,t,i){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i}update(){this.texture=this.textureNode.value}}class $O extends KI{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let qO=0;class YO extends $O{constructor(e,t){super("StorageBuffer_"+qO++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Ff.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class KO extends CA{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:$F}),this.flipYSampler=e.createSampler({minFilter:qF}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:kD,stripIndexFormat:rU},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:kD,stripIndexFormat:rU},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,i=0){const n=t.format,{width:r,height:s}=t.size,a=this.getTransferPipeline(n),o=this.getFlipYPipeline(n),l=this.device.createTexture({size:{width:r,height:s,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:OO,baseArrayLayer:i}),c=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:OO,baseArrayLayer:0}),h=this.device.createCommandEncoder({}),d=(e,t,i)=>{const n=e.getBindGroupLayout(0),r=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),s=h.beginRenderPass({colorAttachments:[{view:i,loadOp:QD,storeOp:KD,clearValue:[0,0,0,0]}]});s.setPipeline(e),s.setBindGroup(0,r),s.draw(4,1,0,0),s.end()};d(a,u,c),d(o,c,u),this.device.queue.submit([h.finish()]),l.destroy()}generateMipmaps(e,t,i=0){const n=this.get(e);void 0===n.useCount&&(n.useCount=0,n.layers=[]);const r=n.layers[i]||this._mipmapCreateBundles(e,t,i),s=this.device.createCommandEncoder({});this._mipmapRunBundles(s,r),this.device.queue.submit([s.finish()]),0!==n.useCount&&(n.layers[i]=r),n.useCount++}_mipmapCreateBundles(e,t,i){const n=this.getTransferPipeline(t.format),r=n.getBindGroupLayout(0);let s=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:OO,baseArrayLayer:i});const a=[];for(let o=1;o<t.mipLevelCount;o++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:s}]}),u=e.createView({baseMipLevel:o,mipLevelCount:1,dimension:OO,baseArrayLayer:i}),c={colorAttachments:[{view:u,loadOp:QD,storeOp:KD,clearValue:[0,0,0,0]}]},h=this.device.createRenderBundleEncoder({colorFormats:[t.format]});h.setPipeline(n),h.setBindGroup(0,l),h.draw(4,1,0,0),a.push({renderBundles:[h.finish()],passDescriptor:c}),s=u}return a}_mipmapRunBundles(e,t){const i=t.length;for(let n=0;n<i;n++){const i=t[n],r=e.beginRenderPass(i.passDescriptor);r.executeBundles(i.renderBundles),r.end()}}}const ZO={[_t]:"never",[vt]:"less",[xt]:"equal",[yt]:"less-equal",[bt]:"greater",[St]:"greater-equal",[Mt]:"always",[Tt]:"not-equal"},QO=[0,1,3,2,4,5];class JO{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new da,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,i=t.device,n=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===$F&&r.minFilter===$F&&r.mipmapFilter===$F&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&null!==e.compareFunction&&(r.compare=ZO[e.compareFunction]),n.sampler=i.createSampler(r)}createDefaultTexture(e){let t;const i=eB(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(i):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(i),this.backend.get(e).texture=t}createTexture(e,t={}){const i=this.backend,n=i.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:r,height:s,depth:a,levels:o}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),u=e.internalFormat||t.format||eB(e,i.device);n.format=u;const{samples:c,primarySamples:h,isMSAA:d}=i.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(p|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const m={label:e.name,size:{width:r,height:s,depthOrArrayLayers:a},mipLevelCount:o,sampleCount:h,dimension:l,format:u,usage:p};if(e.isVideoTexture){const t=e.source.data,i=new VideoFrame(t);m.size.width=i.displayWidth,m.size.height=i.displayHeight,i.close(),n.externalTexture=t}else{if(void 0===u)return void this.createDefaultTexture(e);e.isCubeTexture&&(m.textureBindingViewDimension=VO),n.texture=i.device.createTexture(m)}if(d){const e=Object.assign({},m);e.label=e.label+"-msaa",e.sampleCount=c,n.msaaTexture=i.device.createTexture(e)}n.initialized=!0,n.textureDescriptorGPU=m}destroyTexture(e){const t=this.backend,i=t.get(e);void 0!==i.texture&&i.texture.destroy(),void 0!==i.msaaTexture&&i.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let e=0;e<i;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const i=this.backend,{width:n,height:r}=i.getDrawingBufferSize(),s=this.depthTexture,a=i.get(s).texture;let o,l;if(t?(o=xe,l=pe):e&&(o=ve,l=le),void 0!==a){if(s.image.width===n&&s.image.height===r&&s.format===o&&s.type===l)return a;this.destroyTexture(s)}return s.name="depthBuffer",s.format=o,s.type=l,s.image.width=n,s.image.height=r,this.createTexture(s,{width:n,height:r}),i.get(s).texture}updateTexture(e,t){const i=this.backend.get(e),{textureDescriptorGPU:n}=i;if(!e.isRenderTargetTexture&&void 0!==n){if(e.isDataTexture)this._copyBufferToTexture(t.image,i.texture,n,0,e.flipY);else if(e.isDataArrayTexture||e.isDepthArrayTexture||e.isData3DTexture)for(let r=0;r<t.image.depth;r++)this._copyBufferToTexture(t.image,i.texture,n,r,e.flipY,r);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,i.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,i.texture,n,e.flipY);else if(e.isVideoTexture){const t=e.source.data;i.externalTexture=t}else this._copyImageToTexture(t.image,i.texture,n,0,e.flipY);i.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,i,n,r,s){const a=this.backend.device,o=this.backend.get(e),l=o.texture,u=o.textureDescriptorGPU.format,c=this._getBytesPerTexel(u);let h=n*c;h=256*Math.ceil(h/256);const d=a.createBuffer({size:n*r*c,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:t,y:i,z:s}},{buffer:d,bytesPerRow:h},{width:n,height:r});const m=this._getTypedArrayType(u);a.queue.submit([p.finish()]),await d.mapAsync(GPUMapMode.READ);return new m(d.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===j||t===X||t===H||t===W}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const i=new li;i.minFilter=Z,i.magFilter=Z,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const i=new Fr;i.minFilter=Z,i.magFilter=Z,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(null===e){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,i,n){for(let r=0;r<6;r++){const s=e[r],a=!0===n?QO[r]:r;s.isDataTexture?this._copyBufferToTexture(s.image,t,i,a,n):this._copyImageToTexture(s,t,i,a,n)}}_copyImageToTexture(e,t,i,n,r){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new KO(this.backend.device)),e}_generateMipmaps(e,t,i=0){this._getPassUtils().generateMipmaps(e,t,i)}_flipY(e,t,i=0){this._getPassUtils().flipY(e,t,i)}_copyBufferToTexture(e,t,i,n,r,s=0){const a=this.backend.device,o=e.data,l=this._getBytesPerTexel(i.format),u=e.width*l;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},o,{offset:e.width*e.height*l*s,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===r&&this._flipY(t,i,n)}_copyCompressedBufferToTexture(e,t,i){const n=this.backend.device,r=this._getBlockData(i.format),s=i.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const o=e[a],l=o.width,u=o.height,c=s?i.size.depthOrArrayLayers:1,h=Math.ceil(l/r.width)*r.byteLength,d=h*Math.ceil(u/r.height);for(let e=0;e<c;e++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:e}},o.data,{offset:e*d,bytesPerRow:h,rowsPerImage:Math.ceil(u/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(u/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===XU||e===$U?{byteLength:8,width:4,height:4}:e===qU||e===YU||e===KU||e===ZU?{byteLength:16,width:4,height:4}:e===QU||e===JU?{byteLength:8,width:4,height:4}:e===eF||e===tF||e===iF||e===nF||e===rF||e===sF?{byteLength:16,width:4,height:4}:e===aF||e===oF||e===lF||e===uF?{byteLength:8,width:4,height:4}:e===cF||e===hF?{byteLength:16,width:4,height:4}:e===dF||e===pF?{byteLength:8,width:4,height:4}:e===mF||e===fF||e===gF||e===_F?{byteLength:16,width:4,height:4}:e===vF||e===xF?{byteLength:16,width:5,height:4}:e===yF||e===bF?{byteLength:16,width:5,height:5}:e===TF||e===SF?{byteLength:16,width:6,height:5}:e===MF||e===wF?{byteLength:16,width:6,height:6}:e===EF||e===AF?{byteLength:16,width:8,height:5}:e===RF||e===CF?{byteLength:16,width:8,height:6}:e===NF||e===PF?{byteLength:16,width:8,height:8}:e===LF||e===IF?{byteLength:16,width:10,height:5}:e===DF||e===UF?{byteLength:16,width:10,height:6}:e===FF||e===OF?{byteLength:16,width:10,height:8}:e===BF||e===VF?{byteLength:16,width:10,height:10}:e===zF||e===kF?{byteLength:16,width:12,height:10}:e===GF||e===HF?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=WF;return e===q?t=jF:e===K&&(t=XF),t}_convertFilterMode(e){let t=$F;return e!==Z&&e!==Q&&e!==J||(t=qF),t}_getBytesPerTexel(e){return e===sU||e===aU||e===oU||e===lU?1:e===uU||e===cU||e===hU||e===dU||e===pU||e===mU||e===fU?2:e===gU||e===_U||e===vU||e===xU||e===yU||e===bU||e===TU||e===SU||e===MU||e===wU||e===EU||e===AU||e===RU||e===CU||e===NU||e===PU||e===WU||e===GU||e===HU||e===jU?4:e===LU||e===IU||e===DU||e===UU||e===FU||e===OU?8:e===BU||e===VU||e===zU?16:void 0}_getTypedArrayType(e){return e===oU?Uint8Array:e===lU?Int8Array:e===sU?Uint8Array:e===aU?Int8Array:e===mU?Uint8Array:e===fU?Int8Array:e===dU?Uint8Array:e===pU?Int8Array:e===wU?Uint8Array:e===EU?Int8Array:e===TU?Uint8Array:e===MU?Int8Array:e===uU?Uint16Array:e===cU?Int16Array:e===xU?Uint16Array:e===yU?Int16Array:e===UU?Uint16Array:e===FU?Int16Array:e===hU||e===bU||e===OU?Uint16Array:e===gU?Uint32Array:e===_U?Int32Array:e===vU?Float32Array:e===LU?Uint32Array:e===IU?Int32Array:e===DU?Float32Array:e===BU?Uint32Array:e===VU?Int32Array:e===zU?Float32Array:e===AU||e===RU?Uint8Array:e===NU||e===CU||e===PU?Uint32Array:e===WU?Float32Array:e===GU||e===HU?Uint32Array:e===jU?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?FO:UO,t}}function eB(e,t=null){const i=e.format,n=e.type,r=e.colorSpace;let s;if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(i){case Ee:s=r===dt?$U:XU;break;case Ae:s=r===dt?YU:qU;break;case Re:s=r===dt?ZU:KU;break;case De:s=r===dt?oF:aF;break;case Ue:s=r===dt?hF:cF;break;case Fe:s=r===dt?_F:gF;break;case Oe:s=r===dt?xF:vF;break;case Be:s=r===dt?bF:yF;break;case Ve:s=r===dt?SF:TF;break;case ze:s=r===dt?wF:MF;break;case ke:s=r===dt?AF:EF;break;case Ge:s=r===dt?CF:RF;break;case He:s=r===dt?PF:NF;break;case We:s=r===dt?IF:LF;break;case je:s=r===dt?UF:DF;break;case Xe:s=r===dt?OF:FF;break;case $e:s=r===dt?VF:BF;break;case qe:s=r===dt?kF:zF;break;case Ye:s=r===dt?HF:GF;break;case _e:s=r===dt?SU:TU}else switch(i){case _e:switch(n){case re:s=MU;break;case se:s=FU;break;case ae:s=UU;break;case le:s=BU;break;case oe:s=VU;break;case ne:s=r===dt?SU:TU;break;case ce:s=OU;break;case ue:s=zU}break;case ge:if(n===me)s=CU;break;case ye:switch(n){case re:s=aU;break;case se:s=cU;break;case ae:s=uU;break;case le:s=gU;break;case oe:s=_U;break;case ne:s=sU;break;case ce:s=hU;break;case ue:s=vU}break;case Te:switch(n){case re:s=pU;break;case se:s=yU;break;case ae:s=xU;break;case le:s=LU;break;case oe:s=IU;break;case ne:s=dU;break;case ce:s=bU;break;case ue:s=DU}break;case ve:switch(n){case ae:s=kU;break;case le:s=GU;break;case ue:s=WU}break;case xe:switch(n){case pe:s=HU;break;case ue:t&&t.features.has(WO.Depth32FloatStencil8),s=jU}break;case be:switch(n){case oe:s=_U;break;case le:s=gU}break;case Se:switch(n){case oe:s=IU;break;case le:s=LU}break;case Me:switch(n){case oe:s=VU;break;case le:s=BU}}return s}const tB=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,iB=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,nB={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class rB extends dI{constructor(e){const{type:t,inputs:i,name:n,inputsCode:r,blockCode:s,outputType:a}=(e=>{const t=(e=e.trim()).match(tB);if(null!==t&&4===t.length){const i=t[2],n=[];let r=null;for(;null!==(r=iB.exec(i));)n.push({name:r[1],type:r[2]});const s=[];for(let e=0;e<n.length;e++){const{name:t,type:i}=n[e];let r=i;r.startsWith("ptr")?r="pointer":(r.startsWith("texture")&&(r=i.split("<")[0]),r=nB[r]),s.push(new eI(r,t))}const a=e.substring(t[0].length),o=t[3]||"void",l=void 0!==t[1]?t[1]:"";return{type:nB[o]||o,inputs:s,name:l,inputsCode:i,blockCode:a,outputType:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,i,n),this.inputsCode=r,this.blockCode=s,this.outputType=a}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class sB extends hI{parseFunction(e){return new rB(e)}}const aB="undefined"!=typeof self?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},oB={[Ff.READ_ONLY]:"read",[Ff.WRITE_ONLY]:"write",[Ff.READ_WRITE]:"read_write"},lB={[q]:"repeat",[Y]:"clamp",[K]:"mirror"},uB={vertex:aB?aB.VERTEX:1,fragment:aB?aB.FRAGMENT:2,compute:aB?aB.COMPUTE:4},cB={instance:!0,swizzleAssign:!1,storageBuffer:!0},hB={"^^":"tsl_xor"},dB={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},pB={},mB={tsl_xor:new sN("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new sN("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new sN("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new sN("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new sN("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new sN("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new sN("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new sN("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new sN("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new sN("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new sN("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new sN("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new sN("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {\n\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},fB={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};"undefined"!=typeof navigator&&/Windows/g.test(navigator.userAgent)&&(mB.pow_float=new sN("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),mB.pow_vec2=new sN("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[mB.pow_float]),mB.pow_vec3=new sN("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[mB.pow_float]),mB.pow_vec4=new sN("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[mB.pow_float]),fB.pow_float="tsl_pow_float",fB.pow_vec2="tsl_pow_vec2",fB.pow_vec3="tsl_pow_vec3",fB.pow_vec4="tsl_pow_vec4");let gB="";!0!==("undefined"!=typeof navigator&&/Firefox|Deno/g.test(navigator.userAgent))&&(gB+="diagnostic( off, derivative_uniformity );\n");class _B extends QL{constructor(e,t){super(e,t,new sB),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==ht}_generateTextureSample(e,t,i,n,r=this.shaderStage){return"fragment"===r?n?`textureSample( ${t}, ${t}_sampler, ${i}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i):this.generateTextureLod(e,t,i,n,"0")}_generateVideoSample(e,t,i=this.shaderStage){if("fragment"===i)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`}_generateTextureSampleLevel(e,t,i,n,r,s=this.shaderStage){return"fragment"!==s&&"compute"!==s||!1!==this.isUnfilterable(e)?this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i,n):this.generateTextureLod(e,t,i,r,n):`textureSampleLevel( ${t}, ${t}_sampler, ${i}, ${n} )`}generateWrapFunction(e){const t=`tsl_coord_${lB[e.wrapS]}S_${lB[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let i=pB[t];if(void 0===i){const n=[],r=e.isData3DTexture?"vec3f":"vec2f";let s=`fn ${t}( coord : ${r} ) -> ${r} {\n\n\treturn ${r}(\n`;const a=(e,t)=>{e===q?(n.push(mB.repeatWrapping_float),s+=`\t\ttsl_repeatWrapping_float( coord.${t} )`):e===Y?(n.push(mB.clampWrapping_float),s+=`\t\ttsl_clampWrapping_float( coord.${t} )`):e===K?(n.push(mB.mirrorWrapping_float),s+=`\t\ttsl_mirrorWrapping_float( coord.${t} )`):s+=`\t\tcoord.${t}`};a(e.wrapS,"x"),s+=",\n",a(e.wrapT,"y"),e.isData3DTexture&&(s+=",\n",a(e.wrapR,"z")),s+="\n\t);\n\n}\n",pB[t]=i=new sN(s,n)}return i.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,i){const n=this.getDataFromNode(e,this.shaderStage,this.globalCache);void 0===n.dimensionsSnippet&&(n.dimensionsSnippet={});let r=n.dimensionsSnippet[i];if(void 0===n.dimensionsSnippet[i]){let s,a;const{primarySamples:o}=this.renderer.backend.utils.getTextureSampleData(e),l=o>1;a=e.isData3DTexture?"vec3<u32>":"vec2<u32>",s=l||e.isVideoTexture||e.isStorageTexture?t:`${t}${i?`, u32( ${i} )`:""}`,r=new $x(new Py(`textureDimensions( ${s} )`,a)),n.dimensionsSnippet[i]=r,(e.isDataArrayTexture||e.isDepthArrayTexture||e.isData3DTexture)&&(n.arrayLayerCount=new $x(new Py(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(n.cubeFaceCount=new $x(new Py("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,i,n="0u"){this._include("biquadraticTexture");return`tsl_biquadraticTexture( ${t}, ${this.generateWrapFunction(e)}( ${i} ), ${this.generateTextureDimension(e,t,n)}, u32( ${n} ) )`}generateTextureLod(e,t,i,n,r="0u"){const s=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r),o=e.isData3DTexture?"vec3":"vec2",l=`${o}<u32>( ${s}( ${i} ) * ${o}<f32>( ${a} ) )`;return this.generateTextureLoad(e,t,l,n,r)}generateTextureLoad(e,t,i,n,r="0u"){let s;return!0===e.isVideoTexture||!0===e.isStorageTexture?s=`textureLoad( ${t}, ${i} )`:n?s=`textureLoad( ${t}, ${i}, ${n}, u32( ${r} ) )`:(s=`textureLoad( ${t}, ${i}, u32( ${r} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(s+=".x")),s}generateTextureStore(e,t,i,n){return`textureStore( ${t}, ${i}, ${n} )`}isSampleCompare(e){return!0===e.isDepthTexture&&null!==e.compareFunction}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===ue||!1===this.isSampleCompare(e)&&e.minFilter===Z&&e.magFilter===Z||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,i,n,r=this.shaderStage){let s=null;return s=!0===e.isVideoTexture?this._generateVideoSample(t,i,r):this.isUnfilterable(e)?this.generateTextureLod(e,t,i,n,"0",r):this._generateTextureSample(e,t,i,n,r),s}generateTextureGrad(e,t,i,n,r,s=this.shaderStage){if("fragment"===s)return`textureSampleGrad( ${t}, ${t}_sampler, ${i},  ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,i,n,r,s=this.shaderStage){if("fragment"===s)return e.isDepthArrayTexture?`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${r}, ${n} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${n} )`}generateTextureLevel(e,t,i,n,r,s=this.shaderStage){let a=null;return a=!0===e.isVideoTexture?this._generateVideoSample(t,i,s):this._generateTextureSampleLevel(e,t,i,n,r,s),a}generateTextureBias(e,t,i,n,r,s=this.shaderStage){if("fragment"===s)return`textureSampleBias( ${t}, ${t}_sampler, ${i}, ${n} )`}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,i=e.type;return"texture"===i||"cubeTexture"===i||"storageTexture"===i||"texture3D"===i?t:"buffer"===i||"storageBuffer"===i||"indirectStorageBuffer"===i?this.isCustomStruct(e)?t:t+".value":e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=hB[e];return void 0!==t?(this._include(t),t):null}getNodeAccess(e,t){return"compute"!==t?Ff.READ_ONLY:e.access}getStorageAccess(e,t){return oB[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,i,n=null){const r=super.getUniformFromNode(e,t,i,n),s=this.getDataFromNode(e,i,this.globalCache);if(void 0===s.uniformGPU){let a;const o=e.groupNode,l=o.name,u=this.getBindGroupArray(l,i);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let n=null;const s=this.getNodeAccess(e,i);if("texture"===t||"storageTexture"===t?n=new sD(r.name,r.node,o,s):"cubeTexture"===t?n=new aD(r.name,r.node,o,s):"texture3D"===t&&(n=new oD(r.name,r.node,o,s)),n.store=!0===e.isStorageTextureNode,n.setVisibility(uB[i]),"fragment"!==i&&"compute"!==i||!1!==this.isUnfilterable(e.value)||!1!==n.store)u.push(n),a=[n];else{const e=new XO(`${r.name}_sampler`,r.node,o);e.setVisibility(uB[i]),u.push(e,n),a=[e,n]}}else if("buffer"===t||"storageBuffer"===t||"indirectStorageBuffer"===t){const s=new("buffer"===t?JI:YO)(e,o);s.setVisibility(uB[i]),u.push(s),a=s,r.name=n||"NodeBuffer_"+r.id}else{const e=this.uniformGroups[i]||(this.uniformGroups[i]={});let n=e[l];void 0===n&&(n=new iD(l,o),n.setVisibility(uB[i]),e[l]=n,u.push(n)),a=this.getNodeUniform(r,t),n.addUniform(a)}s.uniformGPU=a}return r}getBuiltin(e,t,i,n=this.shaderStage){const r=this.builtins[n]||(this.builtins[n]=new Map);return!1===r.has(e)&&r.set(e,{name:e,property:t,type:i}),t}hasBuiltin(e,t=this.shaderStage){return void 0!==this.builtins[t]&&this.builtins[t].has(e)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const s of t.inputs)n.push(s.name+" : "+this.getType(s.type));let r=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {\n${i.vars}\n${i.code}\n`;return i.result&&(r+=`\treturn ${i.result};\n`),r+="\n}\n",r}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],i=this.directives[e];if(void 0!==i)for(const n of i)t.push(`enable ${n};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],i=this.builtins[e];if(void 0!==i)for(const{name:n,property:r,type:s}of i.values())t.push(`@builtin( ${n} ) ${r} : ${s}`);return t.join(",\n\t")}getScopedArray(e,t,i,n){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:i,bufferCount:n}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:i,scope:n,bufferType:r,bufferCount:s}of this.scopedArrays.values()){const e=this.getType(r);t.push(`var<${n}> ${i}: array< ${e}, ${s} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const i=this.getAttributesArray();for(let n=0,r=i.length;n<r;n++){const e=i[n],r=e.name,s=this.getType(e.type);t.push(`@location( ${n} ) ${r} : ${s}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[];for(const i of e.members){const n=e.output?"@location( "+i.index+" ) ":"";let r=this.getType(i.type);i.atomic&&(r="atomic< "+r+" >"),t.push(`\t${n+i.name} : ${r}`)}return e.output&&t.push(`\t${this.getBuiltins("output")}`),t.join(",\n")}getStructs(e){let t="";const i=this.structs[e];if(i.length>0){const e=[];for(const t of i){let i=`struct ${t.name} {\n`;i+=this.getStructMembers(t),i+="\n};",e.push(i)}t="\n"+e.join("\n\n")+"\n"}return t}getVar(e,t,i=null){let n=`var ${t} : `;return n+=null!==i?this.generateArrayDeclaration(e,i):this.getType(e),n}getVars(e){const t=[],i=this.vars[e];if(void 0!==i)for(const n of i)t.push(`\t${this.getVar(n.type,n.name,n.count)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const i=this.varyings,n=this.vars[e];for(let r=0;r<i.length;r++){const s=i[r];if(s.needsInterpolation){let e=`@location( ${r} )`;if(s.interpolationType){const t=null!==s.interpolationSampling?`, ${s.interpolationSampling} )`:" )";e+=` @interpolate( ${s.interpolationType}${t}`}else/^(int|uint|ivec|uvec)/.test(s.type)&&(e+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${e} ${s.name} : ${this.getType(s.type)}`)}else"vertex"===e&&!1===n.includes(s)&&n.push(s)}}const i=this.getBuiltins(e);i&&t.push(i);const n=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+n):n}isCustomStruct(e){const t=e.value,i=e.node,n=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&null!==i.structTypeNode,r=i.value&&i.value.array&&"number"==typeof i.value.itemSize&&i.value.array.length>i.value.itemSize;return n&&!r}getUniforms(e){const t=this.uniforms[e],i=[],n=[],r=[],s={};for(const o of t){const t=o.groupNode.name,r=this.bindingsIndexes[t];if("texture"===o.type||"cubeTexture"===o.type||"storageTexture"===o.type||"texture3D"===o.type){const t=o.node.value;let n;"fragment"!==e&&"compute"!==e||!1!==this.isUnfilterable(t)||!0===o.node.isStorageTextureNode||(this.isSampleCompare(t)?i.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name}_sampler : sampler_comparison;`):i.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name}_sampler : sampler;`));let s="";const{primarySamples:a}=this.renderer.backend.utils.getTextureSampleData(t);if(a>1&&(s="_multisampled"),!0===t.isCubeTexture)n="texture_cube<f32>";else if(!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture||!0===t.isTextureArray)n="texture_2d_array<f32>";else if(!0===t.isDepthTexture)n=this.renderer.backend.compatibilityMode&&null===t.compareFunction?`texture${s}_2d<f32>`:`texture_depth${s}_2d${!0===t.isDepthArrayTexture?"_array":""}`;else if(!0===t.isVideoTexture)n="texture_external";else if(!0===t.isData3DTexture)n="texture_3d<f32>";else if(!0===o.node.isStorageTextureNode){n=`texture_storage_2d<${eB(t)}, ${this.getStorageAccess(o.node,e)}>`}else{n=`texture${s}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}i.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var ${o.name} : ${n};`)}else if("buffer"===o.type||"storageBuffer"===o.type||"indirectStorageBuffer"===o.type){const t=o.node,i=this.getType(t.getNodeType(this)),s=t.bufferCount,a=s>0&&"buffer"===o.type?", "+s:"",l=t.isStorageBufferNode?`storage, ${this.getStorageAccess(t,e)}`:"uniform";if(this.isCustomStruct(o))n.push(`@binding( ${r.binding++} ) @group( ${r.group} ) var<${l}> ${o.name} : ${i};`);else{const e=`\tvalue : array< ${t.isAtomic?`atomic<${i}>`:`${i}`}${a} >`;n.push(this._getWGSLStructBinding(o.name,e,l,r.binding++,r.group))}}else{const e=this.getType(this.getVectorType(o.type)),t=o.groupNode.name;(s[t]||(s[t]={index:r.binding++,id:r.group,snippets:[]})).snippets.push(`\t${o.name} : ${e}`)}}for(const o in s){const e=s[o];r.push(this._getWGSLStructBinding(o,e.snippets.join(",\n"),"uniform",e.index,e.id))}let a=i.join("\n");return a+=n.join("\n"),a+=r.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.structs=this.getStructs(t),i.vars=this.getVars(t),i.codes=this.getCodes(t),i.directives=this.getDirectives(t),i.scopedArrays=this.getScopedArrays(t);let n="// code\n\n";n+=this.flowCode[t];const r=this.flowNodes[t],s=r[r.length-1],a=s.outputNode,o=void 0!==a&&!0===a.isOutputStructNode;for(const e of r){const r=this.getFlowData(e),l=e.name;if(l&&(n.length>0&&(n+="\n"),n+=`\t// flow -> ${l}\n`),n+=`${r.code}\n\t`,e===s&&"compute"!==t)if(n+="// result\n\n\t","vertex"===t)n+=`varyings.Vertex = ${r.result};`;else if("fragment"===t)if(o)i.returnType=a.getNodeType(this),i.structs+="var<private> output : "+i.returnType+";",n+=`return ${r.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",e),i.structs+="\nvar<private> output : OutputStruct;",n+=`output.color = ${r.result};\n\n\treturn output;`}}i.flow=n}this.shaderStage=null,null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let i;return null!==t&&(i=this._getWGSLMethod(e+"_"+t)),void 0===i&&(i=this._getWGSLMethod(e)),i||e}getType(e){return dB[e]||e}isAvailable(e){let t=cB[e];return void 0===t&&("float32Filterable"===e?t=this.renderer.hasFeature("float32-filterable"):"clipDistance"===e&&(t=this.renderer.hasFeature("clip-distances")),cB[e]=t),t}_getWGSLMethod(e){return void 0!==mB[e]&&this._include(e),fB[e]}_include(e){const t=mB[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${gB}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// structs\n${e.structs}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = globalId.x + globalId.y * numWorkgroups.x * u32(${t}) + globalId.z * numWorkgroups.x * numWorkgroups.y * u32(${t});\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,i,n=0,r=0){const s=e+"Struct";return`${this._getWGSLStruct(s,t)}\n@binding( ${n} ) @group( ${r} )\nvar<${i}> ${e} : ${s};`}}class vB{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=HU:e.depth&&(t=GU),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const e=this.backend.renderer,i=e.getRenderTarget();t=i?i.samples:e.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const i=t>1&&null!==e.renderTarget&&!0!==e.isDepthTexture&&!0!==e.isFramebufferTexture;return{samples:t,primarySamples:i?1:t,isMSAA:i}}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?OD:e.isLineSegments||e.isMesh&&!0===t.wireframe?BD:e.isLine?VD:e.isMesh?zD:void 0}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),2===t&&(t=4)),t}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(void 0===e)return navigator.gpu.getPreferredCanvasFormat();if(e===ne)return AU;if(e===ce)return OU;throw new Error("Unsupported outputType")}}const xB=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),yB=new Map([[er,["float16"]]]),bB=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class TB{constructor(e){this.backend=e}createAttribute(e,t){const i=this._getBufferAttribute(e),n=this.backend,r=n.get(i);let s=r.buffer;if(void 0===s){const a=n.device;let o=i.array;if(!1===e.normalized)if(o.constructor===Int16Array||o.constructor===Int8Array)o=new Int32Array(o);else if((o.constructor===Uint16Array||o.constructor===Uint8Array)&&(o=new Uint32Array(o),t&GPUBufferUsage.INDEX))for(let e=0;e<o.length;e++)65535===o[e]&&(o[e]=4294967295);if(i.array=o,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&3===i.itemSize){o=new o.constructor(4*i.count);for(let e=0;e<i.count;e++)o.set(i.array.subarray(3*e,3*e+3),4*e);i.itemSize=4,i.array=o,r._force3to4BytesAlignment=!0}const l=o.byteLength+(4-o.byteLength%4)%4;s=a.createBuffer({label:i.name,size:l,usage:t,mappedAtCreation:!0}),new o.constructor(s.getMappedRange()).set(o),s.unmap(),r.buffer=s}}updateAttribute(e){const t=this._getBufferAttribute(e),i=this.backend,n=i.device,r=i.get(t),s=i.get(t).buffer;let a=t.array;if(!0===r._force3to4BytesAlignment){a=new a.constructor(4*t.count);for(let e=0;e<t.count;e++)a.set(t.array.subarray(3*e,3*e+3),4*e);t.array=a}const o=this._isTypedArray(a),l=t.updateRanges;if(0===l.length)n.queue.writeBuffer(s,0,a,0);else{const e=o?1:a.BYTES_PER_ELEMENT;for(let t=0,i=l.length;t<i;t++){const i=l[t];let u,c;if(!0===r._force3to4BytesAlignment){u=4*Math.floor(i.start/3)*e,c=4*Math.ceil(i.count/3)*e}else u=i.start*e,c=i.count*e;const h=u*(o?a.BYTES_PER_ELEMENT:1);n.queue.writeBuffer(s,h,a,u,c)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),i=new Map;for(let n=0;n<t.length;n++){const e=t[n],r=e.array.BYTES_PER_ELEMENT,s=this._getBufferAttribute(e);let a=i.get(s);if(void 0===a){let t,n;!0===e.isInterleavedBufferAttribute?(t=e.data.stride*r,n=e.data.isInstancedInterleavedBuffer?HO:GO):(t=e.itemSize*r,n=e.isInstancedBufferAttribute?HO:GO),!1!==e.normalized||e.array.constructor!==Int16Array&&e.array.constructor!==Uint16Array||(t=4),a={arrayStride:t,attributes:[],stepMode:n},i.set(s,a)}const o=this._getVertexFormat(e),l=!0===e.isInterleavedBufferAttribute?e.offset*r:0;a.attributes.push({shaderLocation:n,offset:l,format:o})}return Array.from(i.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,i=t.device,n=t.get(this._getBufferAttribute(e)).buffer,r=n.size,s=i.createBuffer({label:`${e.name}_readback`,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=i.createCommandEncoder({label:`readback_encoder_${e.name}`});a.copyBufferToBuffer(n,0,s,0,r);const o=a.finish();i.queue.submit([o]),await s.mapAsync(GPUMapMode.READ);const l=s.getMappedRange(),u=new e.array.constructor(l.slice(0));return s.unmap(),u.buffer}_getVertexFormat(e){const{itemSize:t,normalized:i}=e,n=e.array.constructor,r=e.constructor;let s;if(1===t)s=bB.get(n);else{const e=(yB.get(r)||xB.get(n))[i?1:0];if(e){const i=n.BYTES_PER_ELEMENT*t,r=4*Math.floor((i+3)/4)/n.BYTES_PER_ELEMENT;if(r%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");s=`${e}x${r}`}}return s}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class SB{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,i=t.device,n=[];let r=0;for(const s of e.bindings){const e={binding:r++,visibility:s.visibility};if(s.isUniformBuffer||s.isStorageBuffer){const t={};s.isStorageBuffer&&(4&s.visibility&&(s.access===Ff.READ_WRITE||s.access===Ff.WRITE_ONLY)?t.type=SO:t.type=MO),e.buffer=t}else if(s.isSampler){const i={};s.texture.isDepthTexture&&(null!==s.texture.compareFunction?i.type=CO:t.compatibilityMode&&(i.type=RO)),e.sampler=i}else if(s.isSampledTexture&&s.texture.isVideoTexture)e.externalTexture={};else if(s.isSampledTexture&&s.store){const t={};t.format=this.backend.get(s.texture).texture.format;const i=s.access;t.access=i===Ff.READ_WRITE?AO:i===Ff.WRITE_ONLY?wO:EO,e.storageTexture=t}else if(s.isSampledTexture){const i={},{primarySamples:n}=t.utils.getTextureSampleData(s.texture);if(n>1&&(i.multisampled=!0,s.texture.isDepthTexture||(i.sampleType=PO)),s.texture.isDepthTexture)t.compatibilityMode&&null===s.texture.compareFunction?i.sampleType=PO:i.sampleType=LO;else if(s.texture.isDataTexture||s.texture.isDataArrayTexture||s.texture.isData3DTexture){const e=s.texture.type;e===oe?i.sampleType=IO:e===le?i.sampleType=DO:e===ue&&(this.backend.hasFeature("float32-filterable")?i.sampleType=NO:i.sampleType=PO)}s.isSampledCubeTexture?i.viewDimension=VO:s.texture.isDataArrayTexture||s.texture.isDepthArrayTexture||s.texture.isCompressedArrayTexture?i.viewDimension=BO:s.isSampledTexture3D&&(i.viewDimension=zO),e.texture=i}n.push(e)}return i.createBindGroupLayout({entries:n})}createBindings(e,t,i,n=0){const{backend:r,bindGroupLayoutCache:s}=this,a=r.get(e);let o,l=s.get(e.bindingsReference);void 0===l&&(l=this.createBindingsLayout(e),s.set(e.bindingsReference,l)),i>0&&(void 0===a.groups&&(a.groups=[],a.versions=[]),a.versions[i]===n&&(o=a.groups[i])),void 0===o&&(o=this.createBindGroup(e,l),i>0&&(a.groups[i]=o,a.versions[i]=n)),a.group=o,a.layout=l}updateBinding(e){const t=this.backend,i=t.device,n=e.buffer,r=t.get(e).buffer;i.queue.writeBuffer(r,0,n,0)}createBindGroupIndex(e,t){const i=this.backend.device,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=e[0],s=i.createBuffer({label:"bindingCameraIndex_"+r,size:16,usage:n});i.queue.writeBuffer(s,0,e,0);const a=[{binding:0,resource:{buffer:s}}];return i.createBindGroup({label:"bindGroupCameraIndex_"+r,layout:t,entries:a})}createBindGroup(e,t){const i=this.backend,n=i.device;let r=0;const s=[];for(const a of e.bindings){if(a.isUniformBuffer){const e=i.get(a);if(void 0===e.buffer){const t=a.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=n.createBuffer({label:"bindingBuffer_"+a.name,size:t,usage:i});e.buffer=r}s.push({binding:r,resource:{buffer:e.buffer}})}else if(a.isStorageBuffer){const e=i.get(a);if(void 0===e.buffer){const t=a.attribute;e.buffer=i.get(t).buffer}s.push({binding:r,resource:{buffer:e.buffer}})}else if(a.isSampler){const e=i.get(a.texture);s.push({binding:r,resource:e.sampler})}else if(a.isSampledTexture){const e=i.get(a.texture);let t;if(void 0!==e.externalTexture)t=n.importExternalTexture({source:e.externalTexture});else{const i=a.store?1:e.texture.mipLevelCount,n=`view-${e.texture.width}-${e.texture.height}-${i}`;if(t=e[n],void 0===t){const r=kO;let s;s=a.isSampledCubeTexture?VO:a.isSampledTexture3D?zO:a.texture.isDataArrayTexture||a.texture.isDepthArrayTexture||a.texture.isCompressedArrayTexture?BO:OO,t=e[n]=e.texture.createView({aspect:r,dimension:s,mipLevelCount:i})}}s.push({binding:r,resource:t})}r++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:s})}}class MB{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:i,material:n,geometry:r,pipeline:s}=e,{vertexProgram:a,fragmentProgram:o}=s,l=this.backend,u=l.device,c=l.utils,h=l.get(s),d=[];for(const R of e.getBindings()){const e=l.get(R);d.push(e.layout)}const p=l.attributeUtils.createShaderVertexBuffers(e);let m;0===n.blending||1===n.blending&&!1===n.transparent||(m=this._getBlending(n));let f={};!0===n.stencilWrite&&(f={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const g=this._getColorWriteMask(n),_=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const i=c.getTextureFormatGPU(t[e]);_.push({format:i,blend:m,writeMask:g})}}else{const t=c.getCurrentColorFormat(e.context);_.push({format:t,blend:m,writeMask:g})}const v=l.get(a).module,x=l.get(o).module,y=this._getPrimitiveState(i,r,n),b=this._getDepthCompare(n),T=c.getCurrentDepthStencilFormat(e.context),S=this._getSampleCount(e.context),M={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},v,{buffers:p}),fragment:Object.assign({},x,{targets:_}),primitive:y,multisample:{count:S,alphaToCoverageEnabled:n.alphaToCoverage&&S>1},layout:u.createPipelineLayout({bindGroupLayouts:d})},w={},E=e.context.depth,A=e.context.stencil;if(!0!==E&&!0!==A||(!0===E&&(w.format=T,w.depthWriteEnabled=n.depthWrite,w.depthCompare=b),!0===A&&(w.stencilFront=f,w.stencilBack={},w.stencilReadMask=n.stencilFuncMask,w.stencilWriteMask=n.stencilWriteMask),!0===n.polygonOffset&&(w.depthBias=n.polygonOffsetUnits,w.depthBiasSlopeScale=n.polygonOffsetFactor,w.depthBiasClamp=0),M.depthStencil=w),null===t)h.pipeline=u.createRenderPipeline(M);else{const e=new Promise((e=>{u.createRenderPipelineAsync(M).then((t=>{h.pipeline=t,e()}))}));t.push(e)}}createBundleEncoder(e,t="renderBundleEncoder"){const i=this.backend,{utils:n,device:r}=i,s=n.getCurrentDepthStencilFormat(e),a={label:t,colorFormats:[n.getCurrentColorFormat(e)],depthStencilFormat:s,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(a)}createComputePipeline(e,t){const i=this.backend,n=i.device,r=i.get(e.computeProgram).module,s=i.get(e),a=[];for(const o of t){const e=i.get(o);a.push(e.layout)}s.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,i;const n=e.blending,r=e.blendSrc,s=e.blendDst,a=e.blendEquation;if(5===n){const n=null!==e.blendSrcAlpha?e.blendSrcAlpha:r,o=null!==e.blendDstAlpha?e.blendDstAlpha:s,l=null!==e.blendEquationAlpha?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(s),operation:this._getBlendOperation(a)},i={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(l)}}else{const r=(e,n,r,s)=>{t={srcFactor:e,dstFactor:n,operation:lO},i={srcFactor:r,dstFactor:s,operation:lO}};if(e.premultipliedAlpha)switch(n){case 1:r(KF,eO,KF,eO);break;case 2:r(KF,KF,KF,KF);break;case 3:r(YF,QF,YF,KF);break;case 4:r(YF,ZF,YF,JF)}else switch(n){case 1:r(JF,eO,KF,eO);break;case 2:r(JF,KF,JF,KF);break;case 3:r(YF,QF,YF,KF);break;case 4:r(YF,ZF,YF,ZF)}}if(void 0!==t&&void 0!==i)return{color:t,alpha:i}}_getBlendFactor(e){let t;switch(e){case v:t=YF;break;case 201:t=KF;break;case 202:t=ZF;break;case 203:t=QF;break;case T:t=JF;break;case S:t=eO;break;case 208:t=tO;break;case 209:t=iO;break;case 206:t=nO;break;case 207:t=rO;break;case 210:t=sO;break;case 211:t=aO;break;case 212:t=oO}return t}_getStencilCompare(e){let t;switch(e.stencilFunc){case 512:t=GD;break;case 519:t=YD;break;case 513:t=HD;break;case 515:t=jD;break;case 514:t=WD;break;case 518:t=qD;break;case 516:t=XD;break;case 517:t=$D}return t}_getStencilOperation(e){let t;switch(e){case gt:t=fO;break;case 0:t=gO;break;case 7681:t=_O;break;case 5386:t=vO;break;case 7682:t=xO;break;case 7683:t=yO;break;case 34055:t=bO;break;case 34056:t=TO}return t}_getBlendOperation(e){let t;switch(e){case f:t=lO;break;case 101:t=uO;break;case 102:t=cO;break;case 103:t=hO;break;case 104:t=dO}return t}_getPrimitiveState(e,t,i){const n={},r=this.backend.utils;switch(n.topology=r.getPrimitiveTopology(e,i),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?nU:rU),i.side){case 0:n.frontFace=JD,n.cullMode=iU;break;case 1:n.frontFace=JD,n.cullMode=tU;break;case 2:n.frontFace=JD,n.cullMode=eU}return n}_getColorWriteMask(e){return!0===e.colorWrite?mO:pO}_getDepthCompare(e){let t;if(!1===e.depthTest)t=YD;else{switch(e.depthFunc){case 0:t=GD;break;case 1:t=YD;break;case 2:t=HD;break;case 3:t=jD;break;case 4:t=WD;break;case 5:t=qD;break;case 6:t=XD;break;case 7:t=$D}}return t}}class wB extends DD{constructor(e,t,i=2048){super(i),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const n=8*this.maxQueries;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Yt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||0===this.currentQueryIndex||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if("unmapped"!==this.resultBuffer.mapState)return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,i=8*t;this.currentQueryIndex=0,this.queryOffsets.clear();const n=this.device.createCommandEncoder();n.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),n.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,i);const r=n.finish();if(this.device.queue.submit([r]),"unmapped"!==this.resultBuffer.mapState)return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,i),this.isDisposed)return"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue;const s=new BigUint64Array(this.resultBuffer.getMappedRange(0,i));let a=0;for(const[,o]of e){const e=s[o],t=s[o+1];a+=Number(t-e)/1e6}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return"mapped"===this.resultBuffer.mapState&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){}if(this.resultBuffer&&"mapped"===this.resultBuffer.mapState)try{this.resultBuffer.unmap()}catch(e){}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class EB extends _D{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.compatibilityMode=void 0!==e.compatibilityMode&&e.compatibilityMode,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new vB(this),this.attributeUtils=new TB(this),this.bindingUtils=new SB(this),this.pipelineUtils=new MB(this),this.textureUtils=new JO(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let i;if(void 0===t.device){const e={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},n="undefined"!=typeof navigator?await navigator.gpu.requestAdapter(e):null;if(null===n)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const r=Object.values(WO),s=[];for(const t of r)n.features.has(t)&&s.push(t);const a={requiredFeatures:s,requiredLimits:t.requiredLimits};i=await n.requestDevice(a)}else i=t.device;i.lost.then((t=>{const i={api:"WebGPU",message:t.message||"Unknown reason",reason:t.reason||null,originalEvent:t};e.onDeviceLost(i)}));const n=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=i,this.context=n;const r=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(WO.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return Ct}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()});const i=e.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isDepthArrayTexture&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const i=e.renderTarget,n=this.get(i);let r=n.descriptors;if(void 0===r||n.width!==i.width||n.height!==i.height||n.dimensions!==i.dimensions||n.activeMipmapLevel!==e.activeMipmapLevel||n.activeCubeFace!==e.activeCubeFace||n.samples!==i.samples){r={},n.descriptors=r;const e=()=>{i.removeEventListener("dispose",e),this.delete(i)};!1===i.hasEventListener("dispose",e)&&i.addEventListener("dispose",e)}const s=e.getCacheKey();let a=r[s];if(void 0===a){const t=e.textures,o=[];let l;const u=this._isRenderCameraDepthArray(e);for(let n=0;n<t.length;n++){const r=this.get(t[n]),s={label:`colorAttachment_${n}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:OO};if(i.isRenderTarget3D)l=e.activeCubeFace,s.baseArrayLayer=0,s.dimension=zO,s.depthOrArrayLayers=t[n].image.depth;else if(i.isRenderTargetArray)if(!0===u){const t=e.camera.cameras;for(let e=0;e<t.length;e++){const t={...s,baseArrayLayer:e,arrayLayerCount:1,dimension:OO},i=r.texture.createView(t);o.push({view:i,resolveTarget:void 0,depthSlice:void 0})}}else s.dimension=BO,s.depthOrArrayLayers=t[n].image.depth;if(!0!==u){const e=r.texture.createView(s);let t,i;void 0!==r.msaaTexture?(t=r.msaaTexture.createView(),i=e):(t=e,i=void 0),o.push({view:t,resolveTarget:i,depthSlice:l})}}if(a={textureViews:o},e.depth){const t=this.get(e.depthTexture),i={};e.depthTexture.isDepthArrayTexture&&(i.dimension=OO,i.arrayLayerCount=1,i.baseArrayLayer=e.activeCubeFace),a.depthStencilView=t.texture.createView(i)}r[s]=a,n.width=i.width,n.height=i.height,n.samples=i.samples,n.activeMipmapLevel=e.activeMipmapLevel,n.activeCubeFace=e.activeCubeFace,n.dimensions=i.dimensions}const o={colorAttachments:[]};for(let l=0;l<a.textureViews.length;l++){const e=a.textureViews[l];let i={r:0,g:0,b:0,a:1};0===l&&t.clearValue&&(i=t.clearValue),o.colorAttachments.push({view:e.view,depthSlice:e.depthSlice,resolveTarget:e.resolveTarget,loadOp:t.loadOp||ZD,storeOp:t.storeOp||KD,clearValue:i})}return a.depthStencilView&&(o.depthStencilAttachment={view:a.depthStencilView}),o}beginRender(e){const t=this.get(e),i=this.device,n=e.occlusionQueryCount;let r,s;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=i.createQuerySet({type:"occlusion",count:n,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null),s=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e,{loadOp:ZD}),this.initTimestampQuery(e,s),s.occlusionQuerySet=r;const a=s.depthStencilAttachment;if(null!==e.textures){const t=s.colorAttachments;for(let i=0;i<t.length;i++){const n=t[i];e.clearColor?(n.clearValue=0===i?e.clearColorValue:{r:0,g:0,b:0,a:1},n.loadOp=QD):n.loadOp=ZD,n.storeOp=KD}}else{const t=s.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=QD):t.loadOp=ZD,t.storeOp=KD}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=QD):a.depthLoadOp=ZD,a.depthStoreOp=KD),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=QD):a.stencilLoadOp=ZD,a.stencilStoreOp=KD);const o=i.createCommandEncoder({label:"renderContext_"+e.id});if(!0===this._isRenderCameraDepthArray(e)){const i=e.camera.cameras;t.layerDescriptors&&t.layerDescriptors.length===i.length?this._updateDepthLayerDescriptors(e,t,i):this._createDepthLayerDescriptors(e,t,s,i),t.bundleEncoders=[],t.bundleSets=[];for(let n=0;n<i.length;n++){const i=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+n),r={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(i),t.bundleSets.push(r)}t.currentPass=null}else{const i=o.beginRenderPass(s);if(t.currentPass=i,e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:n,width:r,height:s}=e.scissorValue;i.setScissorRect(t,n,r,s)}}t.descriptor=s,t.encoder=o,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,i,n){const r=i.depthStencilAttachment;t.layerDescriptors=[];const s=this.get(e.depthTexture);s.viewCache||(s.viewCache=[]);for(let a=0;a<n.length;a++){const n={...i,colorAttachments:[{...i.colorAttachments[0],view:i.colorAttachments[a].view}]};if(i.depthStencilAttachment){const t=a;s.viewCache[t]||(s.viewCache[t]=s.texture.createView({dimension:OO,baseArrayLayer:a,arrayLayerCount:1})),n.depthStencilAttachment={view:s.viewCache[t],depthLoadOp:r.depthLoadOp||QD,depthStoreOp:r.depthStoreOp||KD,depthClearValue:r.depthClearValue||1},e.stencil&&(n.depthStencilAttachment.stencilLoadOp=r.stencilLoadOp,n.depthStencilAttachment.stencilStoreOp=r.stencilStoreOp,n.depthStencilAttachment.stencilClearValue=r.stencilClearValue)}else n.depthStencilAttachment={...r};t.layerDescriptors.push(n)}}_updateDepthLayerDescriptors(e,t,i){for(let n=0;n<i.length;n++){const i=t.layerDescriptors[n];if(i.depthStencilAttachment){const t=i.depthStencilAttachment;e.depth&&(e.clearDepth?(t.depthClearValue=e.clearDepthValue,t.depthLoadOp=QD):t.depthLoadOp=ZD),e.stencil&&(e.clearStencil?(t.stencilClearValue=e.clearStencilValue,t.stencilLoadOp=QD):t.stencilLoadOp=ZD)}}}finishRender(e){const t=this.get(e),i=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),i>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const n=t.encoder;if(!0===this._isRenderCameraDepthArray(e)){const i=[];for(let e=0;e<t.bundleEncoders.length;e++){const n=t.bundleEncoders[e];i.push(n.finish())}for(let r=0;r<t.layerDescriptors.length;r++)if(r<i.length){const s=t.layerDescriptors[r],a=n.beginRenderPass(s);if(e.viewport){const{x:t,y:i,width:n,height:r,minDepth:s,maxDepth:o}=e.viewportValue;a.setViewport(t,i,n,r,s,o)}if(e.scissor){const{x:t,y:i,width:n,height:r}=e.scissorValue;a.setScissorRect(t,i,n,r)}a.executeBundles([i[r]]),a.end()}}else t.currentPass&&t.currentPass.end();if(i>0){const n=8*i;let r=this.occludedResolveCache.get(n);void 0===r&&(r=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,r));const s=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,i,r,0),t.encoder.copyBufferToBuffer(r,0,s,0,n),t.occlusionQueryBuffer=s,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const i=t[e];!0===i.generateMipmaps&&this.textureUtils.generateMipmaps(i)}}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const r=i.getMappedRange(),s=new BigUint64Array(r);for(let t=0;t<n.length;t++)s[t]===BigInt(0)&&e.add(n[t]);i.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:i,y:n,width:r,height:s,minDepth:a,maxDepth:o}=e.viewportValue;t.setViewport(i,n,r,s,a,o)}getClearColor(){const e=super.getClearColor();return!0===this.renderer.alpha&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,i,n=null){const r=this.device,s=this.renderer;let a,o,l,u,c=[];if(e){const e=this.getClearColor();o={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===n){l=s.depth,u=s.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){c=t.colorAttachments;const e=c[0];e.clearValue=o,e.loadOp=QD,e.storeOp=KD}(l||u)&&(a=t.depthStencilAttachment)}else{l=n.depth,u=n.stencil;const r={loadOp:e?QD:ZD,clearValue:e?o:void 0};l&&(r.depthLoadOp=t?QD:ZD,r.depthClearValue=t?s.getClearDepth():void 0,r.depthStoreOp=KD),u&&(r.stencilLoadOp=i?QD:ZD,r.stencilClearValue=i?s.getClearStencil():void 0,r.stencilStoreOp=KD);const h=this._getRenderPassDescriptor(n,r);c=h.colorAttachments,a=h.depthStencilAttachment}l&&a&&void 0===a.depthLoadOp&&(t?(a.depthLoadOp=QD,a.depthClearValue=s.getClearDepth(),a.depthStoreOp=KD):(a.depthLoadOp=ZD,a.depthStoreOp=KD)),u&&a&&void 0===a.stencilLoadOp&&(i?(a.stencilLoadOp=QD,a.stencilClearValue=s.getClearStencil(),a.stencilStoreOp=KD):(a.stencilLoadOp=ZD,a.stencilStoreOp=KD));const h=r.createCommandEncoder({label:"clear"});h.beginRenderPass({colorAttachments:c,depthStencilAttachment:a}).end(),r.queue.submit([h.finish()])}beginCompute(e){const t=this.get(e),i={label:"computeGroup_"+e.id};this.initTimestampQuery(e,i),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(i)}compute(e,t,i,n){const{passEncoderGPU:r}=this.get(e),s=this.get(n).pipeline;r.setPipeline(s);for(let u=0,c=i.length;u<c;u++){const e=i[u],t=this.get(e);r.setBindGroup(u,t.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,o=this.get(t);void 0===o.dispatchSize&&(o.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=o;t.dispatchCount>a?(l.x=Math.min(t.dispatchCount,a),l.y=Math.ceil(t.dispatchCount/a)):l.x=t.dispatchCount,r.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:i,material:n,context:r,pipeline:s}=e,a=e.getBindings(),o=this.get(r),l=this.get(s).pipeline,u=e.getIndex(),c=null!==u,h=e.getDrawParameters();if(null===h)return;const d=(t,i)=>{t.setPipeline(l),i.pipeline=l;const s=i.bindingGroups;for(let e=0,n=a.length;e<n;e++){const i=a[e],n=this.get(i);s[i.index]!==i.id&&(t.setBindGroup(i.index,n.group),s[i.index]=i.id)}if(!0===c&&i.index!==u){const e=this.get(u).buffer,n=u.array instanceof Uint16Array?nU:rU;t.setIndexBuffer(e,n),i.index=u}const h=e.getVertexBuffers();for(let e=0,n=h.length;e<n;e++){const n=h[e];if(i.attributes[e]!==n){const r=this.get(n).buffer;t.setVertexBuffer(e,r),i.attributes[e]=n}}!0===r.stencil&&!0===n.stencilWrite&&o.currentStencilRef!==n.stencilRef&&(t.setStencilReference(n.stencilRef),o.currentStencilRef=n.stencilRef)},p=(n,r)=>{if(d(n,r),!0===i.isBatchedMesh){const e=i._multiDrawStarts,r=i._multiDrawCounts,s=i._multiDrawCount,a=i._multiDrawInstances;null!==a&&Yt("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let o=0;o<s;o++){const s=a?a[o]:1,l=s>1?0:o;!0===c?n.drawIndexed(r[o],s,e[o]/u.array.BYTES_PER_ELEMENT,0,l):n.draw(r[o],s,e[o],l),t.update(i,r[o],s)}}else if(!0===c){const{vertexCount:r,instanceCount:s,firstVertex:a}=h,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;n.drawIndexedIndirect(e,0)}else n.drawIndexed(r,s,a,0,0);t.update(i,r,s)}else{const{vertexCount:r,instanceCount:s,firstVertex:a}=h,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;n.drawIndirect(e,0)}else n.draw(r,s,a,0);t.update(i,r,s)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const t=this.get(e.camera),n=e.camera.cameras,s=e.getBindingGroup("cameraIndex");if(void 0===t.indexesGPU||t.indexesGPU.length!==n.length){const e=this.get(s),i=[],r=new Uint32Array([0,0,0,0]);for(let t=0,s=n.length;t<s;t++){r[0]=t;const n=this.bindingUtils.createBindGroupIndex(r,e.layout);i.push(n)}t.indexesGPU=i}const a=this.renderer.getPixelRatio();for(let e=0,l=n.length;e<l;e++){const l=n[e];if(i.layers.test(l.layers)){const i=l.viewport;let n=o.currentPass,u=o.currentSets;if(o.bundleEncoders){n=o.bundleEncoders[e],u=o.bundleSets[e]}i&&n.setViewport(Math.floor(i.x*a),Math.floor(i.y*a),Math.floor(i.width*a),Math.floor(i.height*a),r.viewportValue.minDepth,r.viewportValue.maxDepth),s&&t.indexesGPU&&(n.setBindGroup(s.index,t.indexesGPU[e]),u.bindingGroups[s.index]=s.id),p(n,u)}}}else if(o.currentPass){if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==i&&(null!==e&&!0===e.occlusionTest&&(o.currentPass.endOcclusionQuery(),o.occlusionQueryIndex++),!0===i.occlusionTest&&(o.currentPass.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=i),o.lastOcclusionObject=i)}p(o.currentPass,o.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:i,material:n}=e,r=this.utils,s=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),o=r.getCurrentColorFormat(e.context),l=r.getCurrentDepthStencilFormat(e.context),u=r.getPrimitiveTopology(i,n);let c=!1;return t.material===n&&t.materialVersion===n.version&&t.transparent===n.transparent&&t.blending===n.blending&&t.premultipliedAlpha===n.premultipliedAlpha&&t.blendSrc===n.blendSrc&&t.blendDst===n.blendDst&&t.blendEquation===n.blendEquation&&t.blendSrcAlpha===n.blendSrcAlpha&&t.blendDstAlpha===n.blendDstAlpha&&t.blendEquationAlpha===n.blendEquationAlpha&&t.colorWrite===n.colorWrite&&t.depthWrite===n.depthWrite&&t.depthTest===n.depthTest&&t.depthFunc===n.depthFunc&&t.stencilWrite===n.stencilWrite&&t.stencilFunc===n.stencilFunc&&t.stencilFail===n.stencilFail&&t.stencilZFail===n.stencilZFail&&t.stencilZPass===n.stencilZPass&&t.stencilFuncMask===n.stencilFuncMask&&t.stencilWriteMask===n.stencilWriteMask&&t.side===n.side&&t.alphaToCoverage===n.alphaToCoverage&&t.sampleCount===s&&t.colorSpace===a&&t.colorFormat===o&&t.depthStencilFormat===l&&t.primitiveTopology===u&&t.clippingContextCacheKey===e.clippingContextCacheKey||(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=s,t.colorSpace=a,t.colorFormat=o,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,c=!0),c}getRenderCacheKey(e){const{object:t,material:i}=e,n=this.utils,r=e.context;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,n.getSampleCountRenderContext(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(t,i),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,i,n,r,s){return this.textureUtils.copyTextureToBuffer(e,t,i,n,r,s)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const i=e.isComputeNode?"compute":"render";this.timestampQueryPool[i]||(this.timestampQueryPool[i]=new wB(this.device,i,2048));const n=this.timestampQueryPool[i],r=n.allocateQueriesForContext(e);t.timestampWrites={querySet:n.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new _B(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage+(""!==e.name?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const i=this.get(e),n=i.currentPass.finish();this.get(t).bundleGPU=n,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,i,n){this.bindingUtils.createBindings(e,t,i,n)}updateBindings(e,t,i,n){this.bindingUtils.createBindings(e,t,i,n)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,i=null,n=null,r=0,s=0){let a=0,o=0,l=0,u=0,c=0,h=0,d=e.image.width,p=e.image.height,m=1;null!==i&&(!0===i.isBox3?(u=i.min.x,c=i.min.y,h=i.min.z,d=i.max.x-i.min.x,p=i.max.y-i.min.y,m=i.max.z-i.min.z):(u=i.min.x,c=i.min.y,d=i.max.x-i.min.x,p=i.max.y-i.min.y,m=1)),null!==n&&(a=n.x,o=n.y,l=n.z||0);const f=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,_=this.get(t).texture;f.copyTextureToTexture({texture:g,mipLevel:r,origin:{x:u,y:c,z:h}},{texture:_,mipLevel:s,origin:{x:a,y:o,z:l}},[d,p,m]),this.device.queue.submit([f.finish()]),0===s&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,i){const n=this.get(t);let r=null;r=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const s=this.get(e).texture;if(r.format!==s.format)return;let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[i.x,i.y,0]},{texture:s},[i.z,i.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),n.currentPass){const{descriptor:e}=n;for(let t=0;t<e.colorAttachments.length;t++)e.colorAttachments[t].loadOp=ZD;if(t.depth&&(e.depthStencilAttachment.depthLoadOp=ZD),t.stencil&&(e.depthStencilAttachment.stencilLoadOp=ZD),n.currentPass=a.beginRenderPass(e),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:e,y:i,width:r,height:s}=t.scissorValue;n.currentPass.setScissorRect(e,i,r,s)}}else this.device.queue.submit([a.finish()])}}class AB extends Ml{constructor(e,t,i,n,r,s){super(e,t,i,n,r,s),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class RB extends AI{constructor(){super(),this.addMaterial(gw,"MeshPhongMaterial"),this.addMaterial(nA,"MeshStandardMaterial"),this.addMaterial(sA,"MeshPhysicalMaterial"),this.addMaterial(uA,"MeshToonMaterial"),this.addMaterial(ow,"MeshBasicMaterial"),this.addMaterial(mw,"MeshLambertMaterial"),this.addMaterial($M,"MeshNormalMaterial"),this.addMaterial(pA,"MeshMatcapMaterial"),this.addMaterial(VM,"LineBasicMaterial"),this.addMaterial(kM,"LineDashedMaterial"),this.addMaterial(xA,"PointsMaterial"),this.addMaterial(_A,"SpriteMaterial"),this.addMaterial(TA,"ShadowMaterial"),this.addLight(AP,Cl),this.addLight(tI,Ll),this.addLight(sI,Dl),this.addLight(aI,Ml),this.addLight(lI,Il),this.addLight(uI,vl),this.addLight(cI,Fl),this.addLight(oI,AB),this.addToneMapping(YC,1),this.addToneMapping(KC,2),this.addToneMapping(ZC,3),this.addToneMapping(JC,4),this.addToneMapping(nN,6),this.addToneMapping(rN,7)}}class CB extends qI{constructor(e={}){let t;e.forceWebGL?t=FD:(t=EB,e.getFallback=()=>new FD(e));super(new t(e),e),this.library=new RB,this.isWebGPURenderer=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}class NB{constructor(e,t=e_(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0;const i=new OM;i.name="PostProcessing",this._quadMesh=new nC(i)}render(){this._update();const e=this.renderer,t=e.toneMapping,i=e.outputColorSpace;e.toneMapping=0,e.outputColorSpace=pt;const n=e.xr.enabled;e.xr.enabled=!1,this._quadMesh.render(e),e.xr.enabled=n,e.toneMapping=t,e.outputColorSpace=i}dispose(){this._quadMesh.material.dispose()}_update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,i=e.outputColorSpace;this._quadMesh.material.fragmentNode=!0===this.outputColorTransform?Uy(this.outputNode,t,i):this.outputNode.context({toneMapping:t,outputColorSpace:i}),this._quadMesh.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this._update();const e=this.renderer,t=e.toneMapping,i=e.outputColorSpace;e.toneMapping=0,e.outputColorSpace=pt;const n=e.xr.enabled;e.xr.enabled=!1,await this._quadMesh.renderAsync(e),e.xr.enabled=n,e.toneMapping=t,e.outputColorSpace=i}}
/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */vL.BRDF_GGX,vL.BRDF_Lambert,vL.BasicShadowFilter,vL.Break,vL.Continue,vL.DFGApprox,vL.D_GGX,vL.Discard,vL.EPSILON,vL.F_Schlick;const PB=vL.Fn;vL.INFINITY,vL.If,vL.Switch;const LB=vL.Loop;vL.NodeShaderStage,vL.NodeType,vL.NodeUpdateType,vL.NodeAccess,vL.PCFShadowFilter,vL.PCFSoftShadowFilter;const IB=vL.PI;vL.PI2,vL.Return,vL.Schlick_to_F0,vL.ScriptableNodeResources,vL.ShaderNode,vL.TBNViewMatrix,vL.VSMShadowFilter,vL.V_GGX_SmithCorrelated;const DB=vL.abs;vL.acesFilmicToneMapping,vL.acos,vL.add,vL.addNodeElement,vL.agxToneMapping,vL.all,vL.alphaT,vL.and,vL.anisotropy,vL.anisotropyB,vL.anisotropyT,vL.any,vL.append,vL.array,vL.arrayBuffer,vL.asin,vL.assign,vL.atan,vL.atan2,vL.atomicAdd,vL.atomicAnd,vL.atomicFunc,vL.atomicMax,vL.atomicMin,vL.atomicOr,vL.atomicStore,vL.atomicSub,vL.atomicXor,vL.atomicLoad,vL.attenuationColor,vL.attenuationDistance;const UB=vL.attribute;vL.attributeArray,vL.backgroundBlurriness,vL.backgroundIntensity,vL.backgroundRotation,vL.batch,vL.billboarding,vL.bitAnd,vL.bitNot,vL.bitOr,vL.bitXor,vL.bitangentGeometry,vL.bitangentLocal,vL.bitangentView,vL.bitangentWorld,vL.bitcast,vL.blendBurn,vL.blendColor,vL.blendDodge,vL.blendOverlay,vL.blendScreen,vL.blur,vL.bool,vL.buffer,vL.bufferAttribute,vL.bumpMap,vL.burn,vL.bvec2,vL.bvec3,vL.bvec4,vL.bypass,vL.cache,vL.call,vL.cameraFar,vL.cameraIndex,vL.cameraNear,vL.cameraNormalMatrix;const FB=vL.cameraPosition,OB=vL.cameraProjectionMatrix;vL.cameraProjectionMatrixInverse;const BB=vL.cameraViewMatrix;vL.cameraWorldMatrix,vL.cbrt,vL.cdl,vL.ceil,vL.checker,vL.cineonToneMapping,vL.clamp,vL.clearcoat,vL.clearcoatRoughness,vL.code;const VB=vL.color;vL.colorSpaceToWorking,vL.colorToDirection,vL.compute,vL.computeSkinning,vL.cond,vL.Const,vL.context,vL.convert,vL.convertColorSpace,vL.convertToTexture;const zB=vL.cos;vL.cross,vL.cubeTexture,vL.dFdx,vL.dFdy,vL.dashSize,vL.debug,vL.decrement,vL.decrementBefore,vL.defaultBuildStages,vL.defaultShaderStages,vL.defined,vL.degrees,vL.deltaTime,vL.densityFog,vL.densityFogFactor,vL.depth,vL.depthPass,vL.difference,vL.diffuseColor,vL.directPointLight,vL.directionToColor,vL.dispersion,vL.distance,vL.div,vL.dodge;const kB=vL.dot;vL.drawIndex,vL.dynamicBufferAttribute,vL.element,vL.emissive,vL.equal,vL.equals,vL.equirectUV,vL.exp,vL.exp2,vL.expression,vL.faceDirection,vL.faceForward,vL.faceforward;const GB=vL.float,HB=vL.floor;vL.fog;const WB=vL.fract;vL.frameGroup,vL.frameId,vL.frontFacing,vL.fwidth,vL.gain,vL.gapSize,vL.getConstNodeType,vL.getCurrentStack,vL.getDirection,vL.getDistanceAttenuation,vL.getGeometryRoughness,vL.getNormalFromDepth,vL.getParallaxCorrectNormal,vL.getRoughness,vL.getScreenPosition,vL.getShIrradianceAt,vL.getTextureIndex,vL.getViewPosition,vL.getShadowMaterial,vL.getShadowRenderObjectFunction,vL.glsl,vL.glslFn,vL.grayscale,vL.greaterThan,vL.greaterThanEqual,vL.hash,vL.highpModelNormalViewMatrix,vL.highpModelViewMatrix,vL.hue,vL.increment,vL.incrementBefore,vL.instance,vL.instanceIndex,vL.instancedArray,vL.instancedBufferAttribute,vL.instancedDynamicBufferAttribute,vL.instancedMesh,vL.int,vL.inverseSqrt,vL.inversesqrt,vL.invocationLocalIndex,vL.invocationSubgroupIndex,vL.ior,vL.iridescence,vL.iridescenceIOR,vL.iridescenceThickness,vL.ivec2,vL.ivec3,vL.ivec4,vL.js,vL.label;const jB=vL.length;vL.lengthSq,vL.lessThan,vL.lessThanEqual,vL.lightPosition,vL.lightShadowMatrix,vL.lightTargetDirection,vL.lightTargetPosition,vL.lightViewPosition,vL.lightingContext,vL.lights,vL.linearDepth,vL.linearToneMapping,vL.localId,vL.globalId,vL.log,vL.log2,vL.logarithmicDepthToViewZ,vL.loop,vL.luminance,vL.mediumpModelViewMatrix,vL.mat2,vL.mat3,vL.mat4,vL.matcapUV,vL.materialAO,vL.materialAlphaTest,vL.materialAnisotropy,vL.materialAnisotropyVector,vL.materialAttenuationColor,vL.materialAttenuationDistance,vL.materialClearcoat,vL.materialClearcoatNormal,vL.materialClearcoatRoughness,vL.materialColor,vL.materialDispersion,vL.materialEmissive,vL.materialIOR,vL.materialIridescence,vL.materialIridescenceIOR,vL.materialIridescenceThickness,vL.materialLightMap,vL.materialLineDashOffset,vL.materialLineDashSize,vL.materialLineGapSize,vL.materialLineScale,vL.materialLineWidth,vL.materialMetalness,vL.materialNormal,vL.materialOpacity,vL.materialPointSize,vL.materialReference,vL.materialReflectivity,vL.materialRefractionRatio,vL.materialRotation,vL.materialRoughness,vL.materialSheen,vL.materialSheenRoughness,vL.materialShininess,vL.materialSpecular,vL.materialSpecularColor,vL.materialSpecularIntensity,vL.materialSpecularStrength,vL.materialThickness,vL.materialTransmission;const XB=vL.max;vL.maxMipLevel,vL.metalness,vL.min;const $B=vL.mix;vL.mixElement,vL.mod,vL.modInt,vL.modelDirection,vL.modelNormalMatrix,vL.modelPosition,vL.modelRadius,vL.modelScale,vL.modelViewMatrix,vL.modelViewPosition,vL.modelViewProjection;const qB=vL.modelWorldMatrix;vL.modelWorldMatrixInverse,vL.morphReference,vL.mrt,vL.mul,vL.mx_aastep,vL.mx_cell_noise_float,vL.mx_contrast,vL.mx_fractal_noise_float,vL.mx_fractal_noise_vec2,vL.mx_fractal_noise_vec3,vL.mx_fractal_noise_vec4,vL.mx_hsvtorgb;const YB=vL.mx_noise_float;vL.mx_noise_vec3,vL.mx_noise_vec4,vL.mx_ramplr,vL.mx_ramptb,vL.mx_rgbtohsv,vL.mx_safepower,vL.mx_splitlr,vL.mx_splittb,vL.mx_srgb_texture_to_lin_rec709,vL.mx_transform_uv,vL.mx_worley_noise_float,vL.mx_worley_noise_vec2,vL.mx_worley_noise_vec3,vL.negate,vL.neutralToneMapping,vL.nodeArray,vL.nodeImmutable,vL.nodeObject,vL.nodeObjects,vL.nodeProxy,vL.normalFlat,vL.normalGeometry,vL.normalLocal,vL.normalMap,vL.normalView;const KB=vL.normalWorld,ZB=vL.normalize;vL.not,vL.notEqual,vL.numWorkgroups,vL.objectDirection,vL.objectGroup,vL.objectPosition,vL.objectRadius,vL.objectScale,vL.objectViewPosition,vL.objectWorldMatrix,vL.oneMinus,vL.or,vL.orthographicDepthToViewZ,vL.oscSawtooth,vL.oscSine,vL.oscSquare,vL.oscTriangle,vL.output,vL.outputStruct,vL.overlay,vL.overloadingFn,vL.parabola,vL.parallaxDirection,vL.parallaxUV,vL.parameter;const QB=vL.pass;vL.passTexture,vL.pcurve,vL.perspectiveDepthToViewZ,vL.pmremTexture,vL.pointUV,vL.pointWidth,vL.positionGeometry;const JB=vL.positionLocal;vL.positionPrevious,vL.positionView,vL.positionViewDirection;const eV=vL.positionWorld;vL.positionWorldDirection,vL.posterize;const tV=vL.pow;vL.pow2,vL.pow3,vL.pow4,vL.property,vL.radians,vL.rand,vL.range,vL.rangeFog,vL.rangeFogFactor,vL.reciprocal,vL.lightProjectionUV,vL.reference,vL.referenceBuffer,vL.reflect,vL.reflectVector,vL.reflectView,vL.reflector;const iV=vL.refract;vL.refractVector,vL.refractView,vL.reinhardToneMapping,vL.remainder;const nV=vL.remap;vL.remapClamp,vL.renderGroup,vL.renderOutput,vL.rendererReference,vL.rotate,vL.rotateUV,vL.roughness,vL.round,vL.rtt,vL.sRGBTransferEOTF,vL.sRGBTransferOETF,vL.sampler,vL.samplerComparison,vL.saturate,vL.saturation,vL.screen,vL.screenCoordinate,vL.screenSize;const rV=vL.screenUV;vL.scriptable,vL.scriptableValue,vL.select,vL.setCurrentStack,vL.shaderStages,vL.shadow,vL.pointShadow,vL.shadowPositionWorld,vL.sharedUniformGroup,vL.shapeCircle,vL.sheen,vL.sheenRoughness,vL.shiftLeft,vL.shiftRight,vL.shininess;const sV=vL.sign,aV=vL.sin;vL.sinc,vL.skinning;const oV=vL.smoothstep;vL.smoothstepElement,vL.specularColor,vL.specularF90,vL.spherizeUV,vL.split,vL.spritesheetUV,vL.sqrt,vL.stack;const lV=vL.step;vL.storage,vL.storageBarrier,vL.storageObject,vL.storageTexture,vL.string,vL.struct,vL.sub,vL.subgroupIndex,vL.subgroupSize,vL.tan,vL.tangentGeometry,vL.tangentLocal,vL.tangentView,vL.tangentWorld,vL.temp;const uV=vL.texture;vL.texture3D,vL.textureBarrier,vL.textureBicubic,vL.textureCubeUV,vL.textureLoad,vL.textureSize,vL.textureStore,vL.thickness,vL.threshold,vL.time,vL.timerDelta,vL.timerGlobal,vL.timerLocal,vL.toOutputColorSpace,vL.toWorkingColorSpace,vL.toneMapping,vL.toneMappingExposure,vL.toonOutlinePass,vL.transformDirection,vL.transformNormal,vL.transformNormalToView,vL.transformedBentNormalView,vL.transformedBitangentView,vL.transformedBitangentWorld,vL.transformedClearcoatNormalView,vL.transformedNormalView,vL.transformedNormalWorld,vL.transformedTangentView,vL.transformedTangentWorld,vL.transmission,vL.transpose,vL.tri,vL.tri3,vL.triNoise3D,vL.triplanarTexture,vL.triplanarTextures,vL.trunc,vL.tslFn,vL.uint;const cV=vL.uniform,hV=vL.uniformArray;vL.uniformGroup,vL.uniforms,vL.userData;const dV=vL.uv;vL.uvec2,vL.uvec3,vL.uvec4,vL.Var,vL.varying,vL.varyingProperty;const pV=vL.vec2;vL.vec3;const mV=vL.vec4;vL.vectorComponents,vL.velocity,vL.vertexColor,vL.vertexIndex,vL.vibrance,vL.viewZToLogarithmicDepth,vL.viewZToOrthographicDepth,vL.viewZToPerspectiveDepth,vL.viewport,vL.viewportBottomLeft,vL.viewportCoordinate,vL.viewportDepthTexture,vL.viewportLinearDepth,vL.viewportMipTexture,vL.viewportResolution,vL.viewportSafeUV,vL.viewportSharedTexture,vL.viewportSize,vL.viewportTexture,vL.viewportTopLeft,vL.viewportUV,vL.wgsl,vL.wgslFn,vL.workgroupArray,vL.workgroupBarrier,vL.workgroupId,vL.workingToColorSpace,vL.xor;export{Zm as $,m as A,Sr as B,Bn as C,p as D,ia as E,Ro as F,Br as G,Bo as H,Ps as I,tn as J,Pm as K,Oa as L,Gn as M,Us as N,xn as O,wo as P,Gr as Q,du as R,Rr as S,gl as T,Ud as U,Gt as V,hi as W,Sa as X,ea as Y,jm as Z,t as _,fi as a,Qn as a$,Wm as a0,Gm as a1,mi as a2,_d as a3,c as a4,ff as a5,Il as a6,yu as a7,Vm as a8,Qm as a9,h as aA,ji as aB,Ar as aC,Bu as aD,_a as aE,ce as aF,kl as aG,Yl as aH,Kl as aI,Zl as aJ,Nl as aK,ee as aL,vi as aM,Nu as aN,xu as aO,Va as aP,il as aQ,rl as aR,el as aS,sl as aT,nt as aU,ua as aV,dt as aW,Jm as aX,Z as aY,Mo as aZ,d as a_,nn as aa,Or as ab,Ur as ac,Om as ad,Ym as ae,kt as af,j as ag,fa as ah,Im as ai,Co as aj,Cm as ak,ma as al,tr as am,kr as an,wu as ao,vl as ap,Dl as aq,Pu as ar,Hl as as,up as at,bu as au,qd as av,cp as aw,ha as ax,as as ay,Xr as az,br as b,vs as b0,Ts as b1,Zo as b2,Ss as b3,Fm as b4,Mp as b5,k as b6,oc as b7,_e as b8,ue as b9,ow as bA,qB as bB,jB as bC,NB as bD,QB as bE,sV as bF,DB as bG,rV as bH,YB as bI,IB as bJ,zB as bK,aV as bL,ZB as bM,FB as bN,eV as bO,iV as bP,KB as bQ,OB as bR,BB as bS,XB as bT,kB as bU,nV as bV,xs as ba,Wa as bb,Eo as bc,Bs as bd,OM as be,UB as bf,uV as bg,VB as bh,PB as bi,tV as bj,pV as bk,dV as bl,HB as bm,$B as bn,lV as bo,CB as bp,cV as bq,Rm as br,sA as bs,WB as bt,hV as bu,mV as bv,oV as bw,GB as bx,LB as by,JB as bz,ur as c,Zn as d,q as e,Do as f,Ll as g,Io as h,Ml as i,ga as j,Cl as k,oa as l,ui as m,Ao as n,Ap as o,Sp as p,_s as q,Uo as r,lu as s,Ga as t,No as u,Ir as v,Ru as w,Pa as x,Ks as y,Gs as z};
