var t=Object.defineProperty,e=(e,n,i)=>((e,n,i)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i)(e,"symbol"!=typeof n?n+"":n,i);import{B as n}from"./base-Vw92jU6n.js";import{C as i,B as a,n as s,V as o,r,u as l,A as h,P as c}from"./three-CO0a1xEL.js";import{d,z as m,A as p,g as v,j as u,F as f,o as g}from"./@vue-B4sUqkWa.js";const M=d({__name:"XingKongView",setup(t){const d=new class extends n{constructor(){super(),e(this,"positions",[]),e(this,"particles")}load(){this.init("#webgl"),this.animate(),this.create(),this.scene.background=new i(3355443)}create(){var t;const e=new a;this.positions=[];const n=[],i=[],d=5e5;(new s).load("./models/gltf/Michelle.glb",(t=>{t.scene}));for(let a=0;a<25e5;a++){const t=Math.random()*Math.PI*2,e=Math.acos(2*Math.random()-1),s=(.9*Math.random()+.1)*Math.PI*.1,r=.9*Math.random()+.1;i.push(t,e,s,5*r);const l=5*Math.random()+95;if(a<d){const{x:t,y:e,z:i}=(new o).randomDirection().multiplyScalar(l);this.positions.push(t,e,i),n.push(10*Math.random()+5.5)}else{const t=100,e=400,i=Math.pow(Math.random(),1.5),a=Math.sqrt(e*e*i+(1-i)*t*t),{x:s,y:r,z:l}=(new o).setFromCylindricalCoords(a,2*Math.random()*Math.PI,2*(Math.random()-.5));this.positions.push(s,r*Math.random()*10,l),n.push(10*Math.random()+2.5)}}e.setAttribute("position",new r(this.positions,3)),e.setAttribute("aSize",new r(n,1)),e.setAttribute("aShift",new r(i,4));const m=new l({transparent:!0,blending:h,depthTest:!1,uniforms:{uTime:{value:0}},vertexShader:"\n        attribute float aSize;\n        attribute vec4 aShift;\n\n        uniform float uTime;\n\n        varying vec2 vUv;\n        varying vec3 vColor;\n\n        const float PI = 3.1415925;\n\n        void main() {\n          vUv = uv;\n\n          vec3 color1 = vec3(227., 155., 0.);\n          vec3 color2 = vec3(100., 50., 255.);\n          float d = length(abs(position) / vec3(400.,100.,400.));\n          d = clamp(d,0.,1.);\n          vColor = mix(color1,color2,d)/255.0;\n\n          vec3 transformed = position;\n          float theta = mod(aShift.x + aShift.z * uTime, PI * 2.0);\n          float phi = mod(aShift.y + aShift.z * uTime, PI * 2.0);\n          transformed += vec3(sin(theta) * cos(phi), cos(phi), sin(theta) * cos(phi)) * aShift.w;\n\n          vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.0);\n\n          gl_PointSize = aSize * 50.0 / -mvPosition.z;\n\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        varying vec3 vColor;\n\n        void main() {\n          float d = length(gl_PointCoord - 0.5);\n\n          if(d > 0.5) discard;\n\n          gl_FragColor = vec4(vColor, smoothstep(0.5,0.1,d));\n        }\n      "});this.particles=new c(e,m),this.particles.onBeforeRender=()=>{m.uniforms.uTime.value+=.1},this.particles.rotation.order="ZYX",this.particles.rotation.z=.2,null==(t=this.scene)||t.add(this.particles)}update(){for(let t=0;t<this.positions.length;t++)this.positions[t]=100*Math.random();this.particles&&(this.particles.geometry.attributes.position.needsUpdate=!0)}animate(){var t,e;null==(t=this.stats)||t.begin(),requestAnimationFrame((()=>{this.animate()})),this.renderer&&this.renderer.render(this.scene,this.camera),this.particles&&(this.particles.rotation.y+=.001),null==(e=this.stats)||e.end()}};return m((()=>{d.load()})),p((()=>{d.gui.close(),d.gui.destroy()})),(t,e)=>(g(),v(f,null,[e[0]||(e[0]=u("div",{id:"webgl"},null,-1)),e[1]||(e[1]=u("div",{class:"title-name"},"星空",-1))],64))}});export{M as default};
