var e=Object.defineProperty,t=(t,n,a)=>((t,n,a)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[n]=a)(t,"symbol"!=typeof n?n+"":n,a);import{B as n}from"./base-HDikCi6F.js";import{g as a,o as s}from"./modelLoader-CZEJVq38.js";import{d as i,g as o,j as r,k as l,l as h,F as c,o as u}from"./@vue-H0c_gk4m.js";import{C as m,N as d,a as v,aN as f,P as g,b as p,M as w,aO as y,c as P,d as b,am as M,S,l as x}from"./three-BHpSmIVb.js";const C=i({__name:"SpaceTravelView",setup(e){const i=new class extends n{constructor(){super(),t(this,"positions",[]),t(this,"particles"),t(this,"particlesMesh")}load(){this.init("#webgl"),this.animate(),this.scene.background=new m(3355443),this.renderer.localClippingEnabled=!0,this.light({type:"AmbientLight",x:0,y:200,z:100}),this.loadModel()}loadModel(){var e;const t=new d(new v(1,0,0),0),n=new d(new v(0,1,0),0),i=new d(new v(0,-1,0),0);null==(e=this.scene)||e.add(new f(t,100,16777215));const o=new g(100,50),r=new p(o,new w({color:16777215}));r.rotateX(-Math.PI/2),a("./models/gltf/Michelle.glb").then((e=>{var a;const s=e.scene;s.scale.set(50,50,50),null==(a=this.scene)||a.add(s);const o={uPosY:{value:0},uColor:{value:new m(16776960)}};s.traverse((e=>{if(e instanceof p){e.material.clippingPlanes=[t];const{max:a,min:l}=e.geometry.boundingBox,h=a.y-l.y;s.scale.y;this.gui.add(o.uPosY,"value",0,h,.01).name("剪切高度").onChange((a=>{o.uPosY.value=a,t.constant=-a*s.scale.y,i.constant=a*s.scale.y,r.position.y=a*s.scale.y,n.constant=-a,this.createParticles(e.geometry.attributes.position.array,a,e.geometry.index.array,n,s.scale.y,o.uColor.value)})),this.gui.addColor(o.uColor,"value").name("剪切颜色").onChange((e=>{o.uColor.value=e})),e.material.onBeforeCompile=e=>{Object.assign(e.uniforms,o),e.vertexShader=`\n            varying vec2 vUv;\n            varying float vPostionY;\n            ${e.vertexShader}\n            `,e.vertexShader=e.vertexShader.replace("#include <fog_vertex>","\n            #include <fog_vertex>\n                vUv = uv;\n                vPostionY = position.y;\n            "),e.fragmentShader=`\n            uniform float uPosY;\n            uniform vec3 uColor;\n            varying vec2 vUv;\n            varying float vPostionY;\n\n\n            ${e.fragmentShader}\n            `,e.fragmentShader=e.fragmentShader.replace("#include <dithering_fragment>","#include <dithering_fragment>\n                \n\n                if(vPostionY > uPosY && vPostionY <= uPosY + 0.1){\n                    gl_FragColor.rgb = mix(uColor, gl_FragColor.rgb, smoothstep(0.0,0.5,(vPostionY- uPosY) / 0.1));\n                }\n                \n              ")}}}))})),s("./models/obj/male02/male02.obj").then((e=>{var t;const n=e;n.scale.set(.45,.45,.45),null==(t=this.scene)||t.add(n),this.gui.add(n,"visible").name("模型2显示"),n.traverse((e=>{e instanceof p&&(e.material.clippingPlanes=[i])}))}))}createParticles(e,t,n,a,s,i=new m(16776960)){var o,r;this.particlesMesh&&(null==(o=this.scene)||o.remove(this.particlesMesh));const l=e,h=[];for(let m=0;m<n.length;m+=3){const e=(new v).fromArray(l,3*n[m]),t=(new v).fromArray(l,3*n[m+1]),s=(new v).fromArray(l,3*n[m+2]),i=new y(e,t),o=new y(t,s),r=new y(s,e),c=a.intersectLine(i,new v),u=a.intersectLine(o,new v),d=a.intersectLine(r,new v);c&&h.push(c),u&&h.push(u),d&&h.push(d)}const c=new P,u=new Float32Array(20*h.length*3);c.setAttribute("position",new b(u,3));const d=[];for(let m=0;m<h.length;m++)for(let e=0;e<20;e++){u[3*m*e+0]=h[m].x+.05*Math.random()-.025,u[3*m*e+1]=h[m].y-.05,u[3*m*e+2]=h[m].z+.05*Math.random()-.025;const t=Math.random()*Math.PI*2,n=Math.acos(.2*Math.random()-.1),a=(.9*Math.random()+.1)*Math.PI*1,s=.9*Math.random()+.1;d.push(t,n,a,15*s)}c.setAttribute("aShift",new M(d,4)),c.attributes.aShift.needsUpdate=!0;const f=new S({uniforms:{uTime:{value:0},uColor:{value:i},uHeight:{value:t}},transparent:!0,vertexShader:"\n            uniform float uTime;\n            uniform float uHeight;\n            attribute vec4 aShift;\n\n            const float PI = 3.1415925;\n            \n            void main(){\n                vec3 transformed = position;\n                \n                float theta = mod(aShift.x + aShift.y * uTime, PI * 1.0);\n                float phi = mod(aShift.z + aShift.y * uTime, PI * 1.0);\n                // transformed += vec3(sin(theta) * cos(phi)*0.1, cos(phi)*0.1, sin(theta) * cos(phi)*0.1) * aShift.w;\n\n                float a = cos(theta) * 0.025;\n                transformed.y =  uHeight + a - 0.025;\n\n                vec4 mvPosition = modelViewMatrix * vec4(transformed,1.0);\n\n                gl_PointSize = 2.0;\n\n                gl_Position = projectionMatrix * mvPosition;\n            }\n        ",fragmentShader:"\n            uniform vec3 uColor;\n            void main(){\n                gl_FragColor = vec4(uColor,1.0);\n            }\n        "});this.particlesMesh=new x(c,f),this.particlesMesh.scale.set(s,s,s),this.particlesMesh.onBeforeRender=()=>{f.uniforms.uTime.value+=.1},null==(r=this.scene)||r.add(this.particlesMesh)}updateParticles(){}animate(){var e,t;null==(e=this.stats)||e.begin(),this.timer=requestAnimationFrame((()=>{this.animate()})),this.renderer&&this.renderer.render(this.scene,this.camera),this.particles&&(this.particles.rotation.y+=.001),null==(t=this.stats)||t.end()}};return o((()=>{i.load()})),r((()=>{i.destroy()})),(e,t)=>(u(),l(c,null,[t[0]||(t[0]=h("div",{id:"webgl"},null,-1)),t[1]||(t[1]=h("div",{class:"title-name"},"模型切换",-1))],64))}});export{C as default};
