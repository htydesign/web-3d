var e=Object.defineProperty,i=(i,t,s)=>((i,t,s)=>t in i?e(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s)(i,"symbol"!=typeof t?t+"":t,s);import{aC as t,aG as s,aA as n,aH as a,aI as r,aJ as h,aF as o,az as d,aK as c,am as l,ah as w,aL as p,aM as g,ay as m,aN as y,aO as u,n as H,aP as W,aQ as x,P as z,a as v,J as L,M as P}from"./three-v4KXn-MH.js";class f{init(e,i,c){const l={type:"PointLight",x:0,y:0,z:0,color:16777215,intensity:1e4,distance:0,decay:2,shadowWidth:1024,shadowHeight:1024,shadowNear:.5,shadowFar:1e3,lightHelper:!1,...c};let w;switch(l.type){case"PointLight":w=new t(l.color,l.intensity,l.distance,l.decay),l.lightHelper&&e.add(new s(w,10));case"AmbientLight":w=new d(l.color,l.intensity);case"SpotLight":w=new o(l.color,l.intensity);case"RectAreaLight":w=new h(l.color,l.intensity);case"HemisphereLight":w=new r(l.color,l.color,l.intensity);case"DirectionalLight":w=new n(l.color,l.intensity),l.lightHelper&&e.add(new a(w,5));default:if(w=new t(l.color,l.intensity,l.distance,l.decay),l.lightHelper){const i=new s(w,10);e.add(i)}}w.position.set(l.x,l.y,l.z),w.castShadow=!0,e.add(w),w.shadow.mapSize.width=l.shadowWidth,w.shadow.mapSize.height=l.shadowHeight,w.shadow.camera.near=l.shadowNear,w.shadow.camera.far=l.shadowFar;const p=i.addFolder(l.type);return p.close(),p.add(w,"intensity",0,1e4,1),p.add(w.position,"x",-1e3,1e3,1),p.add(w.position,"y",-1e3,1e3,1),p.add(w.position,"z",-1e3,1e3,1),w}}class b{constructor(e=new H(0,75,100)){i(this,"scene"),i(this,"camera"),i(this,"innerWidth"),i(this,"innerHeight"),i(this,"renderer"),i(this,"controls"),i(this,"clock"),i(this,"stats"),i(this,"gui"),i(this,"axesHelper",new c(150)),i(this,"timer",0),this.innerWidth=window.innerWidth,this.innerHeight=window.innerHeight,this.scene=new l,this.camera=new w(75,innerWidth/innerHeight,.1,2e3),this.camera.position.copy(e),this.renderer=new p({antialias:!0}),this.renderer.setSize(this.innerWidth,this.innerHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=g,this.scene.add(this.axesHelper),this.controls=new m(this.camera,this.renderer.domElement),this.clock=new y,this.gui=new u,this.gui.close(),window.onresize=()=>{this.innerWidth=window.innerWidth,this.innerHeight=window.innerHeight,this.camera.aspect=this.innerWidth/this.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.innerWidth,this.innerHeight)}}gridHelper(e=1e3,i=10){var t;const s=new W(e,i);null==(t=this.scene)||t.add(s)}onResize(){this.camera.aspect=window.innerWidth/window.innerHeight}light(e={}){return(new f).init(this.scene,this.gui,e)}init(e){const i=document.querySelector(e);null==i||i.appendChild(this.renderer.domElement),this.stats=new x,null==i||i.appendChild(this.stats.dom)}plane(){var e;const i=new z(100,100),t=new v({color:65280,side:L}),s=new P(i,t);s.rotation.x=Math.PI/2,null==(e=this.scene)||e.add(s)}destroy(){var e,i,t,s;this.gui.close(),this.gui.destroy(),null==(e=this.renderer)||e.dispose(),null==(i=this.scene)||i.children.forEach((e=>{var i;null==(i=this.scene)||i.remove(e)})),null==(t=this.controls)||t.dispose(),null==(s=this.camera)||s.remove(),this.timer&&cancelAnimationFrame(this.timer)}}export{b as B,f as L};
